{"kind":"FETCH","data":{"headers":{"connection":"close","content-encoding":"gzip","content-type":"text/plain;charset=UTF-8","date":"Sat, 19 Aug 2023 20:35:40 GMT","transfer-encoding":"chunked","vary":"RSC, Next-Router-State-Tree, Next-Router-Prefetch, Accept-Encoding"},"body":"eyJjb3VudCI6MjEsInJvd3MiOlt7ImNvdW50cnkiOlsiVW5pdGVkIEtpbmdkb20iXSwiaW52ZXN0bWVudFR5cGUiOlsiRXF1aXR5IiwiRGVidCIsIlAyUCBsZW5kaW5nIiwiUmV3YXJkIl0sImluZHVzdHJ5IjpbIlNNRSJdLCJsYW5ndWFnZXMiOlsiRW5nbGlzaCJdLCJwYXltZW50T3B0aW9ucyI6WyJOL0EiXSwiaWQiOjU5MiwiY3JlYXRlZEF0IjoiMjAyMy0wOC0wOFQwOTozMjo1Ni4wMDBaIiwidXBkYXRlZEF0IjoiMjAyMy0wOC0wOFQwOTozMjo1Ni4wMDBaIiwibmFtZSI6IkNyb3dkMkZ1bmQiLCJsb2dvIjoiL3BsYXRmb3JtTG9nby9Dcm93ZDJGdW5kLnBuZyIsInllYXJGb3VuZGVkIjoiMjAxNCIsImxpY2Vuc2VOdW1iZXIiOiIwODQ3MjY4NyIsInJldmlld3MiOm51bGwsIndlYnNpdGUiOiJodHRwczovL3d3dy5jcm93ZDJmdW5kLmNvbS9yZWdpc3Rlcj9yYz1ucHZ6bjkiLCJtaW5pbXVtSW52ZXN0bWVudCI6IjEwMCBHQlAiLCJhZHZlcnRpc2VkUmV0dXJuIjoiNi0xOCUiLCJpbnZlc3RvcnMiOiJOL0EiLCJ0b3RhbEZ1bmRpbmdWb2x1bWUiOiJOL0EiLCJhdmVyYWdlTG9hbkR1cmF0aW9uIjoiTi9BIiwiZGVzY3JpcHRpb24iOiJDcm93ZDJGdW5kIGlzIGEgY3Jvd2RmdW5kaW5nIHBsYXRmb3JtIGJhc2VkIGluIHRoZSBVbml0ZWQgS2luZ2RvbSB0aGF0IG9mZmVycyB2YXJpb3VzIGludmVzdG1lbnQgb3B0aW9ucyB0byBpbmRpdmlkdWFscy4gRm91bmRlZCBpbiAyMDE0LCBpdCBwcm92aWRlcyBvcHBvcnR1bml0aWVzIGZvciBlcXVpdHksIGRlYnQsIHBlZXItdG8tcGVlciBsZW5kaW5nLCBhbmQgcmV3YXJkLWJhc2VkIGludmVzdG1lbnRzLiBUaGUgcGxhdGZvcm0gcHJpbWFyaWx5IHRhcmdldHMgc21hbGwgYW5kIG1lZGl1bS1zaXplZCBlbnRlcnByaXNlcyAoU01FcykgYXMgdGhlIGluZHVzdHJ5IGl0IHNlcnZlcy5cblxuT25lIG9mIHRoZSB1bmlxdWUgYXNwZWN0cyBvZiBDcm93ZDJGdW5kIGlzIHRoYXQgaXQgYWxsb3dzIGludmVzdG9ycyB0byBjaG9vc2UgdGhlIEJyaXRpc2ggZW50cmVwcmVuZXVycyB0aGV5IHdhbnQgdG8gc3VwcG9ydC4gVGhpcyBmZWF0dXJlIHNldHMgaXQgYXBhcnQgZnJvbSBvdGhlciBpbnZlc3RtZW50IHBsYXRmb3JtcyBpbiB0aGUgVUsuIFNpbmNlIGl0cyBlc3RhYmxpc2htZW50LCBDcm93ZDJGdW5kIGhhcyBwYWlkIG91dCBvdmVyIMKjNiBtaWxsaW9uIGluIGludGVyZXN0IHRvIGludmVzdG9ycyBmcm9tIG1vcmUgdGhhbiA2MTcgZGlzdGluY3QgaW52ZXN0bWVudCBvcHBvcnR1bml0aWVzLCBzaG93Y2FzaW5nIGl0cyBzdWNjZXNzIGFuZCByZWxpYWJpbGl0eS5cblxuVGhlIHBsYXRmb3JtJ3Mgd2Vic2l0ZSwgYXZhaWxhYmxlIGluIEVuZ2xpc2gsIHByb3ZpZGVzIGFsbCB0aGUgbmVjZXNzYXJ5IGluZm9ybWF0aW9uIGFuZCByZXNvdXJjZXMgZm9yIHBvdGVudGlhbCBpbnZlc3RvcnMuIFRvIGdldCBzdGFydGVkLCBhIG1pbmltdW0gaW52ZXN0bWVudCBvZiDCozEwMCBpcyByZXF1aXJlZCwgZW5hYmxpbmcgaW52ZXN0b3JzIHdpdGggdmFyaW91cyBmaW5hbmNpYWwgYmFja2dyb3VuZHMgdG8gcGFydGljaXBhdGUuIENyb3dkMkZ1bmQgYWR2ZXJ0aXNlcyBhIHJldHVybiByYW5nZSBvZiA2LTE4JSwgb2ZmZXJpbmcgaW52ZXN0b3JzIHBvdGVudGlhbGx5IGF0dHJhY3RpdmUgcmV0dXJucyBvbiB0aGVpciBpbnZlc3RtZW50cy5cblxuQ3Jvd2QyRnVuZCBjYXRlcnMgdG8gYm90aCByZXRhaWwgYW5kIGFjY3JlZGl0ZWQgaW52ZXN0b3JzLCBlbnN1cmluZyB0aGF0IGluZGl2aWR1YWxzIHdpdGggZGlmZmVyZW50IGludmVzdG1lbnQgcmVxdWlyZW1lbnRzIGFuZCBleHBlcmllbmNlIGxldmVscyBjYW4gcGFydGljaXBhdGUuIFdoZXRoZXIgb25lIGlzIG5ldyB0byBpbnZlc3Rpbmcgb3IgYW4gZXN0YWJsaXNoZWQgaW52ZXN0b3IsIENyb3dkMkZ1bmQgb2ZmZXJzIGEgZGl2ZXJzZSByYW5nZSBvZiBpbnZlc3RtZW50IG9wcG9ydHVuaXRpZXMgdGhhdCBjYW4gc3VpdCBkaWZmZXJlbnQgcHJlZmVyZW5jZXMgYW5kIHJpc2sgYXBwZXRpdGVzLlxuXG5PdmVyYWxsLCBDcm93ZDJGdW5kIGlzIGEgcGlvbmVlcmluZyBjcm93ZGZ1bmRpbmcgcGxhdGZvcm0gaW4gdGhlIFVuaXRlZCBLaW5nZG9tLCBicmlkZ2luZyB0aGUgZ2FwIGJldHdlZW4gaW52ZXN0b3JzIGFuZCBleGNlcHRpb25hbCBCcml0aXNoIGVudHJlcHJlbmV1cnMgaW4gbmVlZCBvZiBmaW5hbmNpYWwgc3VwcG9ydC4iLCJyZWd1bGF0ZWQiOmZhbHNlLCJidXliYWNrR3VhcmFudGVlIjpmYWxzZSwicHVibGljU3RhdGlzdGljcyI6ZmFsc2UsInNpZ251cEJvbnVzIjpmYWxzZSwic2Vjb25kYXJ5TWFya2V0Ijp0cnVlLCJhdXRvSW52ZXN0IjpmYWxzZSwid2hvQ2FuSW52ZXN0IjoiUmV0YWlsIEludmVzdG9ycywgQWNjcmVkaXRlZCBJbnZlc3RvcnMiLCJzbHVnIjoiY3Jvd2QyZnVuZCJ9LHsiY291bnRyeSI6WyJBdXN0cmlhIiwiR2VybWFueSIsIlN3aXR6ZXJsYW5kIl0sImludmVzdG1lbnRUeXBlIjpbIkVxdWl0eSIsIkRlYnQiXSwiaW5kdXN0cnkiOlsiUmVhbCBlc3RhdGUiXSwibGFuZ3VhZ2VzIjpbIkVuZ2xpc2giLCJHZXJtYW4iXSwicGF5bWVudE9wdGlvbnMiOlsiQ3JlZGl0IGNhcmQiLCJCYW5rIHRyYW5zZmVyIl0sImlkIjo1OTEsImNyZWF0ZWRBdCI6IjIwMjMtMDgtMDhUMDk6MzI6NTYuMDAwWiIsInVwZGF0ZWRBdCI6IjIwMjMtMDgtMDhUMDk6MzI6NTYuMDAwWiIsIm5hbWUiOiJSZW5kaXR5IiwibG9nbyI6Ii9wbGF0Zm9ybUxvZ28vUmVuZGl0eS5wbmciLCJ5ZWFyRm91bmRlZCI6IjIwMTUiLCJsaWNlbnNlTnVtYmVyIjoiRk4gNDM4NDI1IHYiLCJyZXZpZXdzIjpudWxsLCJ3ZWJzaXRlIjoiaHR0cHM6Ly9yZW5kaXR5LmNvbS9lbj9jbGlja19pZD05ODJkYjg0Yi0zYTc5LTRjM2MtYTBkYS1jNTk1NDg2ZDliNzYiLCJtaW5pbXVtSW52ZXN0bWVudCI6IjEwMCBFVVIiLCJhZHZlcnRpc2VkUmV0dXJuIjoiOC41JSIsImludmVzdG9ycyI6Ik4vQSIsInRvdGFsRnVuZGluZ1ZvbHVtZSI6Ik4vQSIsImF2ZXJhZ2VMb2FuRHVyYXRpb24iOiIxOSBtb250aHMiLCJkZXNjcmlwdGlvbiI6IlJlbmRpdHkgaXMgYSBjcm93ZGZ1bmRpbmcgcGxhdGZvcm0gdGhhdCBvcGVyYXRlcyBpbiBBdXN0cmlhLCBHZXJtYW55LCBhbmQgU3dpdHplcmxhbmQuIEZvdW5kZWQgaW4gMjAxNSwgaXQgc3BlY2lhbGl6ZXMgaW4gcmVhbCBlc3RhdGUgaW52ZXN0bWVudHMgYW5kIG9mZmVycyB0d28gdHlwZXMgb2YgaW52ZXN0bWVudCBvcHBvcnR1bml0aWVzOiBlcXVpdHkgYW5kIGRlYnQuIFRoZSBwbGF0Zm9ybSBpcyBhdmFpbGFibGUgaW4gRW5nbGlzaCBhbmQgR2VybWFuLCBjYXRlcmluZyB0byBhIHdpZGUgcmFuZ2Ugb2YgaW52ZXN0b3JzLlxuXG5SZW5kaXR5IHN0YW5kcyBvdXQgaW4gdGhlIEV1cm9wZWFuIHJlYWwgZXN0YXRlIG1hcmtldCBhcyBhIHBpb25lZXIgYW5kIGFpbXMgdG8gcmV2b2x1dGlvbml6ZSB0aGUgd2F5IHBlb3BsZSBpbnZlc3QgaW4gcmVhbCBlc3RhdGUuIEl0IHByb3ZpZGVzIGludmVzdG9ycyB3aXRoIHRoZSBhYmlsaXR5IHRvIGNyZWF0ZSBjdXN0b21pemVkIHBvcnRmb2xpb3MgYnkgc2VsZWN0aW5nIGZyb20gYSBkaXZlcnNlIHJhbmdlIG9mIHJlYWwgZXN0YXRlIHByb2plY3RzLlxuXG5UbyBwYXJ0aWNpcGF0ZSwgaW5kaXZpZHVhbHMgYW5kIGNvbXBhbmllcyBtdXN0IGhhdmUgYSBiYW5rIGFjY291bnQgd2l0aGluIHRoZSBFdXJvcGVhbiBVbmlvbiAoRVUpIGFuZCBiZSBhdCBsZWFzdCAxOCB5ZWFycyBvbGQuIFRoZSBtaW5pbXVtIGludmVzdG1lbnQgcmVxdWlyZWQgaXMgMTAwIEVVUiwgbWFraW5nIGl0IGFjY2Vzc2libGUgdG8gYSB3aWRlIHJhbmdlIG9mIGludmVzdG9ycy5cblxuT25lIG9mIHRoZSBrZXkgYXR0cmFjdGlvbnMgb2YgUmVuZGl0eSBpcyB0aGUgYWR2ZXJ0aXNlZCByZXR1cm4gb2YgOC41JSwgd2hpY2ggcHJvdmlkZXMgdGhlIHBvdGVudGlhbCBmb3Igc2lnbmlmaWNhbnQgcHJvZml0cyBmb3IgdGhvc2Ugd2hvIGNob29zZSB0byBpbnZlc3QgaW4gdGhlIHBsYXRmb3JtLiBUaGUgcGxhdGZvcm0ncyB3ZWJzaXRlIG9mZmVycyBjb21wcmVoZW5zaXZlIGluZm9ybWF0aW9uIGFib3V0IHRoZSBpbnZlc3RtZW50IG9wcG9ydHVuaXRpZXMgYXZhaWxhYmxlIGFuZCBhbGxvd3MgcG90ZW50aWFsIGludmVzdG9ycyB0byBsZWFybiBtb3JlIGFib3V0IHRoZSBwcm9qZWN0cy5cblxuT3ZlcmFsbCwgUmVuZGl0eSBpcyBhIHJlcHV0YWJsZSBjcm93ZGZ1bmRpbmcgcGxhdGZvcm0gdGhhdCBvZmZlcnMgYW4gaW5ub3ZhdGl2ZSBhcHByb2FjaCB0byBpbnZlc3RpbmcgaW4gcmVhbCBlc3RhdGUuIFdpdGggaXRzIHVzZXItZnJpZW5kbHkgd2Vic2l0ZSwgZGl2ZXJzZSBwb3J0Zm9saW8gb3B0aW9ucywgYW5kIGF0dHJhY3RpdmUgcmV0dXJucywgaXQgcHJvdmlkZXMgYSBjb21wZWxsaW5nIHBsYXRmb3JtIGZvciBpbmRpdmlkdWFscyBhbmQgY29tcGFuaWVzIGxvb2tpbmcgdG8gaW52ZXN0IGluIHRoZSByZWFsIGVzdGF0ZSBtYXJrZXQgd2l0aGluIEF1c3RyaWEsIEdlcm1hbnksIGFuZCBTd2l0emVybGFuZC4iLCJyZWd1bGF0ZWQiOnRydWUsImJ1eWJhY2tHdWFyYW50ZWUiOmZhbHNlLCJwdWJsaWNTdGF0aXN0aWNzIjp0cnVlLCJzaWdudXBCb251cyI6dHJ1ZSwic2Vjb25kYXJ5TWFya2V0IjpmYWxzZSwiYXV0b0ludmVzdCI6dHJ1ZSwid2hvQ2FuSW52ZXN0IjoiQW55IHBlcnNvbiB3aXRoIGEgYmFuayBhY2NvdW50IHdpdGhpbiB0aGUgRXVyb3BlYW4gVW5pb24gKEVVKSBjYW4gbWFrZSBpbnZlc3RtZW50cyBvbiBvdXIgcGxhdGZvcm0gdXBvbiByZWFjaGluZyB0aGUgYWdlIG9mIDE4LkNvbXBhbmllcyB3aXRoIGEgYmFuayBhY2NvdW50IHdpdGhpbiB0aGUgRXVyb3BlYW4gVW5pb24gKEVVKSBjYW4gYWxzbyBpbnZlc3QuIiwic2x1ZyI6InJlbmRpdHkifSx7ImNvdW50cnkiOlsiVW5pdGVkIEtpbmdkb20iXSwiaW52ZXN0bWVudFR5cGUiOlsiRXF1aXR5IiwiRGVidCJdLCJpbmR1c3RyeSI6WyJSZWFsIGVzdGF0ZSJdLCJsYW5ndWFnZXMiOlsiRW5nbGlzaCJdLCJwYXltZW50T3B0aW9ucyI6WyJOL0EiXSwiaWQiOjU3NCwiY3JlYXRlZEF0IjoiMjAyMy0wOC0wOFQwOTozMjo1Ni4wMDBaIiwidXBkYXRlZEF0IjoiMjAyMy0wOC0wOFQwOTozMjo1Ni4wMDBaIiwibmFtZSI6IlNob2ppbiIsImxvZ28iOiIvcGxhdGZvcm1Mb2dvL1Nob2ppbi5wbmciLCJ5ZWFyRm91bmRlZCI6IjIwMDkiLCJsaWNlbnNlTnVtYmVyIjoiRkNBIEZSTjogNzE2NzY1IiwicmV2aWV3cyI6bnVsbCwid2Vic2l0ZSI6Imh0dHBzOi8vd3d3LnNob2ppbi5jby51ay8iLCJtaW5pbXVtSW52ZXN0bWVudCI6IjUsMDAwIEdCUCIsImFkdmVydGlzZWRSZXR1cm4iOiI4JSAtIDIyLjUlIHAuYS4iLCJpbnZlc3RvcnMiOiJOL0EiLCJ0b3RhbEZ1bmRpbmdWb2x1bWUiOiJOL0EiLCJhdmVyYWdlTG9hbkR1cmF0aW9uIjoiTi9BIiwiZGVzY3JpcHRpb24iOiJTaG9qaW4gaXMgYSBjcm93ZGZ1bmRpbmcgcGxhdGZvcm0gYmFzZWQgaW4gdGhlIFVuaXRlZCBLaW5nZG9tIHRoYXQgc3BlY2lhbGl6ZXMgaW4gcmVhbCBlc3RhdGUgaW52ZXN0bWVudHMuIEZvdW5kZWQgaW4gMjAwOSwgdGhlIHBsYXRmb3JtIG9mZmVycyBpbnZlc3RvcnMgdGhlIG9wcG9ydHVuaXR5IHRvIGludmVzdCBpbiB2YXJpb3VzIHJlYWwgZXN0YXRlIHByb2plY3RzIGluIHRoZSBVSy4gU2hvamluIGFpbXMgdG8gcHJvdmlkZSBhY2Nlc3MgdG8gaW5zdGl0dXRpb25hbC1ncmFkZSBpbnZlc3RtZW50IG9wcG9ydHVuaXRpZXMgaW4gdGhlIFVLIHJlYWwgZXN0YXRlIHNlY3RvciB0byBpbnZlc3RvcnMgZnJvbSBhcm91bmQgdGhlIHdvcmxkLlxuXG5JbnZlc3RvcnMgb24gdGhlIFNob2ppbiBwbGF0Zm9ybSBjYW4gcGFydGljaXBhdGUgaW4gZXF1aXR5IGFuZCBkZWJ0IGludmVzdG1lbnRzIGluIHJlYWwgZXN0YXRlIHByb2plY3RzLiBUaGUgcGxhdGZvcm0gc3VwcG9ydHMgYm90aCBpbmRpdmlkdWFsIGFuZCBwcm9mZXNzaW9uYWwgaW52ZXN0b3JzLCBpbmNsdWRpbmcgcmV0YWlsIGludmVzdG9ycywgc2VsZi1jZXJ0aWZpZWQgc29waGlzdGljYXRlZCBpbnZlc3RvcnMsIGhpZ2ggbmV0IHdvcnRoIGluZGl2aWR1YWxzLCBjb21wYW5pZXMsIGFuZCB0cnVzdHMuXG5cbldpdGggYSBtaW5pbXVtIGludmVzdG1lbnQgb2YgwqM1LDAwMCwgU2hvamluIGFsbG93cyBpbnZlc3RvcnMgdG8gZGl2ZXJzaWZ5IHRoZWlyIHBvcnRmb2xpbyBhbmQgZ2FpbiBleHBvc3VyZSB0byB0aGUgcmVhbCBlc3RhdGUgbWFya2V0LiBUaGUgcGxhdGZvcm0gYWR2ZXJ0aXNlcyBhIHBvdGVudGlhbCByZXR1cm4gcmFuZ2luZyBmcm9tIDglIHRvIDIyLjUlIHBlciBhbm51bSwgbWFraW5nIGl0IGFuIGFwcGVhbGluZyBvcHRpb24gZm9yIGludmVzdG9ycyBsb29raW5nIGZvciBhdHRyYWN0aXZlIGludmVzdG1lbnQgb3Bwb3J0dW5pdGllcy5cblxuU2hvamluJ3Mgd2Vic2l0ZSBpcyBhdmFpbGFibGUgaW4gRW5nbGlzaCwgY2F0ZXJpbmcgdG8gYSB3aWRlIHJhbmdlIG9mIGludmVzdG9ycy4gVGhpcyBhbGxvd3MgaW52ZXN0b3JzIGZyb20gZGlmZmVyZW50IHBhcnRzIG9mIHRoZSB3b3JsZCB0byBlYXNpbHkgbmF2aWdhdGUgYW5kIHVuZGVyc3RhbmQgdGhlIGludmVzdG1lbnQgb3Bwb3J0dW5pdGllcyBwcm92aWRlZCBieSB0aGUgcGxhdGZvcm0uXG5cbkluIHN1bW1hcnksIFNob2ppbiBpcyBhIFVLLWJhc2VkIGNyb3dkZnVuZGluZyBwbGF0Zm9ybSB0aGF0IG9mZmVycyBpbnZlc3RvcnMgdGhlIGNoYW5jZSB0byBpbnZlc3QgaW4gcmVhbCBlc3RhdGUgcHJvamVjdHMuIFdpdGggaXRzIGZvY3VzIG9uIHRoZSByZWFsIGVzdGF0ZSBpbmR1c3RyeSwgZGl2ZXJzZSBpbnZlc3RtZW50IHR5cGVzLCBhbmQgYSB3aWRlIHJhbmdlIG9mIGludmVzdG9ycyBpdCBzZXJ2ZXMsIFNob2ppbiBwcm92aWRlcyBhY2Nlc3NpYmxlIGFuZCBhdHRyYWN0aXZlIGludmVzdG1lbnQgb3Bwb3J0dW5pdGllcyBpbiB0aGUgVUsgcmVhbCBlc3RhdGUgc2VjdG9yLiIsInJlZ3VsYXRlZCI6ZmFsc2UsImJ1eWJhY2tHdWFyYW50ZWUiOmZhbHNlLCJwdWJsaWNTdGF0aXN0aWNzIjpmYWxzZSwic2lnbnVwQm9udXMiOmZhbHNlLCJzZWNvbmRhcnlNYXJrZXQiOnRydWUsImF1dG9JbnZlc3QiOmZhbHNlLCJ3aG9DYW5JbnZlc3QiOiJJbmRpdmlkdWFsIEludmVzdG9ycyAoUmV0YWlsLCBTZWxmLWNlcnRpZmllZCBTb3BoaXN0aWNhdGVkLCBIaWdoIE5ldCBXb3J0aCksIFByb2Zlc3Npb25hbCBJbnZlc3RvcnMgKENvbXBhbmllcyksIGFuZCBUcnVzdHMiLCJzbHVnIjoic2hvamluIn0seyJjb3VudHJ5IjpbIkF1c3RyaWEiLCJGaW5sYW5kIiwiU3dlZGVuIl0sImludmVzdG1lbnRUeXBlIjpbIkVxdWl0eSIsIkRlYnQiXSwiaW5kdXN0cnkiOlsiUmVhbCBlc3RhdGUiXSwibGFuZ3VhZ2VzIjpbIkVuZ2xpc2giLCJHZXJtYW4iLCJGaW5uaXNoIl0sInBheW1lbnRPcHRpb25zIjpbIk4vQSJdLCJpZCI6NTY4LCJjcmVhdGVkQXQiOiIyMDIzLTA4LTA4VDA5OjMyOjU2LjAwMFoiLCJ1cGRhdGVkQXQiOiIyMDIzLTA4LTA4VDA5OjMyOjU2LjAwMFoiLCJuYW1lIjoiSW52ZXNkb3IiLCJsb2dvIjoiL3BsYXRmb3JtTG9nby9JbnZlc2Rvci5wbmciLCJ5ZWFyRm91bmRlZCI6IjIwMTIiLCJsaWNlbnNlTnVtYmVyIjoiRklWQSAzOS8wMi4wMi4wMC8yMDE0IiwicmV2aWV3cyI6bnVsbCwid2Vic2l0ZSI6Imh0dHBzOi8vd3d3LmludmVzZG9yLmNvbS8iLCJtaW5pbXVtSW52ZXN0bWVudCI6IjUwMCBFVVIiLCJhZHZlcnRpc2VkUmV0dXJuIjoiNi40OSUiLCJpbnZlc3RvcnMiOiJOL0EiLCJ0b3RhbEZ1bmRpbmdWb2x1bWUiOiJOL0EiLCJhdmVyYWdlTG9hbkR1cmF0aW9uIjoiTi9BIiwiZGVzY3JpcHRpb24iOiJJbnZlc2RvciBpcyBhbiBlcXVpdHktYmFzZWQgY3Jvd2RmdW5kaW5nIHBsYXRmb3JtIHRoYXQgb3BlcmF0ZXMgaW4gQXVzdHJpYSwgRmlubGFuZCwgYW5kIFN3ZWRlbi4gRm91bmRlZCBpbiAyMDEyIGFuZCBoZWFkcXVhcnRlcmVkIGluIEhlbHNpbmtpLCBGaW5sYW5kLCBJbnZlc2RvciBpcyBrbm93biBhcyB0aGUgZmlyc3QgZXF1aXR5LWJhc2VkIGNyb3dkZnVuZGluZyBzZXJ2aWNlIGluIE5vcnRoZXJuIEV1cm9wZS4gVGhlIHBsYXRmb3JtIGZhY2lsaXRhdGVzIGludmVzdG1lbnRzIGluIHRoZSByZWFsIGVzdGF0ZSBpbmR1c3RyeS5cblxuV2l0aCBhIHVzZXItZnJpZW5kbHkgd2Vic2l0ZSBhdmFpbGFibGUgaW4gRW5nbGlzaCwgR2VybWFuLCBhbmQgRmlubmlzaCwgSW52ZXNkb3Igd2VsY29tZXMgaW52ZXN0b3JzIGZyb20gZGl2ZXJzZSBsaW5ndWlzdGljIGJhY2tncm91bmRzLCBlbnN1cmluZyBlYXN5IGFjY2VzcyBhbmQgY29tbXVuaWNhdGlvbi4gVGhlIG1pbmltdW0gaW52ZXN0bWVudCByZXF1aXJlZCBvbiB0aGUgcGxhdGZvcm0gaXMgNTAwIEVVUiwgbWFraW5nIGl0IGFjY2Vzc2libGUgdG8gYSB3aWRlIHJhbmdlIG9mIGludmVzdG9ycy5cblxuSW52ZXNkb3IgcHJvdmlkZXMgYW4gYWR2ZXJ0aXNlZCByZXR1cm4gb2YgNi40OSUsIGF0dHJhY3RpbmcgaW5kaXZpZHVhbHMgbG9va2luZyBmb3IgaW52ZXN0bWVudCBvcHBvcnR1bml0aWVzIGluIHRoZSByZWFsIGVzdGF0ZSBzZWN0b3IuIFRoZSBwbGF0Zm9ybSBvZmZlcnMgdHdvIHR5cGVzIG9mIGludmVzdG1lbnQgb3B0aW9uczogZXF1aXR5IGFuZCBkZWJ0LiBUaGlzIGFsbG93cyBpbnZlc3RvcnMgdG8gY2hvb3NlIHRoZSB0eXBlIG9mIGludmVzdG1lbnQgdGhhdCBzdWl0cyB0aGVpciBwcmVmZXJlbmNlcyBhbmQgcmlzayBhcHBldGl0ZS5cblxuRnVuY3Rpb25pbmcgYXMgYSBtYXRjaGluZyBzZXJ2aWNlLCBJbnZlc2RvciBjb25uZWN0cyBpbnZlc3RvcnMgaW50ZXJlc3RlZCBpbiByZWFsIGVzdGF0ZSBwcm9qZWN0cyB3aXRoIGRldmVsb3BlcnMgYW5kIGNvbXBhbmllcyBzZWVraW5nIGZ1bmRpbmcuIEJ5IHByb3ZpZGluZyBhIHRyYW5zcGFyZW50IGFuZCBzZWN1cmUgcGxhdGZvcm0sIEludmVzZG9yIGVuYWJsZXMgaW5kaXZpZHVhbHMgdG8gcGFydGljaXBhdGUgaW4gcmVhbCBlc3RhdGUgaW52ZXN0bWVudHMgd2l0aG91dCB0aGUgbmVlZCBmb3IgbGFyZ2UgYW1vdW50cyBvZiBjYXBpdGFsIG9yIHByaW9yIGV4cGVyaWVuY2UgaW4gdGhlIGluZHVzdHJ5LlxuXG5JbiBzdW1tYXJ5LCBJbnZlc2RvciBpcyBhbiBlc3RhYmxpc2hlZCBjcm93ZGZ1bmRpbmcgcGxhdGZvcm0gdGhhdCBoYXMgcmV2b2x1dGlvbml6ZWQgdGhlIGVxdWl0eS1iYXNlZCBjcm93ZGZ1bmRpbmcgc2NlbmUgaW4gTm9ydGhlcm4gRXVyb3BlLiBXaXRoIGEgZm9jdXMgb24gcmVhbCBlc3RhdGUgaW52ZXN0bWVudHMsIG11bHRpbGluZ3VhbCBzdXBwb3J0LCBhbmQgYSBsb3cgbWluaW11bSBpbnZlc3RtZW50IHJlcXVpcmVtZW50LCBJbnZlc2RvciBwcm92aWRlcyBhIHVuaXF1ZSBvcHBvcnR1bml0eSBmb3IgaW52ZXN0b3JzIHRvIGRpdmVyc2lmeSB0aGVpciBwb3J0Zm9saW9zIGFuZCBwb3RlbnRpYWxseSBlYXJuIGF0dHJhY3RpdmUgcmV0dXJucy4iLCJyZWd1bGF0ZWQiOmZhbHNlLCJidXliYWNrR3VhcmFudGVlIjpmYWxzZSwicHVibGljU3RhdGlzdGljcyI6ZmFsc2UsInNpZ251cEJvbnVzIjpmYWxzZSwic2Vjb25kYXJ5TWFya2V0IjpmYWxzZSwiYXV0b0ludmVzdCI6ZmFsc2UsIndob0NhbkludmVzdCI6Ik4vQSIsInNsdWciOiJpbnZlc2RvciJ9LHsiY291bnRyeSI6WyJDcm9hdGlhIl0sImludmVzdG1lbnRUeXBlIjpbIkVxdWl0eSIsIkRlYnQiLCJQMlAgbGVuZGluZyIsIlJld2FyZCIsIkRvbmF0aW9uIiwiTWluaS1ib25kcyJdLCJpbmR1c3RyeSI6WyJSZWFsIGVzdGF0ZSIsIlN0YXJ0dXBzIiwiU01FIiwiU3VzdGFpbmFiaWxpdHkiLCJMaXRpZ2F0aW9uIiwiR3JlZW4gZW5lcmd5IiwiSGVhbHRoICYgU2NpZW5jZSIsIkxvZ2lzdGljcyIsIlBlcnNvbmFsIGxvYW5zIiwiQXJ0IiwiTW9ydGdhZ2VzIiwiU29jaWFsIGNhdXNlIiwiRWR1Y2F0aW9uIiwiRmFybWluZyIsIlNwb3J0IiwiTWFyaXRpbWUiXSwibGFuZ3VhZ2VzIjpbIkJ1bGdhcmlhbiIsIkNyb2F0aWFuIiwiQ3plY2giLCJEYW5pc2giLCJFbmdsaXNoIiwiRmlubmlzaCIsIkZyZW5jaCIsIkdlcm1hbiIsIkdyZWVrIiwiSHVuZ2FyaWFuIiwiSXRhbGlhbiIsIlBvbGlzaCIsIlBvcnR1Z3Vlc2UiLCJSb21hbmlhbiIsIlNsb3ZhayIsIlNsb3ZlbmlhbiIsIlNwYW5pc2giLCJTd2VkaXNoIl0sInBheW1lbnRPcHRpb25zIjpbIkNyZWRpdCBjYXJkIiwiQmFuayB0cmFuc2ZlciIsIkRpcmVjdCBkZWJpdCIsIlBheVBhbCIsIkNyeXB0b2N1cnJlbmN5Il0sImlkIjo1NDcsImNyZWF0ZWRBdCI6IjIwMjMtMDgtMDhUMDk6MzI6NTYuMDAwWiIsInVwZGF0ZWRBdCI6IjIwMjMtMDgtMDhUMDk6MzI6NTYuMDAwWiIsIm5hbWUiOiJCb25hIEZpZGVzIEludmVzdCIsImxvZ28iOiIvcGxhdGZvcm1Mb2dvL0JvbmEgRmlkZXMgSW52ZXN0LnBuZyIsInllYXJGb3VuZGVkIjoiMjAxNCIsImxpY2Vuc2VOdW1iZXIiOm51bGwsInJldmlld3MiOm51bGwsIndlYnNpdGUiOiJodHRwczovL2JvbmFmaWRlc2ludmVzdC5ldS8iLCJtaW5pbXVtSW52ZXN0bWVudCI6IjEgRVVSIiwiYWR2ZXJ0aXNlZFJldHVybiI6IjQlIiwiaW52ZXN0b3JzIjoiTi9BIiwidG90YWxGdW5kaW5nVm9sdW1lIjoiTi9BIiwiYXZlcmFnZUxvYW5EdXJhdGlvbiI6Ik4vQSIsImRlc2NyaXB0aW9uIjoiQW55IGluZGl2aWR1YWwgb3Igb3JnYW5pemF0aW9uIGZyb20gYXJvdW5kIHRoZSB3b3JsZCBjYW4gaW52ZXN0IHRocm91Z2ggQm9uYSBGaWRlcyBJbnZlc3QuIFRoZSBwbGF0Zm9ybSBvZmZlcnMgYSB3aWRlIHJhbmdlIG9mIGludmVzdG1lbnQgdHlwZXMgaW5jbHVkaW5nIGVxdWl0eSwgZGVidCwgUDJQIGxlbmRpbmcsIHJld2FyZC1iYXNlZCBjcm93ZGZ1bmRpbmcsIGRvbmF0aW9uLWJhc2VkIGNyb3dkZnVuZGluZywgYW5kIG1pbmktYm9uZHMuIFxuXG5Cb25hIEZpZGVzIEludmVzdCBjYXRlcnMgdG8gbXVsdGlwbGUgaW5kdXN0cmllcywgbWFraW5nIGl0IHN1aXRhYmxlIGZvciBpbnZlc3RtZW50cyBpbiByZWFsIGVzdGF0ZSwgc3RhcnR1cHMsIHNtYWxsIGFuZCBtZWRpdW0gZW50ZXJwcmlzZXMgKFNNRXMpLCBzdXN0YWluYWJpbGl0eSBwcm9qZWN0cywgbGl0aWdhdGlvbiBmdW5kaW5nLCBncmVlbiBlbmVyZ3kgaW5pdGlhdGl2ZXMsIGhlYWx0aCBhbmQgc2NpZW5jZSB2ZW50dXJlcywgbG9naXN0aWNzIHByb2plY3RzLCBwZXJzb25hbCBsb2FucywgYXJ0IGNhbXBhaWducywgbW9ydGdhZ2VzLCBzb2NpYWwgY2F1c2VzLCBlZHVjYXRpb24sIGZhcm1pbmcsIHNwb3J0cywgYW5kIG1hcml0aW1lIHZlbnR1cmVzLiBcblxuRXN0YWJsaXNoZWQgaW4gMjAxNCBhbmQgYmFzZWQgaW4gQ3JvYXRpYSwgQm9uYSBGaWRlcyBJbnZlc3QgaGFzIGEgdXNlci1mcmllbmRseSB3ZWJzaXRlIHRoYXQgcHJvdmlkZXMgaW5mb3JtYXRpb24gaW4gbXVsdGlwbGUgbGFuZ3VhZ2VzLCBpbmNsdWRpbmcgQnVsZ2FyaWFuLCBDcm9hdGlhbiwgQ3plY2gsIERhbmlzaCwgRW5nbGlzaCwgRmlubmlzaCwgRnJlbmNoLCBHZXJtYW4sIEdyZWVrLCBIdW5nYXJpYW4sIEl0YWxpYW4sIFBvbGlzaCwgUG9ydHVndWVzZSwgUm9tYW5pYW4sIFNsb3ZhaywgU2xvdmVuaWFuLCBTcGFuaXNoLCBhbmQgU3dlZGlzaC4gXG5cbldpdGggYSBtaW5pbXVtIGludmVzdG1lbnQgb2YganVzdCAxIEVVUiwgQm9uYSBGaWRlcyBJbnZlc3QgYWltcyB0byBtYWtlIGNyb3dkZnVuZGluZyBhY2Nlc3NpYmxlIHRvIGEgd2lkZSByYW5nZSBvZiBpbnZlc3RvcnMsIGZyb20gaW5kaXZpZHVhbHMgdG8gaW5zdGl0dXRpb25zLiBUaGUgcGxhdGZvcm0gb2ZmZXJzIGFuIGFkdmVydGlzZWQgcmV0dXJuIG9mIDAuMDQuXG5cbkluIHN1bW1hcnksIEJvbmEgRmlkZXMgSW52ZXN0IGlzIGFuIEVVLWJhc2VkIGZpbnRlY2ggcGxhdGZvcm0gdGhhdCBmYWNpbGl0YXRlcyBjcm93ZGZ1bmRpbmcgZm9yIGluZGl2aWR1YWxzIGFuZCBvcmdhbml6YXRpb25zIHdvcmxkd2lkZS4gV2l0aCBpdHMgZGl2ZXJzZSByYW5nZSBvZiBpbnZlc3RtZW50IG9wdGlvbnMgYW5kIGluZHVzdHJ5IHByZXNlbmNlLCBpdCBvZmZlcnMgb3Bwb3J0dW5pdGllcyBmb3IgaW52ZXN0b3JzIHRvIHN1cHBvcnQgYW5kIGZ1bmQgcHJvamVjdHMgaW4gdmFyaW91cyBzZWN0b3JzLiIsInJlZ3VsYXRlZCI6dHJ1ZSwiYnV5YmFja0d1YXJhbnRlZSI6ZmFsc2UsInB1YmxpY1N0YXRpc3RpY3MiOmZhbHNlLCJzaWdudXBCb251cyI6ZmFsc2UsInNlY29uZGFyeU1hcmtldCI6ZmFsc2UsImF1dG9JbnZlc3QiOmZhbHNlLCJ3aG9DYW5JbnZlc3QiOm51bGwsInNsdWciOiJib25hZmlkZXNpbnZlc3QifSx7ImNvdW50cnkiOlsiRnJhbmNlIl0sImludmVzdG1lbnRUeXBlIjpbIkVxdWl0eSIsIkRlYnQiXSwiaW5kdXN0cnkiOlsiR3JlZW4gZW5lcmd5Il0sImxhbmd1YWdlcyI6WyJGcmVuY2giLCJTcGFuaXNoIl0sInBheW1lbnRPcHRpb25zIjpbIk4vQSJdLCJpZCI6NTQyLCJjcmVhdGVkQXQiOiIyMDIzLTA4LTA4VDA5OjMyOjU2LjAwMFoiLCJ1cGRhdGVkQXQiOiIyMDIzLTA4LTA4VDA5OjMyOjU2LjAwMFoiLCJuYW1lIjoiRW5lcmZpcCIsImxvZ28iOiIvcGxhdGZvcm1Mb2dvL0VuZXJmaXAucG5nIiwieWVhckZvdW5kZWQiOiIyMDE1IiwibGljZW5zZU51bWJlciI6Ik9SSUFTIDE1MDAzMjc0IiwicmV2aWV3cyI6bnVsbCwid2Vic2l0ZSI6Imh0dHBzOi8vZnIuZW5lcmZpcC5ldS8iLCJtaW5pbXVtSW52ZXN0bWVudCI6IjEwIEVVUiIsImFkdmVydGlzZWRSZXR1cm4iOiI1JSIsImludmVzdG9ycyI6Ik4vQSIsInRvdGFsRnVuZGluZ1ZvbHVtZSI6Ik4vQSIsImF2ZXJhZ2VMb2FuRHVyYXRpb24iOiJOL0EiLCJkZXNjcmlwdGlvbiI6IkVuZXJmaXAgaXMgYSBjcm93ZGZ1bmRpbmcgcGxhdGZvcm0gYmFzZWQgaW4gRnJhbmNlIHRoYXQgd2FzIGZvdW5kZWQgaW4gMjAxNS4gSXQgZm9jdXNlcyBvbiB0aGUgZ3JlZW4gZW5lcmd5IGluZHVzdHJ5IGFuZCBvZmZlcnMgaW52ZXN0bWVudCBvcHBvcnR1bml0aWVzIGluIHRoZSBmb3JtIG9mIGVxdWl0eSBhbmQgZGVidC4gVGhlIHBsYXRmb3JtIGFpbXMgdG8gY29udHJpYnV0ZSB0byB0aGUgZW5lcmd5IHRyYW5zaXRpb24gYnkgZW1wb3dlcmluZyBjaXRpemVucyBhbmQgY29tbXVuaXRpZXMgdG8gdGFrZSBjb250cm9sIG9mIHRoZSBlbmVyZ3kgcG9saWNpZXMgaW4gdGhlaXIgcmVzcGVjdGl2ZSBhcmVhcy4gRW5lcmZpcCBhY2hpZXZlcyB0aGlzIGJ5IHJlZGlyZWN0aW5nIHNhdmluZ3MgdG93YXJkcyByZW5ld2FibGUgZW5lcmd5IHByb2plY3RzLlxuXG5UaGUgcGxhdGZvcm0gc3VwcG9ydHMgdHdvIGxhbmd1YWdlcywgRnJlbmNoIGFuZCBTcGFuaXNoLCBtYWtpbmcgaXQgYWNjZXNzaWJsZSB0byBpbnZlc3RvcnMgZnJvbSBtdWx0aXBsZSBjb3VudHJpZXMuIFRoZSBtaW5pbXVtIGludmVzdG1lbnQgcmVxdWlyZWQgaXMgMTAgRVVSLCBhbGxvd2luZyBpbmRpdmlkdWFscyB3aXRoIHZhcnlpbmcgYnVkZ2V0cyB0byBwYXJ0aWNpcGF0ZS4gRW5lcmZpcCBhZHZlcnRpc2VzIGEgcmV0dXJuIHJhdGUgb2YgMC4wNSwgcHJvdmlkaW5nIHBvdGVudGlhbCBpbnZlc3RvcnMgd2l0aCBhbiBpbmRpY2F0aW9uIG9mIHRoZSBwb3RlbnRpYWwgcHJvZml0YWJpbGl0eSBvZiB0aGVpciBpbnZlc3RtZW50cy5cblxuRW5lcmZpcCdzIHdlYnNpdGUsIGh0dHBzOi8vZnIuZW5lcmZpcC5ldS8sIHNlcnZlcyBhcyBhIGh1YiBmb3IgaW52ZXN0b3JzIHRvIGV4cGxvcmUgYW5kIGVuZ2FnZSB3aXRoIHZhcmlvdXMgZ3JlZW4gZW5lcmd5IHByb2plY3RzLiBUaHJvdWdoIHRoZSBwbGF0Zm9ybSwgcGVyc29uYWwgYW5kIGNvcnBvcmF0ZSBpbnZlc3RvcnMgY2FuIGNvbnRyaWJ1dGUgdGhlaXIgZnVuZHMgdG93YXJkcyBkaWZmZXJlbnQgaW5pdGlhdGl2ZXMgaW4gdGhlIHNlY3Rvci4gVGhpcyBub3Qgb25seSBhbGxvd3MgaW52ZXN0b3JzIHRvIHN1cHBvcnQgcmVuZXdhYmxlIGVuZXJneSBwcm9qZWN0cyBidXQgYWxzbyBwcm92aWRlcyB0aGVtIHdpdGggYW4gb3Bwb3J0dW5pdHkgdG8gbWFrZSBhIHBvc2l0aXZlIGltcGFjdCBvbiB0aGUgZW52aXJvbm1lbnQgYW5kIGNvbnRyaWJ1dGUgdG8gdGhlIGdsb2JhbCBlbmVyZ3kgdHJhbnNpdGlvbi4iLCJyZWd1bGF0ZWQiOmZhbHNlLCJidXliYWNrR3VhcmFudGVlIjpmYWxzZSwicHVibGljU3RhdGlzdGljcyI6ZmFsc2UsInNpZ251cEJvbnVzIjpmYWxzZSwic2Vjb25kYXJ5TWFya2V0IjpmYWxzZSwiYXV0b0ludmVzdCI6ZmFsc2UsIndob0NhbkludmVzdCI6IlBlcnNvbmFsIGFuZCBjb3Jwb3JhdGUiLCJzbHVnIjoiZW5lcmZpcCJ9LHsiY291bnRyeSI6WyJTbG92YWtpYSJdLCJpbnZlc3RtZW50VHlwZSI6WyJFcXVpdHkiLCJEZWJ0IiwiUDJQIGxlbmRpbmciXSwiaW5kdXN0cnkiOlsiU3RhcnR1cHMiLCJTTUUiLCJTdXN0YWluYWJpbGl0eSIsIkhlYWx0aCAmIFNjaWVuY2UiLCJTb2NpYWwgY2F1c2UiLCJFZHVjYXRpb24iLCJTcG9ydCJdLCJsYW5ndWFnZXMiOlsiRW5nbGlzaCIsIlNsb3ZhayIsIkN6ZWNoIl0sInBheW1lbnRPcHRpb25zIjpbIk4vQSJdLCJpZCI6NTM4LCJjcmVhdGVkQXQiOiIyMDIzLTA4LTA4VDA5OjMyOjU2LjAwMFoiLCJ1cGRhdGVkQXQiOiIyMDIzLTA4LTA4VDA5OjMyOjU2LjAwMFoiLCJuYW1lIjoiQ3Jvd2RiZXJyeSIsImxvZ28iOiIvcGxhdGZvcm1Mb2dvL0Nyb3dkYmVycnkucG5nIiwieWVhckZvdW5kZWQiOiIyMDE1IiwibGljZW5zZU51bWJlciI6IkluIHByb2dyZXNzIiwicmV2aWV3cyI6bnVsbCwid2Vic2l0ZSI6Imh0dHBzOi8vd3d3LmNyb3dkYmVycnkuZXUvZW4iLCJtaW5pbXVtSW52ZXN0bWVudCI6IjUsMDAwIEVVUiIsImFkdmVydGlzZWRSZXR1cm4iOiJEZWJ0OiA4JS0xNiUvIEVxdWl0eTogMjAtNTAlIHlpZWxkIHAuYS4iLCJpbnZlc3RvcnMiOiJOL0EiLCJ0b3RhbEZ1bmRpbmdWb2x1bWUiOiJOL0EiLCJhdmVyYWdlTG9hbkR1cmF0aW9uIjoiTi9BIiwiZGVzY3JpcHRpb24iOiJDcm93ZGJlcnJ5IGlzIGEgY3Jvd2RmdW5kaW5nIHBsYXRmb3JtIGJhc2VkIGluIFNsb3Zha2lhIHRoYXQgd2FzIGZvdW5kZWQgaW4gMjAxNS4gSXQgb2ZmZXJzIHZhcmlvdXMgaW52ZXN0bWVudCB0eXBlcyBpbmNsdWRpbmcgZXF1aXR5LCBkZWJ0LCBhbmQgcGVlci10by1wZWVyIGxlbmRpbmcuIFRoZSBwbGF0Zm9ybSBmb2N1c2VzIG9uIHN1cHBvcnRpbmcgc3RhcnR1cHMsIHNtYWxsIGFuZCBtZWRpdW0tc2l6ZWQgZW50ZXJwcmlzZXMgKFNNRSksIGFzIHdlbGwgYXMgcHJvamVjdHMgcmVsYXRlZCB0byBzdXN0YWluYWJpbGl0eSwgaGVhbHRoIGFuZCBzY2llbmNlLCBzb2NpYWwgY2F1c2VzLCBlZHVjYXRpb24sIGFuZCBzcG9ydHMuXG5cblRoZSBwbGF0Zm9ybSBpcyBhdmFpbGFibGUgaW4gRW5nbGlzaCwgU2xvdmFrLCBhbmQgQ3plY2ggbGFuZ3VhZ2VzLCBtYWtpbmcgaXQgYWNjZXNzaWJsZSB0byBhIHdpZGUgcmFuZ2Ugb2YgaW52ZXN0b3JzLiBUaGUgbWluaW11bSBpbnZlc3RtZW50IHJlcXVpcmVkIGlzIDUsMDAwIEVVUiwgZW5hYmxpbmcgYm90aCBzbWFsbCBhbmQgbGFyZ2UgaW52ZXN0b3JzIHRvIHBhcnRpY2lwYXRlLlxuXG5Dcm93ZGJlcnJ5IGFkdmVydGlzZXMgYXR0cmFjdGl2ZSByZXR1cm5zIGZvciBpbnZlc3RvcnMuIEZvciBkZWJ0IGludmVzdG1lbnRzLCB0aGUgcGxhdGZvcm0gb2ZmZXJzIGEgcmV0dXJuIHJhbmdpbmcgZnJvbSA4JSB0byAxNiUsIHdoaWxlIGVxdWl0eSBpbnZlc3RtZW50cyB5aWVsZCBiZXR3ZWVuIDIwJSBhbmQgNTAlIGFubnVhbGx5LiBUaGlzIG1ha2VzIGl0IGFuIGFwcGVhbGluZyBvcHRpb24gZm9yIGluZGl2aWR1YWxzIGxvb2tpbmcgdG8gZGl2ZXJzaWZ5IHRoZWlyIGludmVzdG1lbnQgcG9ydGZvbGlvIGFuZCBwb3RlbnRpYWxseSBlYXJuIGhpZ2ggcmV0dXJucy5cblxuVGhlIHByaW1hcnkgYWltIG9mIENyb3dkYmVycnkgaXMgdG8gc3VwcG9ydCBDemVjaCBhbmQgU2xvdmFrIGNvbXBhbmllcyBhbmQgcmVhbCBlc3RhdGUgcHJvamVjdHMgYnkgYWxsb3dpbmcgcHJpdmF0ZSBpbnZlc3RvcnMgdG8gaW52ZXN0IGRpcmVjdGx5IGluIHRoZXNlIHZlbnR1cmVzLiBCeSBkb2luZyBzbywgQ3Jvd2RiZXJyeSBhaW1zIHRvIGhlbHAgdGhlc2UgYnVzaW5lc3NlcyBjcmVhdGUgbG9uZy10ZXJtIHZhbHVlIGFuZCB0aHJpdmUgaW4gdGhlIG1hcmtldC5cblxuQW55b25lIG92ZXIgdGhlIGFnZSBvZiAxOCBjYW4gaW52ZXN0IHRocm91Z2ggQ3Jvd2RiZXJyeSwgZ2l2aW5nIGEgd2lkZSByYW5nZSBvZiBpbnZlc3RvcnMgdGhlIG9wcG9ydHVuaXR5IHRvIGNvbnRyaWJ1dGUgdG8gdGhlIGdyb3d0aCBhbmQgc3VjY2VzcyBvZiBDemVjaCBhbmQgU2xvdmFrIGVudGVycHJpc2VzLiBUbyBsZWFybiBtb3JlIGFib3V0IHRoZSBwbGF0Zm9ybSBhbmQgZXhwbG9yZSBpbnZlc3RtZW50IG9wcG9ydHVuaXRpZXMsIGludGVyZXN0ZWQgaW5kaXZpZHVhbHMgY2FuIHZpc2l0IHRoZSBDcm93ZGJlcnJ5IHdlYnNpdGUgYXQgaHR0cHM6Ly93d3cuY3Jvd2RiZXJyeS5ldS9lbi4iLCJyZWd1bGF0ZWQiOmZhbHNlLCJidXliYWNrR3VhcmFudGVlIjpmYWxzZSwicHVibGljU3RhdGlzdGljcyI6ZmFsc2UsInNpZ251cEJvbnVzIjpmYWxzZSwic2Vjb25kYXJ5TWFya2V0IjpmYWxzZSwiYXV0b0ludmVzdCI6ZmFsc2UsIndob0NhbkludmVzdCI6IkV2ZXJ5IGludmVzdG9ycyBvdmVyIDE4KyIsInNsdWciOiJjcm93ZGJlcnJ5In0seyJjb3VudHJ5IjpbIkdlcm1hbnkiXSwiaW52ZXN0bWVudFR5cGUiOlsiRXF1aXR5IiwiRGVidCJdLCJpbmR1c3RyeSI6WyJSZWFsIGVzdGF0ZSJdLCJsYW5ndWFnZXMiOlsiR2VybWFuIl0sInBheW1lbnRPcHRpb25zIjpbIk4vQSJdLCJpZCI6NTMxLCJjcmVhdGVkQXQiOiIyMDIzLTA4LTA4VDA5OjMyOjU2LjAwMFoiLCJ1cGRhdGVkQXQiOiIyMDIzLTA4LTA4VDA5OjMyOjU2LjAwMFoiLCJuYW1lIjoiemluc2JhdXN0ZWluLmRlIiwibG9nbyI6Ii9wbGF0Zm9ybUxvZ28vemluc2JhdXN0ZWluLmRlLnBuZyIsInllYXJGb3VuZGVkIjoiMjAxNiIsImxpY2Vuc2VOdW1iZXIiOiJELUYtMTA3LTFETjQtNzQiLCJyZXZpZXdzIjpudWxsLCJ3ZWJzaXRlIjoiaHR0cHM6Ly93d3cuemluc2JhdXN0ZWluLmRlLyIsIm1pbmltdW1JbnZlc3RtZW50IjoiNTAwIEVVUiIsImFkdmVydGlzZWRSZXR1cm4iOiI2IC0gOSAlIHAuYS4iLCJpbnZlc3RvcnMiOiJOL0EiLCJ0b3RhbEZ1bmRpbmdWb2x1bWUiOiJOL0EiLCJhdmVyYWdlTG9hbkR1cmF0aW9uIjoiTi9BIiwiZGVzY3JpcHRpb24iOiJaaW5zYmF1c3RlaW4uZGUgaXMgYSBjcm93ZGZ1bmRpbmcgcGxhdGZvcm0gYmFzZWQgaW4gR2VybWFueSB0aGF0IHNwZWNpYWxpemVzIGluIHJlYWwgZXN0YXRlIGludmVzdG1lbnRzLiBGb3VuZGVkIGluIDIwMTYsIHRoZSBwbGF0Zm9ybSBvZmZlcnMgYm90aCBlcXVpdHkgYW5kIGRlYnQgaW52ZXN0bWVudCBvcHRpb25zIHRvIGl0cyB1c2Vycy4gVGhlIHdlYnNpdGUgaXMgcHJpbWFyaWx5IGF2YWlsYWJsZSBpbiBHZXJtYW4sIGNhdGVyaW5nIHRvIGEgbG9jYWwgYXVkaWVuY2UuXG5cblRoZSBtaW5pbXVtIGludmVzdG1lbnQgcmVxdWlyZWQgb24gemluc2JhdXN0ZWluLmRlIGlzIDUwMCBFVVIsIG1ha2luZyBpdCBhY2Nlc3NpYmxlIHRvIGEgd2lkZSByYW5nZSBvZiBpbnRlcmVzdGVkIGludmVzdG9ycy4gVGhlIHBsYXRmb3JtIGFkdmVydGlzZXMgYW4gYXR0cmFjdGl2ZSByZXR1cm4gb24gaW52ZXN0bWVudCBvZiA2LTklIHBlciBhbm51bSwgbWFraW5nIGl0IGFuIGVudGljaW5nIG9wdGlvbiBmb3IgaW5kaXZpZHVhbHMgbG9va2luZyB0byBncm93IHRoZWlyIG1vbmV5IHRocm91Z2ggcmVhbCBlc3RhdGUuXG5cblppbnNiYXVzdGVpbi5kZSBwcmlkZXMgaXRzZWxmIG9uIGVuYWJsaW5nIGl0cyB1c2VycyB0byBwYXJ0aWNpcGF0ZSBpbiByZWFsIGVzdGF0ZSBvZmZlcmluZ3MgcXVpY2tseSwgZWFzaWx5LCBhbmQgZW50aXJlbHkgb25saW5lLiBUaGUgcGxhdGZvcm0gb2ZmZXJzIGNyb3dkaW52ZXN0aW5nIG9wcG9ydHVuaXRpZXMsIGdpdmluZyBpbnZlc3RvcnMgdGhlIGNoYW5jZSB0byBmaW5hbmNlIHJlYWwgZXN0YXRlIHByb2plY3RzIGFuZCBiZW5lZml0IGZyb20gdGhlIHByb2ZpdHMgdGhhdCB0aGV5IGdlbmVyYXRlLlxuXG5UaGUgcGxhdGZvcm0gYWxsb3dzIGEgdmFyaWV0eSBvZiBpbnZlc3RvcnMgdG8gcGFydGljaXBhdGUsIGluY2x1ZGluZyBwcml2YXRlIGludmVzdG9ycywgc2VtaS1wcm9mZXNzaW9uYWxzLCBhbmQgaW5zdGl0dXRpb25hbCBpbnZlc3RvcnMuIFRoaXMgYnJvYWRlbnMgdGhlIHBvdGVudGlhbCBpbnZlc3RvciBiYXNlIGFuZCBwcm92aWRlcyBvcHBvcnR1bml0aWVzIGZvciBib3RoIGluZGl2aWR1YWxzIGFuZCBsYXJnZXIgb3JnYW5pemF0aW9ucyB0byBkaXZlcnNpZnkgdGhlaXIgcG9ydGZvbGlvcyB0aHJvdWdoIHJlYWwgZXN0YXRlIGludmVzdG1lbnRzLlxuXG5PdmVyYWxsLCB6aW5zYmF1c3RlaW4uZGUgcHJvdmlkZXMgYSBjb252ZW5pZW50IGFuZCBhY2Nlc3NpYmxlIHBsYXRmb3JtIGZvciBpbmRpdmlkdWFscyBhbmQgaW5zdGl0dXRpb25zIHRvIGludmVzdCBpbiB2YXJpb3VzIHJlYWwgZXN0YXRlIHByb2plY3RzIGFuZCBwb3RlbnRpYWxseSBiZW5lZml0IGZyb20gYXR0cmFjdGl2ZSByZXR1cm5zLiIsInJlZ3VsYXRlZCI6ZmFsc2UsImJ1eWJhY2tHdWFyYW50ZWUiOmZhbHNlLCJwdWJsaWNTdGF0aXN0aWNzIjpmYWxzZSwic2lnbnVwQm9udXMiOmZhbHNlLCJzZWNvbmRhcnlNYXJrZXQiOmZhbHNlLCJhdXRvSW52ZXN0IjpmYWxzZSwid2hvQ2FuSW52ZXN0IjoiUHJpdmF0ZSBpbnZlc3RvcnMsIHNlbWktcHJvZmVzc2lvbmFscyBhbmQgaW5zdGl0dXRpb25hbCBpbnZlc3RvcnMuIiwic2x1ZyI6InppbnNiYXVzdGVpbi5kZSJ9LHsiY291bnRyeSI6WyJMYXR2aWEiXSwiaW52ZXN0bWVudFR5cGUiOlsiRXF1aXR5IiwiRGVidCIsIlJld2FyZCIsIkRvbmF0aW9uIl0sImluZHVzdHJ5IjpbIlJlYWwgZXN0YXRlIiwiU3RhcnR1cHMiLCJTTUUiLCJHcmVlbiBlbmVyZ3kiLCJIZWFsdGggJiBTY2llbmNlIiwiU3BvcnQiXSwibGFuZ3VhZ2VzIjpbIkVuZ2xpc2giXSwicGF5bWVudE9wdGlvbnMiOlsiTi9BIl0sImlkIjo1MTksImNyZWF0ZWRBdCI6IjIwMjMtMDgtMDhUMDk6MzI6NTYuMDAwWiIsInVwZGF0ZWRBdCI6IjIwMjMtMDgtMDhUMDk6MzI6NTYuMDAwWiIsIm5hbWUiOiJGSU5URUxVTSIsImxvZ28iOiIvcGxhdGZvcm1Mb2dvL0ZJTlRFTFVNLnBuZyIsInllYXJGb3VuZGVkIjoiMjAxOCIsImxpY2Vuc2VOdW1iZXIiOiI0MDEwMzUzMDEyMCIsInJldmlld3MiOm51bGwsIndlYnNpdGUiOiJodHRwczovL3d3dy5maW50ZWx1bS5jb20vIiwibWluaW11bUludmVzdG1lbnQiOiI1MCBFVVIiLCJhZHZlcnRpc2VkUmV0dXJuIjoiTi9BIiwiaW52ZXN0b3JzIjoiTi9BIiwidG90YWxGdW5kaW5nVm9sdW1lIjoiTi9BIiwiYXZlcmFnZUxvYW5EdXJhdGlvbiI6Ik4vQSIsImRlc2NyaXB0aW9uIjoiRklOVEVMVU0gaXMgYSBjcm93ZGZ1bmRpbmcgcGxhdGZvcm0gYmFzZWQgaW4gTGF0dmlhLiBGb3VuZGVkIGluIDIwMTgsIGl0IG9mZmVycyB2YXJpb3VzIHR5cGVzIG9mIGludmVzdG1lbnRzLCBpbmNsdWRpbmcgZXF1aXR5LCBkZWJ0LCByZXdhcmQsIGFuZCBkb25hdGlvbi4gVGhlIHBsYXRmb3JtIGNhdGVycyB0byBpbmR1c3RyaWVzIHN1Y2ggYXMgcmVhbCBlc3RhdGUsIHN0YXJ0dXBzLCBTTUVzLCBncmVlbiBlbmVyZ3ksIGhlYWx0aCBhbmQgc2NpZW5jZSwgYW5kIHNwb3J0LlxuXG5UaGUgcHJpbWFyeSBmb2N1cyBvZiBGSU5URUxVTSBpcyB0byBzaG93Y2FzZSBhbHRlcm5hdGl2ZSBpbnZlc3RtZW50IG9wcG9ydHVuaXRpZXMgaW4gYm90aCB0aGUgcHJpbWFyeSBhbmQgc2Vjb25kYXJ5IG1hcmtldHMuIFRoZXNlIG9wcG9ydHVuaXRpZXMgYXJlIGF2YWlsYWJsZSB0byBnbG9iYWwgcGFydGljaXBhbnRzIGFuZCBjYW4gYmUgYWNjZXNzZWQgdXNpbmcgY3J5cHRvY3VycmVuY2llcyBzdWNoIGFzIEJpdGNvaW4gKEJUQykgYW5kIEV0aGVyZXVtIChFVEgpLCBhcyB3ZWxsIGFzIGZpYXQgY3VycmVuY3kgbGlrZSB0aGUgRXVybyAoRVVSKS5cblxuT25lIG5vdGFibGUgZmVhdHVyZSBvZiB0aGUgcGxhdGZvcm0gaXMgaXRzIGNvbW1pdG1lbnQgdG8gY29tcGxpYW5jZSB3aXRoIHRoZSBFVSdzIEtub3cgWW91ciBDdXN0b21lciAoS1lDKSByZWd1bGF0aW9ucy4gVGhpcyBlbnN1cmVzIHRoYXQgYWxsIGludmVzdG9ycyBhcmUgcHJvcGVybHkgdmVyaWZpZWQsIHByb3ZpZGluZyBhIHNlY3VyZSBhbmQgdHJhbnNwYXJlbnQgZW52aXJvbm1lbnQgZm9yIGNyb3dkZnVuZGluZy5cblxuVGhlIG1pbmltdW0gaW52ZXN0bWVudCBvbiBGSU5URUxVTSBpcyA1MCBFVVIsIG1ha2luZyBpdCBhY2Nlc3NpYmxlIHRvIGEgd2lkZSByYW5nZSBvZiBpbnZlc3RvcnMuIEhvd2V2ZXIsIHRoZSBhZHZlcnRpc2VkIHJldHVybiBvbiBpbnZlc3RtZW50cyBpcyBub3Qgc3BlY2lmaWVkLlxuXG5PbmUgcmVzdHJpY3Rpb24gdG8gbm90ZSBpcyB0aGF0IFVTIHBlcnNvbnMgYXJlIG5vdCBlbGlnaWJsZSB0byBpbnZlc3Qgb24gdGhlIHBsYXRmb3JtLiBUaGlzIGxpbWl0YXRpb24gaXMgbGlrZWx5IGR1ZSB0byByZWd1bGF0b3J5IHJlcXVpcmVtZW50cyBvciByZXN0cmljdGlvbnMgc3BlY2lmaWMgdG8gdGhlIFVuaXRlZCBTdGF0ZXMuXG5cbk92ZXJhbGwsIEZJTlRFTFVNIG9mZmVycyBhIGdsb2JhbCBjcm93ZGZ1bmRpbmcgcGxhdGZvcm0gdGhhdCBjb21iaW5lcyBhbHRlcm5hdGl2ZSBpbnZlc3RtZW50cywgY3J5cHRvY3VycmVuY3kgYWNjZXNzaWJpbGl0eSwgYW5kIGNvbXBsaWFuY2Ugd2l0aCBFVSByZWd1bGF0aW9ucywgcHJvdmlkaW5nIGludmVzdG9ycyB3aXRoIGEgZGl2ZXJzZSByYW5nZSBvZiBvcHBvcnR1bml0aWVzLiIsInJlZ3VsYXRlZCI6ZmFsc2UsImJ1eWJhY2tHdWFyYW50ZWUiOmZhbHNlLCJwdWJsaWNTdGF0aXN0aWNzIjpmYWxzZSwic2lnbnVwQm9udXMiOmZhbHNlLCJzZWNvbmRhcnlNYXJrZXQiOnRydWUsImF1dG9JbnZlc3QiOmZhbHNlLCJ3aG9DYW5JbnZlc3QiOiIgR2xvYmFsIGludmVzdG9yLCBleGNlcHQgVVMgcGVyc29ucyIsInNsdWciOiJmaW50ZWx1bSJ9LHsiY291bnRyeSI6WyJFc3RvbmlhIl0sImludmVzdG1lbnRUeXBlIjpbIkVxdWl0eSIsIkRlYnQiLCJQMlAgbGVuZGluZyJdLCJpbmR1c3RyeSI6WyJSZWFsIGVzdGF0ZSIsIlNNRSIsIlBlcnNvbmFsIGxvYW5zIiwiTW9ydGdhZ2VzIl0sImxhbmd1YWdlcyI6WyJFbmdsaXNoIl0sInBheW1lbnRPcHRpb25zIjpbIk4vQSJdLCJpZCI6NTEyLCJjcmVhdGVkQXQiOiIyMDIzLTA4LTA4VDA5OjMyOjU2LjAwMFoiLCJ1cGRhdGVkQXQiOiIyMDIzLTA4LTA4VDA5OjMyOjU2LjAwMFoiLCJuYW1lIjoiQnJpY2tmeSIsImxvZ28iOiIvcGxhdGZvcm1Mb2dvL0JyaWNrZnkucG5nIiwieWVhckZvdW5kZWQiOiIyMDE5IiwibGljZW5zZU51bWJlciI6IkZGQTAwMDM1MyIsInJldmlld3MiOm51bGwsIndlYnNpdGUiOiJodHRwczovL2JyaWNrZnkuY29tLyIsIm1pbmltdW1JbnZlc3RtZW50IjoiNSBFVVIiLCJhZHZlcnRpc2VkUmV0dXJuIjoiMTIlIiwiaW52ZXN0b3JzIjoiTi9BIiwidG90YWxGdW5kaW5nVm9sdW1lIjoiTi9BIiwiYXZlcmFnZUxvYW5EdXJhdGlvbiI6Ik4vQSIsImRlc2NyaXB0aW9uIjoiQnJpY2tmeSBpcyBhbiBFc3RvbmlhbiBjcm93ZGZ1bmRpbmcgcGxhdGZvcm0gZm91bmRlZCBpbiAyMDE5LiBJdCBvZmZlcnMgdmFyaW91cyBpbnZlc3RtZW50IHR5cGVzIGluY2x1ZGluZyBlcXVpdHksIGRlYnQsIGFuZCBwZWVyLXRvLXBlZXIgbGVuZGluZy4gVGhlIHBsYXRmb3JtIGNhdGVycyB0byBkaWZmZXJlbnQgaW5kdXN0cmllcyBzdWNoIGFzIHJlYWwgZXN0YXRlLCBzbWFsbCBhbmQgbWVkaXVtIGVudGVycHJpc2VzIChTTUVzKSwgcGVyc29uYWwgbG9hbnMsIGFuZCBtb3J0Z2FnZXMuXG5cbk9uZSBvZiB0aGUgc3RhbmRvdXQgZmVhdHVyZXMgb2YgQnJpY2tmeSBpcyBpdHMgYWJpbGl0eSB0byBmYWNpbGl0YXRlIHBvcnRmb2xpbyBkaXZlcnNpZmljYXRpb24gZm9yIGludmVzdG9ycy4gTm90IG9ubHkgZG9lcyBpdCBhbGxvdyBkaXZlcnNpZmljYXRpb24gYWNyb3NzIGRpZmZlcmVudCBwbGF0Zm9ybXMsIGJ1dCBpdCBhbHNvIGVuYWJsZXMgZGl2ZXJzaWZpY2F0aW9uIGFjcm9zcyBkaWZmZXJlbnQgYXNzZXQgY2xhc3NlcywgaW5jbHVkaW5nIGxlbmRpbmcsIGVxdWl0eSwgbm9uLWZ1bmdpYmxlIHRva2VucyAoTkZUcyksIGFuZCBjcnlwdG9jdXJyZW5jeS4gVGhpcyBwcm92aWRlcyBpbnZlc3RvcnMgd2l0aCBhIGJyb2FkZXIgcmFuZ2Ugb2YgaW52ZXN0bWVudCBvcHBvcnR1bml0aWVzIGFuZCB0aGUgYWJpbGl0eSB0byBzcHJlYWQgdGhlaXIgcmlzayBhY3Jvc3MgZGlmZmVyZW50IGFzc2V0cy5cblxuQnJpY2tmeSBvcGVyYXRlcyBpbiBFbmdsaXNoLCBtYWtpbmcgaXQgYWNjZXNzaWJsZSB0byBhIHdpZGVyIGludGVybmF0aW9uYWwgYXVkaWVuY2UuIFRoZSBwbGF0Zm9ybSBoYXMgYSBtaW5pbXVtIGludmVzdG1lbnQgcmVxdWlyZW1lbnQgb2YganVzdCA1IEVVUiwgbWFraW5nIGl0IGF0dHJhY3RpdmUgdG8gYm90aCByZXRhaWwgaW52ZXN0b3JzIGFuZCBhY2NyZWRpdGVkIGludmVzdG9ycy4gSXQgYWR2ZXJ0aXNlcyBhIHJldHVybiByYXRlIG9mIDAuMTIsIHdoaWNoIGNvdWxkIHBvdGVudGlhbGx5IGdlbmVyYXRlIGF0dHJhY3RpdmUgcmV0dXJucyBmb3IgaW52ZXN0b3JzLlxuXG5PdmVyYWxsLCBCcmlja2Z5IGFpbXMgdG8gYmUgYSBcIlBsYXRmb3JtIG9mIFBsYXRmb3Jtc1wiIHRoYXQgYWRkcmVzc2VzIHRoZSBuZWVkcyBvZiBpbnZlc3RvcnMgbG9va2luZyBmb3IgZGl2ZXJzaWZpZWQgaW52ZXN0bWVudCBvcHBvcnR1bml0aWVzIGFjcm9zcyB2YXJpb3VzIGFzc2V0IGNsYXNzZXMgYW5kIGluZHVzdHJpZXMuIFdpdGggaXRzIHVzZXItZnJpZW5kbHkgaW50ZXJmYWNlIGFuZCB3aWRlIHJhbmdlIG9mIGludmVzdG1lbnQgb3B0aW9ucywgaXQgb2ZmZXJzIGEgY29udmVuaWVudCBwbGF0Zm9ybSBmb3IgYm90aCBleHBlcmllbmNlZCBhbmQgbm92aWNlIGludmVzdG9ycyB0byBwYXJ0aWNpcGF0ZSBpbiBjcm93ZGZ1bmRpbmcuIFRvIGxlYXJuIG1vcmUsIGludGVyZXN0ZWQgaW5kaXZpZHVhbHMgY2FuIHZpc2l0IHRoZSBCcmlja2Z5IHdlYnNpdGUgYXQgaHR0cHM6Ly9icmlja2Z5LmNvbS8uIiwicmVndWxhdGVkIjpmYWxzZSwiYnV5YmFja0d1YXJhbnRlZSI6ZmFsc2UsInB1YmxpY1N0YXRpc3RpY3MiOmZhbHNlLCJzaWdudXBCb251cyI6ZmFsc2UsInNlY29uZGFyeU1hcmtldCI6ZmFsc2UsImF1dG9JbnZlc3QiOmZhbHNlLCJ3aG9DYW5JbnZlc3QiOiJSZXRhaWwgSW52ZXN0b3JzLCBBY2NyZWRpdGVkIEludmVzdG9ycyIsInNsdWciOiJicmlja2Z5In0seyJjb3VudHJ5IjpbIkN5cHJ1cyJdLCJpbnZlc3RtZW50VHlwZSI6WyJFcXVpdHkiLCJEZWJ0Il0sImluZHVzdHJ5IjpbIlJlYWwgZXN0YXRlIiwiU3RhcnR1cHMiLCJTTUUiLCJHcmVlbiBlbmVyZ3kiLCJIZWFsdGggJiBTY2llbmNlIiwiTG9naXN0aWNzIiwiU29jaWFsIGNhdXNlIiwiRWR1Y2F0aW9uIiwiRmFybWluZyIsIlNwb3J0IiwiTWFyaXRpbWUiXSwibGFuZ3VhZ2VzIjpbIkVuZ2xpc2giLCJHcmVlayJdLCJwYXltZW50T3B0aW9ucyI6WyJOL0EiXSwiaWQiOjUwNywiY3JlYXRlZEF0IjoiMjAyMy0wOC0wOFQwOTozMjo1Ni4wMDBaIiwidXBkYXRlZEF0IjoiMjAyMy0wOC0wOFQwOTozMjo1Ni4wMDBaIiwibmFtZSI6IkNyb3dkYmFzZSIsImxvZ28iOiIvcGxhdGZvcm1Mb2dvL0Nyb3dkYmFzZS5wbmciLCJ5ZWFyRm91bmRlZCI6IjIwMjAiLCJsaWNlbnNlTnVtYmVyIjoiNDEwLzIyIiwicmV2aWV3cyI6bnVsbCwid2Vic2l0ZSI6Imh0dHBzOi8vY3Jvd2RiYXNlLmV1L2VuIiwibWluaW11bUludmVzdG1lbnQiOiIxMDAgRVVSIiwiYWR2ZXJ0aXNlZFJldHVybiI6Ik4vQSIsImludmVzdG9ycyI6Ik4vQSIsInRvdGFsRnVuZGluZ1ZvbHVtZSI6Ik4vQSIsImF2ZXJhZ2VMb2FuRHVyYXRpb24iOiJOL0EiLCJkZXNjcmlwdGlvbiI6IkNyb3dkYmFzZSBpcyBhIGNyb3dkZnVuZGluZyBwbGF0Zm9ybSBiYXNlZCBpbiBDeXBydXMgdGhhdCBvZmZlcnMgaW52ZXN0bWVudCBvcHBvcnR1bml0aWVzIGluIHZhcmlvdXMgaW5kdXN0cmllcyBzdWNoIGFzIHJlYWwgZXN0YXRlLCBzdGFydHVwcywgU01FcywgZ3JlZW4gZW5lcmd5LCBoZWFsdGggJiBzY2llbmNlLCBsb2dpc3RpY3MsIHNvY2lhbCBjYXVzZXMsIGVkdWNhdGlvbiwgZmFybWluZywgc3BvcnQsIGFuZCBtYXJpdGltZS4gRm91bmRlZCBpbiAyMDIwLCBDcm93ZGJhc2UgYWltcyB0byBwcm92aWRlIGJ1c2luZXNzZXMgd2l0aCBhbiBhbHRlcm5hdGl2ZSBzb3VyY2Ugb2YgY2FwaXRhbCBhbmQgYWxsb3cgaW52ZXN0b3JzIHRvIGFjY2VzcyBvcHBvcnR1bml0aWVzIHRoYXQgbWlnaHQgb3RoZXJ3aXNlIGJlIHVuYXZhaWxhYmxlIHRvIHRoZW0uXG5cblRoZSBwbGF0Zm9ybSBzdXBwb3J0cyBib3RoIGVxdWl0eSBhbmQgZGVidCBjcm93ZGZ1bmRpbmcsIGdpdmluZyBpbnZlc3RvcnMgdGhlIGZsZXhpYmlsaXR5IHRvIGNob29zZSB0aGUgdHlwZSBvZiBpbnZlc3RtZW50IHRoYXQgc3VpdHMgdGhlaXIgcHJlZmVyZW5jZXMuIEJ5IG9mZmVyaW5nIGEgZGl2ZXJzZSByYW5nZSBvZiBpbmR1c3RyaWVzLCBDcm93ZGJhc2UgYWltcyB0byBhdHRyYWN0IGEgd2lkZSBiYXNlIG9mIGludmVzdG9ycyB3aG8gaGF2ZSBkaWZmZXJlbnQgaW50ZXJlc3RzIGFuZCBpbnZlc3RtZW50IGdvYWxzLlxuXG5Dcm93ZGJhc2UgaXMgYXZhaWxhYmxlIGluIHR3byBsYW5ndWFnZXMsIEVuZ2xpc2ggYW5kIEdyZWVrLCBjYXRlcmluZyB0byBhIHdpZGUgcmFuZ2Ugb2YgcG90ZW50aWFsIGludmVzdG9ycy4gVGhlIHBsYXRmb3JtJ3Mgd2Vic2l0ZSwgaHR0cHM6Ly9jcm93ZGJhc2UuZXUvZW4sIHByb3ZpZGVzIGRldGFpbGVkIGluZm9ybWF0aW9uIG9uIHRoZSBwcm9qZWN0cyBhdmFpbGFibGUgZm9yIGludmVzdG1lbnQuXG5cblRvIG1ha2UgaW52ZXN0aW5nIGFjY2Vzc2libGUgdG8gYSBsYXJnZXIgYXVkaWVuY2UsIENyb3dkYmFzZSBhbGxvd3MgRUVBIHJlc2lkZW50cyB0byBwYXJ0aWNpcGF0ZSwgbWVhbmluZyBpbnZlc3RvcnMgZnJvbSB2YXJpb3VzIEV1cm9wZWFuIGNvdW50cmllcyBjYW4gdGFrZSBhZHZhbnRhZ2Ugb2YgdGhlIG9wcG9ydHVuaXRpZXMgb2ZmZXJlZCBvbiB0aGUgcGxhdGZvcm0uIFRoZSBtaW5pbXVtIGludmVzdG1lbnQgcmVxdWlyZWQgaXMgcmVsYXRpdmVseSBsb3csIHN0YXJ0aW5nIGZyb20gMTAwIEVVUi5cblxuQWx0aG91Z2ggdGhlIGV4YWN0IGFkdmVydGlzZWQgcmV0dXJuIGlzIG5vdCBzcGVjaWZpZWQsIENyb3dkYmFzZSBvZmZlcnMgaW52ZXN0b3JzIHRoZSBwb3RlbnRpYWwgdG8gZWFybiByZXR1cm5zIG9uIHRoZWlyIGludmVzdG1lbnRzLCBwcm92aWRpbmcgYW4gaW5jZW50aXZpemluZyBvcHBvcnR1bml0eSBmb3IgaW52ZXN0b3JzIHRvIGRpdmVyc2lmeSB0aGVpciBwb3J0Zm9saW9zIGFuZCBzdXBwb3J0IHByb21pc2luZyBwcm9qZWN0cy5cblxuT3ZlcmFsbCwgQ3Jvd2RiYXNlIG9mZmVycyBhbiBpbmNsdXNpdmUgYW5kIGRpdmVyc2UgaW52ZXN0bWVudCBjcm93ZGZ1bmRpbmcgcGxhdGZvcm0gdGhhdCBjb25uZWN0cyBidXNpbmVzc2VzIHNlZWtpbmcgY2FwaXRhbCB3aXRoIGEgd2lkZSByYW5nZSBvZiBwb3RlbnRpYWwgaW52ZXN0b3JzLiIsInJlZ3VsYXRlZCI6ZmFsc2UsImJ1eWJhY2tHdWFyYW50ZWUiOmZhbHNlLCJwdWJsaWNTdGF0aXN0aWNzIjpmYWxzZSwic2lnbnVwQm9udXMiOmZhbHNlLCJzZWNvbmRhcnlNYXJrZXQiOmZhbHNlLCJhdXRvSW52ZXN0IjpmYWxzZSwid2hvQ2FuSW52ZXN0IjoiQWxsIEVFQSByZXNpZGVudHMuIiwic2x1ZyI6ImNyb3dkYmFzZSJ9LHsiY291bnRyeSI6WyJFc3RvbmlhIl0sImludmVzdG1lbnRUeXBlIjpbIkVxdWl0eSIsIkRlYnQiXSwiaW5kdXN0cnkiOlsiQXJ0Il0sImxhbmd1YWdlcyI6WyJFbmdsaXNoIl0sInBheW1lbnRPcHRpb25zIjpbIk4vQSJdLCJpZCI6NTA0LCJjcmVhdGVkQXQiOiIyMDIzLTA4LTA4VDA5OjMyOjU2LjAwMFoiLCJ1cGRhdGVkQXQiOiIyMDIzLTA4LTA4VDA5OjMyOjU2LjAwMFoiLCJuYW1lIjoiS2FudmFzLmFpIiwibG9nbyI6Ii9wbGF0Zm9ybUxvZ28vS2FudmFzLmFpLnBuZyIsInllYXJGb3VuZGVkIjoiMjAyMSIsImxpY2Vuc2VOdW1iZXIiOiIxNjA2MDI2MyIsInJldmlld3MiOm51bGwsIndlYnNpdGUiOiJodHRwczovL2thbnZhcy5haS9ob21lIiwibWluaW11bUludmVzdG1lbnQiOiIxMCBFVVIiLCJhZHZlcnRpc2VkUmV0dXJuIjoiMTAlIiwiaW52ZXN0b3JzIjoiTi9BIiwidG90YWxGdW5kaW5nVm9sdW1lIjoiTi9BIiwiYXZlcmFnZUxvYW5EdXJhdGlvbiI6Ik4vQSIsImRlc2NyaXB0aW9uIjoiS2FudmFzLmFpIGlzIGEgY3Jvd2RmdW5kaW5nIHBsYXRmb3JtIGJhc2VkIGluIEVzdG9uaWEgdGhhdCBzcGVjaWFsaXplcyBpbiB0aGUgYXJ0IGluZHVzdHJ5LiBGb3VuZGVkIGluIDIwMjEsIHRoZSBwbGF0Zm9ybSBvZmZlcnMgaW52ZXN0bWVudCBvcHBvcnR1bml0aWVzIGluIHRoZSBmb3JtIG9mIGVxdWl0eSBhbmQgZGVidCBmb3IgaW5kaXZpZHVhbHMgYW5kIGNvbXBhbmllcyBpbnRlcmVzdGVkIGluIHRoZSBhcnQgbWFya2V0LlxuXG5UaGUgcGxhdGZvcm0gc2VydmVzIGFzIGEgZGlnaXRhbCBtYXJrZXRwbGFjZSBmb3IgYXJ0aXN0cywgY29sbGVjdG9ycywgYW5kIGdhbGxlcmllcyB0byBjb25uZWN0LCB0cmFkZSwgYW5kIGludmVzdCBpbiBhcnQuIEl0IG9mZmVycyB0aGUgbGF0ZXN0IHRlY2hub2xvZ2llcyBpbiB0aGUgc2Vjb25kYXJ5IGFydCBtYXJrZXQsIGluY2x1ZGluZyBpdHMgcHJvcHJpZXRhcnkgYXJ0aW5kZXggYWxnb3JpdGhtLCB3aGljaCBoZWxwcyB1c2VycyBtYWtlIGluZm9ybWVkIGludmVzdG1lbnQgZGVjaXNpb25zLlxuXG5JbnZlc3RvcnMgY2FuIHBhcnRpY2lwYXRlIGluIHRoZSBwbGF0Zm9ybSB3aXRoIGEgbWluaW11bSBpbnZlc3RtZW50IG9mIDEwIEVVUiwgbWFraW5nIGl0IGFjY2Vzc2libGUgdG8gYSB3aWRlIHJhbmdlIG9mIGluZGl2aWR1YWxzLiBUaGUgYWR2ZXJ0aXNlZCByZXR1cm4gZm9yIGludmVzdG1lbnRzIG9uIEthbnZhcy5haSBpcyAwLjEsIGFsdGhvdWdoIHNwZWNpZmljIGRldGFpbHMgb24gdGhlIHJldHVybiBzdHJ1Y3R1cmUgYXJlIG5vdCBwcm92aWRlZC5cblxuS2FudmFzLmFpIG9wZXJhdGVzIHByaW1hcmlseSBpbiBFbmdsaXNoLCBtYWtpbmcgaXQgYWNjZXNzaWJsZSB0byBhIGdsb2JhbCBhdWRpZW5jZS4gSXRzIHdlYnNpdGUsIGxvY2F0ZWQgYXQgaHR0cHM6Ly9rYW52YXMuYWkvaG9tZSwgcHJvdmlkZXMgaW5mb3JtYXRpb24gYWJvdXQgdGhlIHBsYXRmb3JtIGFuZCBpdHMgc2VydmljZXMuXG5cbkludmVzdG1lbnQgb24gS2FudmFzLmFpIGlzIG9wZW4gdG8gYm90aCBpbmRpdmlkdWFsIGFuZCBjb3Jwb3JhdGUgaW52ZXN0b3JzLiBJbmRpdmlkdWFscyBtdXN0IGJlIGF0IGxlYXN0IDE4IHllYXJzIG9sZCB0byBwYXJ0aWNpcGF0ZSwgd2hpbGUgZm9yIGNvbXBhbmllcywgdGhlIHJlcHJlc2VudGF0aXZlIHJlZ2lzdGVyaW5nIG11c3QgaGF2ZSB0aGUgbGVnYWwgYXV0aG9yaXR5IHRvIHJlcHJlc2VudCB0aGUgY29tcGFueS5cblxuT3ZlcmFsbCwgS2FudmFzLmFpIG9mZmVycyBhIGRpZ2l0YWwgcGxhdGZvcm0gZm9yIGluZGl2aWR1YWxzIGFuZCBjb21wYW5pZXMgdG8gaW52ZXN0IGluIHRoZSBhcnQgbWFya2V0LCBsZXZlcmFnaW5nIGFkdmFuY2VkIHRlY2hub2xvZ2llcyBhbmQgc2VydmluZyBhcyBhIGh1YiBmb3IgYXJ0IHRyYWRpbmcgYW5kIG5ldHdvcmtpbmcuIiwicmVndWxhdGVkIjpmYWxzZSwiYnV5YmFja0d1YXJhbnRlZSI6ZmFsc2UsInB1YmxpY1N0YXRpc3RpY3MiOmZhbHNlLCJzaWdudXBCb251cyI6ZmFsc2UsInNlY29uZGFyeU1hcmtldCI6dHJ1ZSwiYXV0b0ludmVzdCI6ZmFsc2UsIndob0NhbkludmVzdCI6IkludmVzdGluZyBpcyBvcGVuIHRvIGJvdGggaW5kaXZpZHVhbHMgYW5kIGNvbXBhbmllcy4gSW4gb3JkZXIgdG8gaW52ZXN0LCBpbmRpdmlkdWFscyBtdXN0IGJlIGF0IGxlYXN0IDE4IHllYXJzIG9sZC4gRm9yIGNvbXBhbmllcywgdGhlIGluZGl2aWR1YWwgcmVnaXN0ZXJpbmcgdGhlIGNvbXBhbnkgbXVzdCBoYXZlIHRoZSBsZWdhbCBhdXRob3JpdHkgdG8gcmVwcmVzZW50IHRoZSBjb21wYW55LiIsInNsdWciOiJrYW52YXMuYWkifV19","status":200,"tags":["/platform/[investmentType]/page"],"url":"http://localhost:3000/api/get-type/investment/?debt=Debt&equity=Equity&page=1&perPage=12&typeFilter=investmentType"},"revalidate":31536000}