{"kind":"FETCH","data":{"headers":{"access-control-allow-origin":"http://1864875-cn27374.twc1.net:3000","connection":"keep-alive","content-length":"27379","content-type":"application/json; charset=utf-8","date":"Tue, 22 Aug 2023 07:07:03 GMT","etag":"W/\"6af3-gcs4OAEjY8iBJXbdVltJImOcTY8\"","keep-alive":"timeout=5","vary":"Origin","x-powered-by":"Express"},"body":"eyJjb3VudCI6NTkyLCJyb3dzIjpbeyJjb3VudHJ5IjpbIkZyYW5jZSJdLCJpbnZlc3RtZW50VHlwZSI6WyJFcXVpdHkiLCJQMlAgbGVuZGluZyJdLCJpbmR1c3RyeSI6WyJSZWFsIGVzdGF0ZSJdLCJsYW5ndWFnZXMiOlsiZnJlbmNoIl0sInBheW1lbnRPcHRpb25zIjpbIk4vQSJdLCJpZCI6NTU2LCJjcmVhdGVkQXQiOiIyMDIzLTA4LTA4VDA5OjMyOjU2LjAwMFoiLCJ1cGRhdGVkQXQiOiIyMDIzLTA4LTA4VDA5OjMyOjU2LjAwMFoiLCJuYW1lIjoiSW1tb2NyYXRpZSIsImxvZ28iOiIvcGxhdGZvcm1Mb2dvL0ltbW9jcmF0aWUucG5nIiwieWVhckZvdW5kZWQiOiIyMDE0IiwibGljZW5zZU51bWJlciI6IjE1MDAwOTI2IiwicmV2aWV3cyI6bnVsbCwid2Vic2l0ZSI6Imh0dHBzOi8vd3d3LmltbW9jcmF0aWUuY29tLyIsIm1pbmltdW1JbnZlc3RtZW50IjoiMSwwMDAgRVVSIiwiYWR2ZXJ0aXNlZFJldHVybiI6IjEwLTEyJSIsImludmVzdG9ycyI6Ik4vQSIsInRvdGFsRnVuZGluZ1ZvbHVtZSI6Ik4vQSIsImF2ZXJhZ2VMb2FuRHVyYXRpb24iOiJOL0EiLCJkZXNjcmlwdGlvbiI6IkltbW9jcmF0aWUgaXMgYSBGcmVuY2ggY3Jvd2RmdW5kaW5nIHBsYXRmb3JtIHRoYXQgd2FzIGZvdW5kZWQgaW4gMjAxNC4gSXQgb3BlcmF0ZXMgaW4gdGhlIHJlYWwgZXN0YXRlIGluZHVzdHJ5IGFuZCBvZmZlcnMgaW52ZXN0bWVudCBvcHRpb25zIGluIHRoZSBmb3JtIG9mIGVxdWl0eSBhbmQgcGVlci10by1wZWVyIGxlbmRpbmcuIFRoZSBwbGF0Zm9ybSBwcmltYXJpbHkgY2F0ZXJzIHRvIHByaXZhdGUgaW52ZXN0b3JzLCBib3RoIGluZGl2aWR1YWxzIGFuZCBjb3Jwb3JhdGUgZW50aXRpZXMuXG5cblRoZSBtYWluIG9iamVjdGl2ZSBvZiBJbW1vY3JhdGllIGlzIHRvIGNvbm5lY3QgZXhwZXJpZW5jZWQgcmVhbCBlc3RhdGUgcHJvbW90ZXJzIHdpdGggaW52ZXN0b3JzIHdobyBhcmUgbG9va2luZyB0byBzdXBwb3J0IHRoZWlyIHByb2plY3RzLiBQcml2YXRlIGludmVzdG9ycyBjYW4gY29udHJpYnV0ZSBmdW5kcyB0byBvbmUgb2YgdGhlIG9wZXJhdGlvbnMgbGlzdGVkIG9uIHRoZSBwbGF0Zm9ybSwgdGhlcmVieSBiZWNvbWluZyBwYXJ0IG9mIHRoZSBmaW5hbmNpbmcgcm91bmQuIFRoZSBtaW5pbXVtIGludmVzdG1lbnQgcmVxdWlyZWQgdG8gcGFydGljaXBhdGUgaXMgMSwwMDAgRVVSLlxuXG5JbW1vY3JhdGllIG9wZXJhdGVzIGluIHRoZSBGcmVuY2ggbWFya2V0IGFuZCB0aGUgcHJpbWFyeSBsYW5ndWFnZSB1c2VkIG9uIHRoZSBwbGF0Zm9ybSBpcyBGcmVuY2guIEl0IG9mZmVycyBhbiBhZHZlcnRpc2VkIHJldHVybiBvZiAxMC0xMiUgb24gaW52ZXN0bWVudHMsIG1ha2luZyBpdCBhbiBhdHRyYWN0aXZlIG9wdGlvbiBmb3IgaW5kaXZpZHVhbHMgd2hvIHdhbnQgdG8gZGl2ZXJzaWZ5IHRoZWlyIGludmVzdG1lbnQgcG9ydGZvbGlvcyBvciBleHBsb3JlIG9wcG9ydHVuaXRpZXMgaW4gdGhlIHJlYWwgZXN0YXRlIHNlY3Rvci5cblxuVG8gcGFydGljaXBhdGUgaW4gSW1tb2NyYXRpZSwgYm90aCBwZXJzb25hbCBhbmQgY29ycG9yYXRlIGludmVzdG9ycyBhcmUgd2VsY29tZS4gVGhpcyBwcm92aWRlcyBhIHdpZGUgcmFuZ2Ugb2YgaW52ZXN0bWVudCBwb3NzaWJpbGl0aWVzIGZvciBpbmRpdmlkdWFscyBhcyB3ZWxsIGFzIGJ1c2luZXNzZXMgaW50ZXJlc3RlZCBpbiByZWFsIGVzdGF0ZSBjcm93ZGZ1bmRpbmcuIFRoZSBwbGF0Zm9ybSdzIHdlYnNpdGUsIHdoaWNoIGNhbiBiZSBmb3VuZCBhdCBodHRwczovL3d3dy5pbW1vY3JhdGllLmNvbS8sIHByb3ZpZGVzIGRldGFpbGVkIGluZm9ybWF0aW9uIGFib3V0IHRoZSBpbnZlc3RtZW50IG9wcG9ydHVuaXRpZXMgYXZhaWxhYmxlLCBhbGxvd2luZyBpbnZlc3RvcnMgdG8gbWFrZSBpbmZvcm1lZCBkZWNpc2lvbnMuXG5cbkluIHN1bW1hcnksIEltbW9jcmF0aWUgaXMgYSByZWFsIGVzdGF0ZSBjcm93ZGZ1bmRpbmcgcGxhdGZvcm0gaW4gRnJhbmNlIHRoYXQgYWxsb3dzIHByaXZhdGUgaW52ZXN0b3JzIHRvIGZpbmFuY2UgZXhwZXJpZW5jZWQgcmVhbCBlc3RhdGUgcHJvbW90ZXJzLiBXaXRoIGEgbWluaW11bSBpbnZlc3RtZW50IG9mIDEsMDAwIEVVUiBhbmQgYSBwb3RlbnRpYWwgcmV0dXJuIG9mIDEwLTEyJSwgSW1tb2NyYXRpZSBvZmZlcnMgYW4gYWNjZXNzaWJsZSBhbmQgYXR0cmFjdGl2ZSBvcHRpb24gZm9yIGluZGl2aWR1YWxzIGFuZCBjb3Jwb3JhdGUgZW50aXRpZXMgbG9va2luZyB0byBpbnZlc3QgaW4gdGhlIHJlYWwgZXN0YXRlIGluZHVzdHJ5LiIsInJlZ3VsYXRlZCI6ZmFsc2UsImJ1eWJhY2tHdWFyYW50ZWUiOmZhbHNlLCJwdWJsaWNTdGF0aXN0aWNzIjpmYWxzZSwic2lnbnVwQm9udXMiOmZhbHNlLCJzZWNvbmRhcnlNYXJrZXQiOmZhbHNlLCJhdXRvSW52ZXN0IjpmYWxzZSwid2hvQ2FuSW52ZXN0IjoiUGVyc29uYWwg4oCTIENvcnBvcmF0ZSIsInNsdWciOiJpbW1vY3JhdGllIn0seyJjb3VudHJ5IjpbIk5vcndheSJdLCJpbnZlc3RtZW50VHlwZSI6WyJQMlAgbGVuZGluZyJdLCJpbmR1c3RyeSI6WyJSZWFsIGVzdGF0ZSJdLCJsYW5ndWFnZXMiOlsiRW5nbGlzaCIsIk5vcndlZ2lhbiJdLCJwYXltZW50T3B0aW9ucyI6WyJOL0EiXSwiaWQiOjU1NSwiY3JlYXRlZEF0IjoiMjAyMy0wOC0wOFQwOTozMjo1Ni4wMDBaIiwidXBkYXRlZEF0IjoiMjAyMy0wOC0wOFQwOTozMjo1Ni4wMDBaIiwibmFtZSI6IkthbWVvIiwibG9nbyI6Ii9wbGF0Zm9ybUxvZ28vS2FtZW8ucG5nIiwieWVhckZvdW5kZWQiOiIyMDE0IiwibGljZW5zZU51bWJlciI6IjkxNiAyNTMgMTkyIiwicmV2aWV3cyI6bnVsbCwid2Vic2l0ZSI6Imh0dHBzOi8vd3d3LmthbWVvLm5vLyIsIm1pbmltdW1JbnZlc3RtZW50IjoiNTAwIEVVUiIsImFkdmVydGlzZWRSZXR1cm4iOiJOL0EiLCJpbnZlc3RvcnMiOiJOL0EiLCJ0b3RhbEZ1bmRpbmdWb2x1bWUiOiJOL0EiLCJhdmVyYWdlTG9hbkR1cmF0aW9uIjoiTi9BIiwiZGVzY3JpcHRpb24iOiJLYW1lbyBpcyBhIGNyb3dkZnVuZGluZyBwbGF0Zm9ybSBiYXNlZCBpbiBOb3J3YXkgdGhhdCBzcGVjaWFsaXplcyBpbiBwZWVyLXRvLXBlZXIgbGVuZGluZyBpbiB0aGUgcmVhbCBlc3RhdGUgaW5kdXN0cnkuIEZvdW5kZWQgaW4gMjAxNCwgaXQgb2ZmZXJzIGEgZGlnaXRhbCBtYXJrZXRwbGFjZSBmb3IgaW52ZXN0b3JzIHNlZWtpbmcgdG8gZnVuZCBsb2FucyBmb3Igc21hbGwgYnVzaW5lc3NlcyBhbmQgcHJvcGVydHkgZGV2ZWxvcGVycy4gQnkgcHJvdmlkaW5nIFNjYW5kaW5hdmlhbiBpbnZlc3RvcnMgd2l0aCBhY2Nlc3MgdG8gYSBuZXcgYW5kIGF0dHJhY3RpdmUgYXNzZXQgY2xhc3MsIEthbWVvIGFpbXMgdG8gb2ZmZXIgdGhlbSBhIHVuaXF1ZSBpbnZlc3RtZW50IG9wcG9ydHVuaXR5LlxuXG5UaGUgcGxhdGZvcm0gaXMgYXZhaWxhYmxlIGluIGJvdGggRW5nbGlzaCBhbmQgTm9yd2VnaWFuLCBjYXRlcmluZyB0byBhIHdpZGUgcmFuZ2Ugb2YgdXNlcnMuIEludGVyZXN0ZWQgaW52ZXN0b3JzIGNhbiBmaW5kIG1vcmUgaW5mb3JtYXRpb24gYW5kIGFjY2VzcyB0aGUgcGxhdGZvcm0gdGhyb3VnaCBLYW1lbydzIHdlYnNpdGUgYXQgaHR0cHM6Ly93d3cua2FtZW8ubm8vLiBUaGUgbWluaW11bSBpbnZlc3RtZW50IHJlcXVpcmVkIHRvIHBhcnRpY2lwYXRlIGlzIHNldCBhdCA1MDAgRVVSLCBhbGxvd2luZyBpbmRpdmlkdWFscyB3aXRoIGRpZmZlcmVudCBmaW5hbmNpYWwgY2FwYWNpdGllcyB0byBjb250cmlidXRlLlxuXG5BbHRob3VnaCB0aGUgc3BlY2lmaWMgcmV0dXJuIHJhdGVzIG9uIGludmVzdG1lbnRzIGFyZSBub3QgYWR2ZXJ0aXNlZCBvbiB0aGUgd2Vic2l0ZSwgS2FtZW8gcHJvdmlkZXMgYSBwbGF0Zm9ybSBmb3IgaW52ZXN0b3JzIHRvIGxlbmQgbW9uZXkgdG8gc21hbGwgYnVzaW5lc3NlcyBhbmQgcHJvcGVydHkgZGV2ZWxvcGVycywgYWxsb3dpbmcgdGhlbSB0byBwdXJzdWUgdGhlaXIgcHJvamVjdHMgYW5kIGdlbmVyYXRlIHJldHVybnMuXG5cbkthbWVvIGFjY2VwdHMgaW52ZXN0bWVudHMgZnJvbSBib3RoIHBlcnNvbmFsIGFuZCBjb3Jwb3JhdGUgaW52ZXN0b3JzLCBvZmZlcmluZyBhIGRpdmVyc2UgcmFuZ2Ugb2Ygb3Bwb3J0dW5pdGllcyBmb3IgaW5kaXZpZHVhbHMgYW5kIGJ1c2luZXNzZXMgYWxpa2UgdG8gY29udHJpYnV0ZSB0byBjcm93ZGZ1bmRlZCBsb2Fucy4gVGhpcyBpbmNsdXNpdmUgYXBwcm9hY2ggYWxsb3dzIGEgYnJvYWRlciBiYXNlIG9mIGludmVzdG9ycyB0byBwYXJ0aWNpcGF0ZSBpbiBmdW5kaW5nIHNtYWxsIGJ1c2luZXNzZXMgYW5kIHJlYWwgZXN0YXRlIGRldmVsb3BtZW50cy5cblxuT3ZlcmFsbCwgS2FtZW8gc2VydmVzIGFzIGFuIGlubm92YXRpdmUgY3Jvd2RmdW5kaW5nIHBsYXRmb3JtLCBwcm92aWRpbmcgb3Bwb3J0dW5pdGllcyBmb3IgU2NhbmRpbmF2aWFuIGludmVzdG9ycyB0byBkaXZlcnNpZnkgdGhlaXIgcG9ydGZvbGlvcyB0aHJvdWdoIFAyUCBsZW5kaW5nIGluIHRoZSByZWFsIGVzdGF0ZSBpbmR1c3RyeS4iLCJyZWd1bGF0ZWQiOmZhbHNlLCJidXliYWNrR3VhcmFudGVlIjpmYWxzZSwicHVibGljU3RhdGlzdGljcyI6ZmFsc2UsInNpZ251cEJvbnVzIjpmYWxzZSwic2Vjb25kYXJ5TWFya2V0IjpmYWxzZSwiYXV0b0ludmVzdCI6ZmFsc2UsIndob0NhbkludmVzdCI6IlBlcnNvbmFsLCBDb3Jwb3JhdGUiLCJzbHVnIjoia2FtZW8ifSx7ImNvdW50cnkiOlsiRXN0b25pYSJdLCJpbnZlc3RtZW50VHlwZSI6WyJQMlAgbGVuZGluZyJdLCJpbmR1c3RyeSI6WyJTTUUiLCJQZXJzb25hbCBsb2FucyJdLCJsYW5ndWFnZXMiOlsiRW5nbGlzaCIsIkdlcm1hbiIsIkVzdG9uaWFuIiwiRnJlbmNoIl0sInBheW1lbnRPcHRpb25zIjpbIk4vQSJdLCJpZCI6NTU0LCJjcmVhdGVkQXQiOiIyMDIzLTA4LTA4VDA5OjMyOjU2LjAwMFoiLCJ1cGRhdGVkQXQiOiIyMDIzLTA4LTA4VDA5OjMyOjU2LjAwMFoiLCJuYW1lIjoiTW9uZXN0cm8iLCJsb2dvIjoiL3BsYXRmb3JtTG9nby9Nb25lc3Ryby5wbmciLCJ5ZWFyRm91bmRlZCI6IjIwMTQiLCJsaWNlbnNlTnVtYmVyIjoiRlNBIGF1dGhvcmlzZWQgJiByZWd1bGF0ZWQgUGVybWl0OiA0LjEvMTQ0ICgxOS4wOS4yMDE2KSIsInJldmlld3MiOm51bGwsIndlYnNpdGUiOiJodHRwczovL21vbmVzdHJvLmNvbS9lbi9ob21lLyIsIm1pbmltdW1JbnZlc3RtZW50IjoiMTAgRVVSIiwiYWR2ZXJ0aXNlZFJldHVybiI6IjEzJSIsImludmVzdG9ycyI6Ik4vQSIsInRvdGFsRnVuZGluZ1ZvbHVtZSI6Ik4vQSIsImF2ZXJhZ2VMb2FuRHVyYXRpb24iOiJOL0EiLCJkZXNjcmlwdGlvbiI6Ik1vbmVzdHJvIGlzIGEgY3Jvd2RmdW5kaW5nIHBsYXRmb3JtIGJhc2VkIGluIEVzdG9uaWEgdGhhdCBzcGVjaWFsaXplcyBpbiBwZWVyLXRvLXBlZXIgKFAyUCkgbGVuZGluZy4gSXQgd2FzIGZvdW5kZWQgaW4gMjAxNCBhbmQgb3BlcmF0ZXMgaW4gdGhlIFNNRSBhbmQgcGVyc29uYWwgbG9hbnMgaW5kdXN0cnkuIFRoZSBwbGF0Zm9ybSBhbGxvd3MgaW52ZXN0b3JzIHRvIGRpcmVjdGx5IGNvbm5lY3Qgd2l0aCBib3Jyb3dlcnMsIGVsaW1pbmF0aW5nIHRoZSBuZWVkIGZvciBpbnRlcm1lZGlhcmllcy5cblxuSW52ZXN0b3JzIG9uIE1vbmVzdHJvIGNhbiBtYWtlIGJpZHMgb24gbG9hbnMgYmFzZWQgb24gcmVhbCBtYXJrZXQgY29uZGl0aW9ucy4gVGhleSBhbHNvIGhhdmUgdGhlIG9wcG9ydHVuaXR5IHRvIGFzayBib3Jyb3dlcnMgcXVlc3Rpb25zIGFuZCBhY2Nlc3MgdGhlIHNlY29uZGFyeSBtYXJrZXQuIFRoZSBtaW5pbXVtIGludmVzdG1lbnQgcmVxdWlyZWQgaXMgMTAgRVVSIGFuZCB0aGUgYWR2ZXJ0aXNlZCByZXR1cm4gaXMgMC4xMy5cblxuTW9uZXN0cm8ncyB3ZWJzaXRlIGlzIGF2YWlsYWJsZSBpbiBtdWx0aXBsZSBsYW5ndWFnZXMsIGluY2x1ZGluZyBFbmdsaXNoLCBHZXJtYW4sIEVzdG9uaWFuLCBhbmQgRnJlbmNoLiBUaGUgcGxhdGZvcm0gaXMgb3BlbiB0byBib3RoIGluZGl2aWR1YWxzIGFuZCBjb21wYW5pZXMsIHdpdGggY2VydGFpbiBlbGlnaWJpbGl0eSBjcml0ZXJpYS4gSW5kaXZpZHVhbCBpbnZlc3RvcnMgbXVzdCBiZSBhdCBsZWFzdCAxOCB5ZWFycyBvbGQgYW5kIGNpdGl6ZW5zIG9yIHBlcm1hbmVudCByZXNpZGVudHMgb2YgdGhlIEV1cm9wZWFuIEVjb25vbWljIEFyZWEgb3IgU3dpdHplcmxhbmQuIFRoZXkgYXJlIGFsc28gcmVxdWlyZWQgdG8gaGF2ZSBhIGJhbmsgYWNjb3VudCBpbiB0aGUgRXVyb3BlYW4gRWNvbm9taWMgQXJlYSBhbmQgaGF2ZSB0aGVpciBpZGVudGl0eSBzdWNjZXNzZnVsbHkgdmVyaWZpZWQgYnkgTW9uZXN0cm8uXG5cbkZvciBjb21wYW5pZXMsIGZhbWlseSB0cnVzdHMsIHBhcnRuZXJzaGlwcywgYW5kIG90aGVyIG9yZ2FuaXphdGlvbnMsIGEgYmFuayBhY2NvdW50IGFuZCByZWdpc3RyYXRpb24gaW4gdGhlIEV1cm9wZWFuIEVjb25vbWljIEFyZWEgb3IgU3dpdHplcmxhbmQgYXJlIG1hbmRhdG9yeS4gSG93ZXZlciwgVUsgY2l0aXplbnMsIHJlc2lkZW50cywgb3IgdGF4cGF5ZXJzIGFyZSBjdXJyZW50bHkgbm90IGVsaWdpYmxlIHRvIGludmVzdCBvbiBNb25lc3Ryby5cblxuT3ZlcmFsbCwgTW9uZXN0cm8gcHJvdmlkZXMgYSB1c2VyLWZyaWVuZGx5IFAyUCBsZW5kaW5nIHBsYXRmb3JtIGZvciBpbnZlc3RvcnMgdG8gc3VwcG9ydCBTTUVzIGFuZCBwZXJzb25hbCBsb2Fucywgd2hpbGUgYWxzbyBvZmZlcmluZyB0cmFuc3BhcmVuY3kgYW5kIGFjY2Vzc2liaWxpdHkgZmVhdHVyZXMgc3VjaCBhcyB0aGUgc2Vjb25kYXJ5IG1hcmtldCBhbmQgZGlyZWN0IGludGVyYWN0aW9uIHdpdGggYm9ycm93ZXJzLiIsInJlZ3VsYXRlZCI6ZmFsc2UsImJ1eWJhY2tHdWFyYW50ZWUiOmZhbHNlLCJwdWJsaWNTdGF0aXN0aWNzIjpmYWxzZSwic2lnbnVwQm9udXMiOmZhbHNlLCJzZWNvbmRhcnlNYXJrZXQiOnRydWUsImF1dG9JbnZlc3QiOmZhbHNlLCJ3aG9DYW5JbnZlc3QiOiJUaGUgTWFya2V0cGxhY2UgaXMgb3BlbiB0byBib3RoIGluZGl2aWR1YWxzIGFuZCBjb21wYW5pZXMuIEluZGl2aWR1YWwgaW52ZXN0b3JzIG11c3QgYmUgYXQgbGVhc3QgMTggeWVhcnMgb2xkLCBjaXRpemVucyBvciBwZXJtYW5lbnQgcmVzaWRlbnRzIG9mIHRoZSBFdXJvcGVhbiBFY29ub21pYyBBcmVhIChFdXJvcGVhbiBVbmlvbiwgTm9yd2F5LCBJY2VsYW5kIG9yIExpZWNodGVuc3RlaW4pIG9yIFN3aXR6ZXJsYW5kLCBoYXZlIGEgYmFuayBhY2NvdW50IGluIHRoZSBFdXJvcGVhbiBFY29ub21pYyBBcmVhLCBhbmQgaGF2ZSB0aGVpciBpZGVudGl0eSBzdWNjZXNzZnVsbHkgdmVyaWZpZWQgYnkgTW9uZXN0cm8uRmFtaWx5IHRydXN0cywgcGFydG5lcnNoaXBzLCBsaW1pdGVkIGxpYWJpbGl0eSBjb21wYW5pZXMgYW5kIG90aGVyIG9yZ2FuaXNhdGlvbnMgbXVzdCBoYXZlIGEgYmFuayBhY2NvdW50IGFuZCBiZSByZWdpc3RlcmVkIGluIHRoZSBFdXJvcGVhbiBFY29ub21pYyBBcmVhIG9yIFN3aXR6ZXJsYW5kLiBVSyBjaXRpemVucywgcmVzaWRlbnRzIG9yIHRheHBheWVycyBjdXJyZW50bHkgY2Fu4oCZdCBpbnZlc3Qgb24gTW9uZXN0cm8uIFRoZSBpbmRpdmlkdWFsIHJlZ2lzdGVyaW5nIHRoZSBjb21wYW55IG11c3QgaGF2ZSB0aGUgbGVnYWwgcmlnaHQgdG8gcmVwcmVzZW50IHRoZSBjb21wYW55LiIsInNsdWciOiJtb25lc3RybyJ9LHsiY291bnRyeSI6WyJCZWxnaXVtIiwiRnJhbmNlIiwiTHV4ZW1ib3VyZyIsIlN3aXR6ZXJsYW5kIl0sImludmVzdG1lbnRUeXBlIjpbIkRlYnQiXSwiaW5kdXN0cnkiOlsiUmVhbCBlc3RhdGUiXSwibGFuZ3VhZ2VzIjpbIkZyZW5jaCIsIkVuZ2xpc2giXSwicGF5bWVudE9wdGlvbnMiOlsiTi9BIl0sImlkIjo1NTMsImNyZWF0ZWRBdCI6IjIwMjMtMDgtMDhUMDk6MzI6NTYuMDAwWiIsInVwZGF0ZWRBdCI6IjIwMjMtMDgtMDhUMDk6MzI6NTYuMDAwWiIsIm5hbWUiOiJSYWl6ZXJzIiwibG9nbyI6Ii9wbGF0Zm9ybUxvZ28vUmFpemVycy5wbmciLCJ5ZWFyRm91bmRlZCI6IjIwMTQiLCJsaWNlbnNlTnVtYmVyIjoiMTQwMDcwMDIiLCJyZXZpZXdzIjpudWxsLCJ3ZWJzaXRlIjoiaHR0cHM6Ly9yYWl6ZXJzLmNvbS8iLCJtaW5pbXVtSW52ZXN0bWVudCI6IjEsMDAwIEVVUiIsImFkdmVydGlzZWRSZXR1cm4iOiI5LDklIiwiaW52ZXN0b3JzIjoiTi9BIiwidG90YWxGdW5kaW5nVm9sdW1lIjoiTi9BIiwiYXZlcmFnZUxvYW5EdXJhdGlvbiI6Ik4vQSIsImRlc2NyaXB0aW9uIjoiUmFpemVycyBpcyBhIGNyb3dkZnVuZGluZyBwbGF0Zm9ybSBmb3VuZGVkIGluIDIwMTQgd2l0aCBvcGVyYXRpb25zIGluIEJlbGdpdW0sIEZyYW5jZSwgTHV4ZW1ib3VyZywgYW5kIFN3aXR6ZXJsYW5kLCBwcmltYXJpbHkgZm9jdXNlZCBvbiB0aGUgcmVhbCBlc3RhdGUgaW5kdXN0cnkuIFRoZSBwbGF0Zm9ybSBvZmZlcnMgaW52ZXN0bWVudCBvcHBvcnR1bml0aWVzIGluIHRoZSBmb3JtIG9mIGRlYnQgZmluYW5jaW5nLCBhbGxvd2luZyBpbmRpdmlkdWFscyBhbmQgcHJvZmVzc2lvbmFscyB0byBsZW5kIG1vbmV5IHRvIHJlYWwgZXN0YXRlIGRldmVsb3BlcnMuIEJ5IGRvaW5nIHNvLCBSYWl6ZXJzIGFpbXMgdG8gcHJvdmlkZSBhY2Nlc3MgdG8gaW52ZXN0bWVudCBvcHBvcnR1bml0aWVzIHRoYXQgd2VyZSB0cmFkaXRpb25hbGx5IG9ubHkgYXZhaWxhYmxlIHRvIGluc3RpdHV0aW9uYWwgaW52ZXN0b3JzLlxuXG5UaGUgcGxhdGZvcm0gb3BlcmF0ZXMgaW4gYm90aCBGcmVuY2ggYW5kIEVuZ2xpc2gsIG1ha2luZyBpdCBhY2Nlc3NpYmxlIHRvIGEgd2lkZXIgcmFuZ2Ugb2YgaW52ZXN0b3JzLiBXaXRoIGEgbWluaW11bSBpbnZlc3RtZW50IHJlcXVpcmVtZW50IG9mIDEsMDAwIEVVUiwgUmFpemVycyBhaW1zIHRvIGNhdGVyIHRvIGEgZGl2ZXJzZSBwb29sIG9mIGludmVzdG9ycywgaW5jbHVkaW5nIGJvdGggcGh5c2ljYWwgYW5kIGxlZ2FsIGVudGl0aWVzLlxuXG5JbiB0ZXJtcyBvZiByZXR1cm5zLCBSYWl6ZXJzIGFkdmVydGlzZXMgYSByZXR1cm4gcmF0ZSBvZiAwLjA5OSwgb2ZmZXJpbmcgcG90ZW50aWFsIHByb2ZpdGFiaWxpdHkgZm9yIGludmVzdG9ycy4gU2luY2UgaXRzIGluY2VwdGlvbiwgdGhlIHBsYXRmb3JtIGhhcyBmYWNpbGl0YXRlZCBpbnZlc3RtZW50cyB3b3J0aCBvdmVyIOKCrDExNSBtaWxsaW9uLCBoaWdobGlnaHRpbmcgaXRzIHN1Y2Nlc3MgaW4gYXR0cmFjdGluZyBib3RoIGludmVzdG9ycyBhbmQgcmVhbCBlc3RhdGUgZGV2ZWxvcGVycy5cblxuT3ZlcmFsbCwgUmFpemVycyBmaWxscyB0aGUgZ2FwIGJldHdlZW4gcmV0YWlsIGludmVzdG9ycyBhbmQgcmVhbCBlc3RhdGUgZGV2ZWxvcG1lbnQgcHJvamVjdHMsIGFsbG93aW5nIGluZGl2aWR1YWxzIGFuZCBwcm9mZXNzaW9uYWxzIHRvIHBhcnRpY2lwYXRlIGluIHRoZSByZWFsIGVzdGF0ZSBtYXJrZXQgd2l0aCBhIHJlbGF0aXZlbHkgbG93IG1pbmltdW0gaW52ZXN0bWVudCB0aHJlc2hvbGQuIEJ5IHByb3ZpZGluZyBvcHBvcnR1bml0aWVzIGluIHRoZSByZWFsIGVzdGF0ZSBzZWN0b3IsIFJhaXplcnMgY29udHJpYnV0ZXMgdG8gZGVtb2NyYXRpemluZyBpbnZlc3RtZW50IGluIHRoaXMgaW5kdXN0cnkuIiwicmVndWxhdGVkIjpmYWxzZSwiYnV5YmFja0d1YXJhbnRlZSI6ZmFsc2UsInB1YmxpY1N0YXRpc3RpY3MiOmZhbHNlLCJzaWdudXBCb251cyI6ZmFsc2UsInNlY29uZGFyeU1hcmtldCI6ZmFsc2UsImF1dG9JbnZlc3QiOmZhbHNlLCJ3aG9DYW5JbnZlc3QiOiJBbnkgcGh5c2ljYWwgb3IgbGVnYWwgZW50aXR5Iiwic2x1ZyI6InJhaXplcnMifSx7ImNvdW50cnkiOlsiTGl0aHVhbmlhIl0sImludmVzdG1lbnRUeXBlIjpbIlAyUCBsZW5kaW5nIl0sImluZHVzdHJ5IjpbIlNNRSJdLCJsYW5ndWFnZXMiOlsiRW5nbGlzaCIsIkR1dGNoIiwiTGl0aHVhbmlhbiJdLCJwYXltZW50T3B0aW9ucyI6WyJOL0EiXSwiaWQiOjU1MiwiY3JlYXRlZEF0IjoiMjAyMy0wOC0wOFQwOTozMjo1Ni4wMDBaIiwidXBkYXRlZEF0IjoiMjAyMy0wOC0wOFQwOTozMjo1Ni4wMDBaIiwibmFtZSI6Ik5lb2ZpbmFuY2UiLCJsb2dvIjoiL3BsYXRmb3JtTG9nby9OZW9maW5hbmNlLnBuZyIsInllYXJGb3VuZGVkIjoiMjAxNCIsImxpY2Vuc2VOdW1iZXIiOiJVbmxpbWl0ZWQgRU1JIGxpY2Vuc2UiLCJyZXZpZXdzIjpudWxsLCJ3ZWJzaXRlIjoiaHR0cHM6Ly93d3cubmVvZmluYW5jZS5jb20vIiwibWluaW11bUludmVzdG1lbnQiOiIxMCBFVVIiLCJhZHZlcnRpc2VkUmV0dXJuIjoiMTIlIiwiaW52ZXN0b3JzIjoiTi9BIiwidG90YWxGdW5kaW5nVm9sdW1lIjoiTi9BIiwiYXZlcmFnZUxvYW5EdXJhdGlvbiI6Ik4vQSIsImRlc2NyaXB0aW9uIjoiTmVvZmluYW5jZSBpcyBhIGNyb3dkZnVuZGluZyBwbGF0Zm9ybSBiYXNlZCBpbiBMaXRodWFuaWEgdGhhdCBzcGVjaWFsaXplcyBpbiBQMlAgbGVuZGluZyBmb3IgU01Fcy4gRm91bmRlZCBpbiAyMDE0LCBpdCBhaW1zIHRvIGNvbm5lY3QgbGVuZGVycyB3aXRoIGJvcnJvd2VycywgYWxsb3dpbmcgbGVuZGVycyB0byBlYXJuIGhpZ2hlciByZXR1cm5zIG9uIHRoZWlyIGludmVzdG1lbnRzLiBOZW9maW5hbmNlIGlzIGNvbnNpZGVyZWQgb25lIG9mIHRoZSBsZWFkaW5nIFAyUCBsZW5kaW5nIHBsYXRmb3JtcyBpbiB0aGUgY291bnRyeS5cblxuVGhlIHBsYXRmb3JtIG9mZmVycyBpbnRlcm5hdGlvbmFsIGludmVzdG1lbnQgb3Bwb3J0dW5pdGllcywgYXR0cmFjdGluZyBpbnZlc3RvcnMgYmV5b25kIExpdGh1YW5pYSdzIGJvcmRlcnMuIEl0IGlzIGFjY2Vzc2libGUgdG8gaW5kaXZpZHVhbHMgd2hvIGFyZSBjaXRpemVucyBvZiB0aGUgRXVyb3BlYW4gVW5pb24sIGFzIGxvbmcgYXMgdGhleSBwb3NzZXNzIGEgdmFsaWQgcGVyc29uYWwgZG9jdW1lbnQgc3VjaCBhcyBhIHBhc3Nwb3J0IG9yIElEIGNhcmQsIG9yIGEgdmFsaWQgbW9iaWxlIHNpZ25hdHVyZS5cblxuTmVvZmluYW5jZSdzIHdlYnNpdGUgaXMgYXZhaWxhYmxlIGluIG11bHRpcGxlIGxhbmd1YWdlcywgbmFtZWx5IEVuZ2xpc2gsIER1dGNoLCBhbmQgTGl0aHVhbmlhbiwgbWFraW5nIGl0IGVhc2llciBmb3IgaW50ZXJuYXRpb25hbCBpbnZlc3RvcnMgdG8gbmF2aWdhdGUgYW5kIHBhcnRpY2lwYXRlLiBUaGUgbWluaW11bSBpbnZlc3RtZW50IHJlcXVpcmVkIGlzIOKCrDEwLCBtYWtpbmcgaXQgYWNjZXNzaWJsZSB0byBhIHdpZGUgcmFuZ2Ugb2YgaW52ZXN0b3JzIHdpdGggdmFyeWluZyBidWRnZXRzLlxuXG5UaGUgcGxhdGZvcm0gYWR2ZXJ0aXNlcyBhIHJldHVybiBvZiAwLjEyLCBpbmRpY2F0aW5nIHRoZSBwb3RlbnRpYWwgcHJvZml0YWJpbGl0eSBvZiBpbnZlc3RpbmcgdGhyb3VnaCBOZW9maW5hbmNlLiBXaXRoIGEgZm9jdXMgb24gU01FIGxvYW5zLCBpdCBwcm92aWRlcyBhbiBhdmVudWUgZm9yIGludmVzdG9ycyB0byBjb250cmlidXRlIHRvIHRoZSBncm93dGggYW5kIGRldmVsb3BtZW50IG9mIHNtYWxsIGFuZCBtZWRpdW0tc2l6ZWQgYnVzaW5lc3Nlcy5cblxuT3ZlcmFsbCwgTmVvZmluYW5jZSBvZmZlcnMgYSB1c2VyLWZyaWVuZGx5IHBsYXRmb3JtIGZvciBQMlAgbGVuZGluZywgcHJvbW90aW5nIGludmVzdG1lbnQgb3Bwb3J0dW5pdGllcyBmb3IgRVUgY2l0aXplbnMgYW5kIGdlbmVyYXRpbmcgcG90ZW50aWFsIHJldHVybnMgZm9yIGxlbmRlcnMuIEl0cyBlbXBoYXNpcyBvbiBTTUUgbGVuZGluZyBjb250cmlidXRlcyB0byB0aGUgZWNvbm9taWMgZ3Jvd3RoIG9mIHRoZSByZWdpb24gd2hpbGUgYWxsb3dpbmcgaW52ZXN0b3JzIHRvIGVhcm4gaGlnaGVyIHJldHVybnMgb24gdGhlaXIgaW52ZXN0bWVudHMuIiwicmVndWxhdGVkIjpmYWxzZSwiYnV5YmFja0d1YXJhbnRlZSI6ZmFsc2UsInB1YmxpY1N0YXRpc3RpY3MiOmZhbHNlLCJzaWdudXBCb251cyI6ZmFsc2UsInNlY29uZGFyeU1hcmtldCI6dHJ1ZSwiYXV0b0ludmVzdCI6ZmFsc2UsIndob0NhbkludmVzdCI6IkNpdGl6ZW5zIG9mIHRoZSBFdXJvcGVhbiBVbmlvbiB3aXRoIGEgdmFsaWQgcGVyc29uYWwgZG9jdW1lbnQgKHBhc3Nwb3J0IG9yIElEIGNhcmQpIG9yIHZhbGlkIG1vYmlsZSBzaWduYXR1cmUgY2FuIGludmVzdC4iLCJzbHVnIjoibmVvZmluYW5jZSJ9LHsiY291bnRyeSI6WyJQb3J0dWdhbCJdLCJpbnZlc3RtZW50VHlwZSI6WyJQMlAgbGVuZGluZyJdLCJpbmR1c3RyeSI6WyJTTUUiXSwibGFuZ3VhZ2VzIjpbIkVuZ2xpc2giLCJQb3J0dWd1ZXNlIl0sInBheW1lbnRPcHRpb25zIjpbIkJhbmsgdHJhbnNmZXIiLCJEaXJlY3QgZGViaXQiXSwiaWQiOjU1MSwiY3JlYXRlZEF0IjoiMjAyMy0wOC0wOFQwOTozMjo1Ni4wMDBaIiwidXBkYXRlZEF0IjoiMjAyMy0wOC0wOFQwOTozMjo1Ni4wMDBaIiwibmFtZSI6IlJhaXplIiwibG9nbyI6Ii9wbGF0Zm9ybUxvZ28vUmFpemUucG5nIiwieWVhckZvdW5kZWQiOiIyMDE0IiwibGljZW5zZU51bWJlciI6bnVsbCwicmV2aWV3cyI6bnVsbCwid2Vic2l0ZSI6Imh0dHBzOi8vd3d3LnJhaXplLnB0LyIsIm1pbmltdW1JbnZlc3RtZW50IjoiMjAgRVVSIiwiYWR2ZXJ0aXNlZFJldHVybiI6IjYlIiwiaW52ZXN0b3JzIjoiTi9BIiwidG90YWxGdW5kaW5nVm9sdW1lIjoiTi9BIiwiYXZlcmFnZUxvYW5EdXJhdGlvbiI6IjM2IG1vbnRocyIsImRlc2NyaXB0aW9uIjoiQW55IGluZGl2aWR1YWwgb3Igb3JnYW5pemF0aW9uIHdobyBtZWV0cyB0aGUgbWluaW11bSBpbnZlc3RtZW50IHJlcXVpcmVtZW50IG9mIDIwIEVVUiBjYW4gaW52ZXN0IG9uIHRoZSBSYWl6ZSBjcm93ZGZ1bmRpbmcgcGxhdGZvcm0uIFRoaXMgaW5jbHVkZXMgYm90aCBQb3J0dWd1ZXNlIGFuZCBpbnRlcm5hdGlvbmFsIGludmVzdG9ycywgYXMgdGhlIHBsYXRmb3JtIHN1cHBvcnRzIGJvdGggRW5nbGlzaCBhbmQgUG9ydHVndWVzZSBsYW5ndWFnZXMuIFJhaXplIHByaW1hcmlseSBmb2N1c2VzIG9uIFAyUCBsZW5kaW5nIGluIHRoZSBTTUUgaW5kdXN0cnksIGFpbWluZyB0byBwcm92aWRlIGZ1bmRpbmcgdG8gc21hbGwgYW5kIG1lZGl1bS1zaXplZCBlbnRlcnByaXNlcyBhY3Jvc3MgUG9ydHVnYWwuXG5cbkZvdW5kZWQgaW4gMjAxNCwgUmFpemUgaGFzIHF1aWNrbHkgZW1lcmdlZCBhcyBvbmUgb2YgdGhlIGxlYWRpbmcgZnVuZGVycyBvZiBQb3J0dWd1ZXNlIFNNRXMuIFdpdGggdGhlaXIgZXh0ZW5zaXZlIGludmVzdG1lbnQgY29tbXVuaXR5LCBSYWl6ZSBoYXMgYmVjb21lIG9uZSBvZiB0aGUgbGFyZ2VzdCBjcm93ZGZ1bmRpbmcgcGxhdGZvcm1zIGluIFBvcnR1Z2FsLiBUaGVpciBtaXNzaW9uIGlzIHRvIHN1cHBvcnQgYW5kIGludmVzdCBpbiB0aGUgZnV0dXJlIG9mIHRoZSBjb3VudHJ5IGJ5IGNvbGxhYm9yYXRpbmcgd2l0aCB0b3AtcGVyZm9ybWluZyBQb3J0dWd1ZXNlIGNvbXBhbmllcy5cblxuUmFpemUgcHJpZGVzIGl0c2VsZiBvbiBpdHMgZWZmaWNpZW5jeSwgcHJvbWlzaW5nIGNvbXBhbmllcyBmaW5hbmNpbmcgd2l0aGluIGp1c3QgNSBkYXlzLiBUaGUgcGxhdGZvcm0gb2ZmZXJzIGEgc3RyYWlnaHRmb3J3YXJkIGludmVzdG1lbnQgcHJvY2VzcywgbWFraW5nIGl0IGFjY2Vzc2libGUgdG8gYSB3aWRlIHJhbmdlIG9mIGludmVzdG9ycy4gVGhlIG1pbmltdW0gaW52ZXN0bWVudCBhbW91bnQgb2YgMjAgRVVSIGFsbG93cyBmb3IgZ3JlYXRlciBpbmNsdXNpdml0eSBhbmQgYWxsb3dzIGluZGl2aWR1YWxzIHdpdGggdmFyeWluZyBmaW5hbmNpYWwgY2FwYWNpdGllcyB0byBwYXJ0aWNpcGF0ZS5cblxuQnkgY29ubmVjdGluZyBpbnZlc3RvcnMgd2l0aCBTTUVzLCBSYWl6ZSBwcm92aWRlcyBhbiBhbHRlcm5hdGl2ZSBmaW5hbmNpbmcgb3B0aW9uIHRvIHRyYWRpdGlvbmFsIGJhbmtpbmcgY2hhbm5lbHMuIEl0IG9mZmVycyBpbmRpdmlkdWFscyBhbmQgb3JnYW5pemF0aW9ucyB0aGUgb3Bwb3J0dW5pdHkgdG8gc3VwcG9ydCBhbmQgY29udHJpYnV0ZSB0byB0aGUgZ3Jvd3RoIG9mIFBvcnR1Z3Vlc2UgYnVzaW5lc3NlcyB3aGlsZSBlYXJuaW5nIGEgcmV0dXJuIG9uIHRoZWlyIGludmVzdG1lbnQuIEZvciB0aG9zZSBpbnRlcmVzdGVkIGluIHN1cHBvcnRpbmcgdGhlIFBvcnR1Z3Vlc2UgU01FIHNlY3RvciBhbmQgc2Vla2luZyBhIHBvdGVudGlhbCBmaW5hbmNpYWwgcmV0dXJuLCBSYWl6ZSBpcyBhIHJlcHV0YWJsZSBjcm93ZGZ1bmRpbmcgcGxhdGZvcm0gdG8gY29uc2lkZXIuIiwicmVndWxhdGVkIjp0cnVlLCJidXliYWNrR3VhcmFudGVlIjpmYWxzZSwicHVibGljU3RhdGlzdGljcyI6dHJ1ZSwic2lnbnVwQm9udXMiOmZhbHNlLCJzZWNvbmRhcnlNYXJrZXQiOnRydWUsImF1dG9JbnZlc3QiOnRydWUsIndob0NhbkludmVzdCI6bnVsbCwic2x1ZyI6InJhaXplIn0seyJjb3VudHJ5IjpbIlN3ZWRlbiJdLCJpbnZlc3RtZW50VHlwZSI6WyJQMlAgbGVuZGluZyJdLCJpbmR1c3RyeSI6WyJTTUUiXSwibGFuZ3VhZ2VzIjpbIkVuZ2xpc2giLCJTd2VkaXNoIiwiRmlubmlzaCJdLCJwYXltZW50T3B0aW9ucyI6WyJOL0EiXSwiaWQiOjU1MCwiY3JlYXRlZEF0IjoiMjAyMy0wOC0wOFQwOTozMjo1Ni4wMDBaIiwidXBkYXRlZEF0IjoiMjAyMy0wOC0wOFQwOTozMjo1Ni4wMDBaIiwibmFtZSI6IlNhdmVMZW5kIiwibG9nbyI6Ii9wbGF0Zm9ybUxvZ28vU2F2ZUxlbmQucG5nIiwieWVhckZvdW5kZWQiOiIyMDE0IiwibGljZW5zZU51bWJlciI6IjU1OTA5My01MTc2IiwicmV2aWV3cyI6bnVsbCwid2Vic2l0ZSI6Imh0dHBzOi8vc2F2ZWxlbmQuc2UvIiwibWluaW11bUludmVzdG1lbnQiOiIyLDAwMCBFVVIiLCJhZHZlcnRpc2VkUmV0dXJuIjoiOCUiLCJpbnZlc3RvcnMiOiJOL0EiLCJ0b3RhbEZ1bmRpbmdWb2x1bWUiOiJOL0EiLCJhdmVyYWdlTG9hbkR1cmF0aW9uIjoiTi9BIiwiZGVzY3JpcHRpb24iOiJTYXZlTGVuZCBpcyBhIGNyb3dkZnVuZGluZyBwbGF0Zm9ybSBiYXNlZCBpbiBTd2VkZW4gdGhhdCBzcGVjaWFsaXplcyBpbiBwZWVyLXRvLXBlZXIgbGVuZGluZyBmb3Igc21hbGwgYW5kIG1lZGl1bS1zaXplZCBlbnRlcnByaXNlcyAoU01FcykuIEZvdW5kZWQgaW4gMjAxNCwgU2F2ZUxlbmQgcHJvdmlkZXMgaW5kaXZpZHVhbHMgYW5kIGNvbXBhbmllcyB0aGUgb3Bwb3J0dW5pdHkgdG8gaW52ZXN0IGluIGNyZWRpdCBhbmQgbWFrZSBtb25leSBsaWtlIGJpZyBiYW5rcyBkby4gUHJldmlvdXNseSwgdGhpcyBmb3JtIG9mIGludmVzdG1lbnQgd2FzIG9ubHkgYWNjZXNzaWJsZSB0byBhIHNlbGVjdCBmZXcsIGJ1dCBTYXZlTGVuZCBoYXMgbWFkZSBpdCBhY2Nlc3NpYmxlIHRvIHRoZSBwdWJsaWMgdGhyb3VnaCBwZWVyLXRvLXBlZXIgbG9hbnMuXG5cblNhdmVMZW5kIG9wZXJhdGVzIHByaW1hcmlseSBpbiBTd2VkZW4sIGJ1dCBhbHNvIGNhdGVycyB0byBFbmdsaXNoIGFuZCBGaW5uaXNoIHNwZWFraW5nIGluZGl2aWR1YWxzIGFuZCBidXNpbmVzc2VzLiBUaGVpciB3ZWJzaXRlLCBhdmFpbGFibGUgYXQgaHR0cHM6Ly9zYXZlbGVuZC5zZS8sIHByb3ZpZGVzIGluZm9ybWF0aW9uIGFuZCBzZXJ2aWNlcyBpbiB0aGVzZSB0aHJlZSBsYW5ndWFnZXMuXG5cbkludmVzdGluZyBvbiBTYXZlTGVuZCByZXF1aXJlcyBhIG1pbmltdW0gaW52ZXN0bWVudCBvZiAyLDAwMCBFVVIuIEFsdGhvdWdoIHRoZSBhZHZlcnRpc2VkIHJldHVybiBpcyAwLDA4LCBpdCBpcyBpbXBvcnRhbnQgdG8gbm90ZSB0aGF0IHRoaXMgbWF5IHZhcnkgZGVwZW5kaW5nIG9uIHRoZSBzcGVjaWZpYyBsb2FucyBhdmFpbGFibGUgb24gdGhlIHBsYXRmb3JtLlxuXG5TYXZlTGVuZCBhY2NlcHRzIGludmVzdG1lbnRzIGZyb20gYm90aCBwZXJzb25hbCBhbmQgY29ycG9yYXRlIGludmVzdG9ycywgYWxsb3dpbmcgYSB3aWRlIHJhbmdlIG9mIGluZGl2aWR1YWxzIGFuZCBidXNpbmVzc2VzIHRvIHBhcnRpY2lwYXRlIGluIHRoaXMgY3Jvd2RmdW5kaW5nIG9wcG9ydHVuaXR5LlxuXG5PdmVyYWxsLCBTYXZlTGVuZCBhaW1zIHRvIGRlbW9jcmF0aXplIGludmVzdG1lbnQgb3Bwb3J0dW5pdGllcyBhbmQgYnJpZGdlIHRoZSBnYXAgYmV0d2VlbiBib3Jyb3dlcnMgYW5kIGxlbmRlcnMsIGFsbG93aW5nIGluZGl2aWR1YWxzIGFuZCBjb21wYW5pZXMgdG8gcGFydGljaXBhdGUgaW4gdGhlIGNyZWRpdCBtYXJrZXQgYW5kIGVhcm4gcmV0dXJucyB0aHJvdWdoIHBlZXItdG8tcGVlciBsZW5kaW5nLiIsInJlZ3VsYXRlZCI6ZmFsc2UsImJ1eWJhY2tHdWFyYW50ZWUiOmZhbHNlLCJwdWJsaWNTdGF0aXN0aWNzIjpmYWxzZSwic2lnbnVwQm9udXMiOmZhbHNlLCJzZWNvbmRhcnlNYXJrZXQiOmZhbHNlLCJhdXRvSW52ZXN0IjpmYWxzZSwid2hvQ2FuSW52ZXN0IjoiUGVyc29uYWwsIENvcnBvcmF0ZSIsInNsdWciOiJzYXZlbGVuZCJ9LHsiY291bnRyeSI6WyJOZXRoZXJsYW5kcyJdLCJpbnZlc3RtZW50VHlwZSI6WyJNaW5pLWJvbmRzIl0sImluZHVzdHJ5IjpbIkdyZWVuIGVuZXJneSJdLCJsYW5ndWFnZXMiOltdLCJwYXltZW50T3B0aW9ucyI6WyJOL0EiXSwiaWQiOjU0OSwiY3JlYXRlZEF0IjoiMjAyMy0wOC0wOFQwOTozMjo1Ni4wMDBaIiwidXBkYXRlZEF0IjoiMjAyMy0wOC0wOFQwOTozMjo1Ni4wMDBaIiwibmFtZSI6Ilpvbm5lcGFuZWxlbkRlbGVuIiwibG9nbyI6Ii9wbGF0Zm9ybUxvZ28vWm9ubmVwYW5lbGVuRGVsZW4ucG5nIiwieWVhckZvdW5kZWQiOiIyMDE0IiwibGljZW5zZU51bWJlciI6bnVsbCwicmV2aWV3cyI6bnVsbCwid2Vic2l0ZSI6Imh0dHBzOi8vd3d3Lnpvbm5lcGFuZWxlbmRlbGVuLm5sLyIsIm1pbmltdW1JbnZlc3RtZW50IjoiMjUgRVVSIiwiYWR2ZXJ0aXNlZFJldHVybiI6ImFyb3VuZCAzLjUlIiwiaW52ZXN0b3JzIjoiTi9BIiwidG90YWxGdW5kaW5nVm9sdW1lIjoiTi9BIiwiYXZlcmFnZUxvYW5EdXJhdGlvbiI6Ik4vQSIsImRlc2NyaXB0aW9uIjoiWm9ubmVwYW5lbGVuRGVsZW4gaXMgYSBjcm93ZGZ1bmRpbmcgcGxhdGZvcm0gYmFzZWQgaW4gdGhlIE5ldGhlcmxhbmRzIHRoYXQgb2ZmZXJzIG1pbmktYm9uZHMgYXMgYW4gaW52ZXN0bWVudCBvcHBvcnR1bml0eS4gVGhlIHBsYXRmb3JtIGZvY3VzZXMgb24gdGhlIGdyZWVuIGVuZXJneSBpbmR1c3RyeSwgc3BlY2lmaWNhbGx5IHNvbGFyIGVuZXJneSBwcm9qZWN0cy4gRm91bmRlZCBpbiAyMDE0LCBab25uZXBhbmVsZW5EZWxlbiBhaW1zIHRvIGNvbm5lY3Qgc29sYXIgZW5lcmd5IHByb2plY3RzIHdpdGggaW5kaXZpZHVhbHMgYW5kIG9yZ2FuaXphdGlvbnMgd2hvIGFyZSBpbnRlcmVzdGVkIGluIGludmVzdGluZyBpbiB0aGVtIHRocm91Z2ggYSBsb2FuLlxuXG5PbmUgb2YgdGhlIHVuaXF1ZSBhc3BlY3RzIG9mIFpvbm5lcGFuZWxlbkRlbGVuIGlzIHRoYXQgaXQgYWxsb3dzIGZvciBpbnZlc3RtZW50cyBzdGFydGluZyBmcm9tIGp1c3QgMjUgZXVyb3MuIFRoaXMgbG93IG1pbmltdW0gaW52ZXN0bWVudCBtYWtlcyBpdCBhY2Nlc3NpYmxlIHRvIGEgd2lkZSByYW5nZSBvZiBpbnZlc3RvcnMsIGluY2x1ZGluZyBpbmRpdmlkdWFsIHNhdmVycyB3aG8gbWF5IG5vdCB0eXBpY2FsbHkgaGF2ZSBhY2Nlc3MgdG8gc3VjaCBpbnZlc3RtZW50IG9wcG9ydHVuaXRpZXMuXG5cblRoZSBwbGF0Zm9ybSBvZmZlcnMgYW4gYWR2ZXJ0aXNlZCByZXR1cm4gb2YgYXJvdW5kIDMuNSUsIHByb3ZpZGluZyBpbnZlc3RvcnMgd2l0aCBhbiBhdHRyYWN0aXZlIHBvdGVudGlhbCByZXR1cm4gb24gdGhlaXIgaW52ZXN0bWVudC4gSXQgaXMgd29ydGggbm90aW5nIHRoYXQgdGhlIGFubnVhbCBpbnRlcmVzdCByYXRlIGlzIHZhcmlhYmxlIGFuZCBkZXBlbmRlbnQgb24gdmFyaW91cyBmYWN0b3JzLCBlbnN1cmluZyBwb3RlbnRpYWwgZmxleGliaWxpdHkgZm9yIGJvdGggaW52ZXN0b3JzIGFuZCB0aGUgc29sYXIgZW5lcmd5IHByb2plY3RzLlxuXG5ab25uZXBhbmVsZW5EZWxlbidzIHdlYnNpdGUgcHJvdmlkZXMgY29tcHJlaGVuc2l2ZSBpbmZvcm1hdGlvbiBhYm91dCB0aGUgcGxhdGZvcm0gYW5kIHRoZSBpbnZlc3RtZW50IG9wcG9ydHVuaXRpZXMgYXZhaWxhYmxlLiBVbmZvcnR1bmF0ZWx5LCB0aGVyZSBpcyBubyBpbmZvcm1hdGlvbiBwcm92aWRlZCBhYm91dCB0aGUgbGFuZ3VhZ2VzIHN1cHBvcnRlZCBvbiB0aGUgd2Vic2l0ZS5cblxuT3ZlcmFsbCwgWm9ubmVwYW5lbGVuRGVsZW4gb2ZmZXJzIGFuIGFjY2Vzc2libGUgYW5kIGF0dHJhY3RpdmUgaW52ZXN0bWVudCBvcHRpb24gZm9yIGluZGl2aWR1YWxzIGFuZCBvcmdhbml6YXRpb25zIGludGVyZXN0ZWQgaW4gc3VwcG9ydGluZyBncmVlbiBlbmVyZ3kgcHJvamVjdHMgaW4gdGhlIE5ldGhlcmxhbmRzLiIsInJlZ3VsYXRlZCI6ZmFsc2UsImJ1eWJhY2tHdWFyYW50ZWUiOmZhbHNlLCJwdWJsaWNTdGF0aXN0aWNzIjpmYWxzZSwic2lnbnVwQm9udXMiOmZhbHNlLCJzZWNvbmRhcnlNYXJrZXQiOnRydWUsImF1dG9JbnZlc3QiOmZhbHNlLCJ3aG9DYW5JbnZlc3QiOm51bGwsInNsdWciOiJ6b25uZXBhbmVsZW5kZWxlbiJ9LHsiY291bnRyeSI6WyJOZXRoZXJsYW5kcyJdLCJpbnZlc3RtZW50VHlwZSI6WyJCdXktdG8tbGV0Il0sImluZHVzdHJ5IjpbIlJlYWwgZXN0YXRlIl0sImxhbmd1YWdlcyI6WyJEdXRjaCJdLCJwYXltZW50T3B0aW9ucyI6WyJOL0EiXSwiaWQiOjU0OCwiY3JlYXRlZEF0IjoiMjAyMy0wOC0wOFQwOTozMjo1Ni4wMDBaIiwidXBkYXRlZEF0IjoiMjAyMy0wOC0wOFQwOTozMjo1Ni4wMDBaIiwibmFtZSI6IlNhbWVuSW5HZWxkIiwibG9nbyI6Ii9wbGF0Zm9ybUxvZ28vU2FtZW5JbkdlbGQucG5nIiwieWVhckZvdW5kZWQiOiIyMDE0IiwibGljZW5zZU51bWJlciI6IjEyMDQyNDY3IiwicmV2aWV3cyI6bnVsbCwid2Vic2l0ZSI6Imh0dHBzOi8vc2FtZW5pbmdlbGQubmwvIiwibWluaW11bUludmVzdG1lbnQiOiIyNTAgRVVSIiwiYWR2ZXJ0aXNlZFJldHVybiI6Ik4vQSIsImludmVzdG9ycyI6Ik4vQSIsInRvdGFsRnVuZGluZ1ZvbHVtZSI6Ik4vQSIsImF2ZXJhZ2VMb2FuRHVyYXRpb24iOiJOL0EiLCJkZXNjcmlwdGlvbiI6IlNhbWVuSW5HZWxkIGlzIGEgY3Jvd2RmdW5kaW5nIHBsYXRmb3JtIGJhc2VkIGluIHRoZSBOZXRoZXJsYW5kcyB0aGF0IHNwZWNpYWxpemVzIGluIGJ1eS10by1sZXQgaW52ZXN0bWVudHMgaW4gdGhlIHJlYWwgZXN0YXRlIGluZHVzdHJ5LiBUaGUgcGxhdGZvcm0gd2FzIGZvdW5kZWQgaW4gMjAxNCBhbmQgcHJpbWFyaWx5IG9wZXJhdGVzIGluIHRoZSBEdXRjaCBtYXJrZXQsIHdpdGggaXRzIHdlYnNpdGUgYXZhaWxhYmxlIGluIHRoZSBEdXRjaCBsYW5ndWFnZS4gXG5cbk9uZSBvZiB0aGUga2V5IGhpZ2hsaWdodHMgb2YgU2FtZW5JbkdlbGQgaXMgdGhlIGV4dGVuc2l2ZSBjb2xsYXRlcmFsIGl0IG9mZmVycyBjb21wYXJlZCB0byBvdGhlciBjcm93ZGZ1bmRpbmcgcGxhdGZvcm1zLiBJdCBwcm92aWRlcyBtb3J0Z2FnZSBzZWN1cml0eSB0byBpbnZlc3RvcnMsIGVuc3VyaW5nIHRoYXQgdGhleSBoYXZlIHRoZSBmaXJzdCByaWdodCB0byBhIHJlZnVuZCBpbiBjYXNlIG9mIGZpbmFuY2lhbCB1bmNlcnRhaW50eS4gVGhpcyBjb2xsYXRlcmFsIGlzIGV2ZW4gb2ZmZXJlZCBiZWZvcmUgdGhlIHRheCBhdXRob3JpdGllcywgcHJvdmlkaW5nIGFuIGFkZGl0aW9uYWwgbGF5ZXIgb2YgcHJvdGVjdGlvbiB0byBpbnZlc3RvcnMuXG5cbldoaWxlIHRoZSBleGFjdCBhZHZlcnRpc2VkIHJldHVybiBpcyBub3QgbWVudGlvbmVkLCBTYW1lbkluR2VsZCBvZmZlcnMgaW52ZXN0bWVudCBvcHBvcnR1bml0aWVzIHdpdGggYSBtaW5pbXVtIGludmVzdG1lbnQgYW1vdW50IG9mIDI1MCBFVVIuIFRoaXMgbG93ZXIgZW50cnkgYmFycmllciBtYWtlcyBpdCBhY2Nlc3NpYmxlIHRvIGJvdGggcGVyc29uYWwgYW5kIGNvcnBvcmF0ZSBpbnZlc3RvcnMuXG5cblVuZm9ydHVuYXRlbHksIHRoZSBwcm92aWRlZCBpbmZvcm1hdGlvbiBlbmRzIGFicnVwdGx5IGFuZCBkb2VzIG5vdCBwcm92aWRlIGZ1cnRoZXIgZGV0YWlscyBhYm91dCB0aGUgZmVhdHVyZXMgYW5kIGJlbmVmaXRzIG9mIGludmVzdGluZyB0aHJvdWdoIFNhbWVuSW5HZWxkLiBOb25ldGhlbGVzcywgd2l0aCBpdHMgZm9jdXMgb24gYnV5LXRvLWxldCByZWFsIGVzdGF0ZSBpbnZlc3RtZW50cyBhbmQgaXRzIHVuaXF1ZSBtb3J0Z2FnZSBzZWN1cml0eSBvZmZlcmluZywgU2FtZW5JbkdlbGQgYXBwZWFycyB0byBiZSBhIHByb21pc2luZyBjcm93ZGZ1bmRpbmcgcGxhdGZvcm0gZm9yIGluZGl2aWR1YWxzIGFuZCBidXNpbmVzc2VzIGxvb2tpbmcgdG8gaW52ZXN0IGluIHRoZSBOZXRoZXJsYW5kcy4iLCJyZWd1bGF0ZWQiOmZhbHNlLCJidXliYWNrR3VhcmFudGVlIjpmYWxzZSwicHVibGljU3RhdGlzdGljcyI6ZmFsc2UsInNpZ251cEJvbnVzIjpmYWxzZSwic2Vjb25kYXJ5TWFya2V0IjpmYWxzZSwiYXV0b0ludmVzdCI6ZmFsc2UsIndob0NhbkludmVzdCI6IlBlcnNvbmFsLCBDb3Jwb3JhdGUiLCJzbHVnIjoic2FtZW5pbmdlbGQifSx7ImNvdW50cnkiOlsiQ3JvYXRpYSJdLCJpbnZlc3RtZW50VHlwZSI6WyJFcXVpdHkiLCJEZWJ0IiwiUDJQIGxlbmRpbmciLCJSZXdhcmQiLCJEb25hdGlvbiIsIk1pbmktYm9uZHMiXSwiaW5kdXN0cnkiOlsiUmVhbCBlc3RhdGUiLCJTdGFydHVwcyIsIlNNRSIsIlN1c3RhaW5hYmlsaXR5IiwiTGl0aWdhdGlvbiIsIkdyZWVuIGVuZXJneSIsIkhlYWx0aCAmIFNjaWVuY2UiLCJMb2dpc3RpY3MiLCJQZXJzb25hbCBsb2FucyIsIkFydCIsIk1vcnRnYWdlcyIsIlNvY2lhbCBjYXVzZSIsIkVkdWNhdGlvbiIsIkZhcm1pbmciLCJTcG9ydCIsIk1hcml0aW1lIl0sImxhbmd1YWdlcyI6WyJCdWxnYXJpYW4iLCJDcm9hdGlhbiIsIkN6ZWNoIiwiRGFuaXNoIiwiRW5nbGlzaCIsIkZpbm5pc2giLCJGcmVuY2giLCJHZXJtYW4iLCJHcmVlayIsIkh1bmdhcmlhbiIsIkl0YWxpYW4iLCJQb2xpc2giLCJQb3J0dWd1ZXNlIiwiUm9tYW5pYW4iLCJTbG92YWsiLCJTbG92ZW5pYW4iLCJTcGFuaXNoIiwiU3dlZGlzaCJdLCJwYXltZW50T3B0aW9ucyI6WyJDcmVkaXQgY2FyZCIsIkJhbmsgdHJhbnNmZXIiLCJEaXJlY3QgZGViaXQiLCJQYXlQYWwiLCJDcnlwdG9jdXJyZW5jeSJdLCJpZCI6NTQ3LCJjcmVhdGVkQXQiOiIyMDIzLTA4LTA4VDA5OjMyOjU2LjAwMFoiLCJ1cGRhdGVkQXQiOiIyMDIzLTA4LTA4VDA5OjMyOjU2LjAwMFoiLCJuYW1lIjoiQm9uYSBGaWRlcyBJbnZlc3QiLCJsb2dvIjoiL3BsYXRmb3JtTG9nby9Cb25hIEZpZGVzIEludmVzdC5wbmciLCJ5ZWFyRm91bmRlZCI6IjIwMTQiLCJsaWNlbnNlTnVtYmVyIjpudWxsLCJyZXZpZXdzIjpudWxsLCJ3ZWJzaXRlIjoiaHR0cHM6Ly9ib25hZmlkZXNpbnZlc3QuZXUvIiwibWluaW11bUludmVzdG1lbnQiOiIxIEVVUiIsImFkdmVydGlzZWRSZXR1cm4iOiI0JSIsImludmVzdG9ycyI6Ik4vQSIsInRvdGFsRnVuZGluZ1ZvbHVtZSI6Ik4vQSIsImF2ZXJhZ2VMb2FuRHVyYXRpb24iOiJOL0EiLCJkZXNjcmlwdGlvbiI6IkFueSBpbmRpdmlkdWFsIG9yIG9yZ2FuaXphdGlvbiBmcm9tIGFyb3VuZCB0aGUgd29ybGQgY2FuIGludmVzdCB0aHJvdWdoIEJvbmEgRmlkZXMgSW52ZXN0LiBUaGUgcGxhdGZvcm0gb2ZmZXJzIGEgd2lkZSByYW5nZSBvZiBpbnZlc3RtZW50IHR5cGVzIGluY2x1ZGluZyBlcXVpdHksIGRlYnQsIFAyUCBsZW5kaW5nLCByZXdhcmQtYmFzZWQgY3Jvd2RmdW5kaW5nLCBkb25hdGlvbi1iYXNlZCBjcm93ZGZ1bmRpbmcsIGFuZCBtaW5pLWJvbmRzLiBcblxuQm9uYSBGaWRlcyBJbnZlc3QgY2F0ZXJzIHRvIG11bHRpcGxlIGluZHVzdHJpZXMsIG1ha2luZyBpdCBzdWl0YWJsZSBmb3IgaW52ZXN0bWVudHMgaW4gcmVhbCBlc3RhdGUsIHN0YXJ0dXBzLCBzbWFsbCBhbmQgbWVkaXVtIGVudGVycHJpc2VzIChTTUVzKSwgc3VzdGFpbmFiaWxpdHkgcHJvamVjdHMsIGxpdGlnYXRpb24gZnVuZGluZywgZ3JlZW4gZW5lcmd5IGluaXRpYXRpdmVzLCBoZWFsdGggYW5kIHNjaWVuY2UgdmVudHVyZXMsIGxvZ2lzdGljcyBwcm9qZWN0cywgcGVyc29uYWwgbG9hbnMsIGFydCBjYW1wYWlnbnMsIG1vcnRnYWdlcywgc29jaWFsIGNhdXNlcywgZWR1Y2F0aW9uLCBmYXJtaW5nLCBzcG9ydHMsIGFuZCBtYXJpdGltZSB2ZW50dXJlcy4gXG5cbkVzdGFibGlzaGVkIGluIDIwMTQgYW5kIGJhc2VkIGluIENyb2F0aWEsIEJvbmEgRmlkZXMgSW52ZXN0IGhhcyBhIHVzZXItZnJpZW5kbHkgd2Vic2l0ZSB0aGF0IHByb3ZpZGVzIGluZm9ybWF0aW9uIGluIG11bHRpcGxlIGxhbmd1YWdlcywgaW5jbHVkaW5nIEJ1bGdhcmlhbiwgQ3JvYXRpYW4sIEN6ZWNoLCBEYW5pc2gsIEVuZ2xpc2gsIEZpbm5pc2gsIEZyZW5jaCwgR2VybWFuLCBHcmVlaywgSHVuZ2FyaWFuLCBJdGFsaWFuLCBQb2xpc2gsIFBvcnR1Z3Vlc2UsIFJvbWFuaWFuLCBTbG92YWssIFNsb3ZlbmlhbiwgU3BhbmlzaCwgYW5kIFN3ZWRpc2guIFxuXG5XaXRoIGEgbWluaW11bSBpbnZlc3RtZW50IG9mIGp1c3QgMSBFVVIsIEJvbmEgRmlkZXMgSW52ZXN0IGFpbXMgdG8gbWFrZSBjcm93ZGZ1bmRpbmcgYWNjZXNzaWJsZSB0byBhIHdpZGUgcmFuZ2Ugb2YgaW52ZXN0b3JzLCBmcm9tIGluZGl2aWR1YWxzIHRvIGluc3RpdHV0aW9ucy4gVGhlIHBsYXRmb3JtIG9mZmVycyBhbiBhZHZlcnRpc2VkIHJldHVybiBvZiAwLjA0LlxuXG5JbiBzdW1tYXJ5LCBCb25hIEZpZGVzIEludmVzdCBpcyBhbiBFVS1iYXNlZCBmaW50ZWNoIHBsYXRmb3JtIHRoYXQgZmFjaWxpdGF0ZXMgY3Jvd2RmdW5kaW5nIGZvciBpbmRpdmlkdWFscyBhbmQgb3JnYW5pemF0aW9ucyB3b3JsZHdpZGUuIFdpdGggaXRzIGRpdmVyc2UgcmFuZ2Ugb2YgaW52ZXN0bWVudCBvcHRpb25zIGFuZCBpbmR1c3RyeSBwcmVzZW5jZSwgaXQgb2ZmZXJzIG9wcG9ydHVuaXRpZXMgZm9yIGludmVzdG9ycyB0byBzdXBwb3J0IGFuZCBmdW5kIHByb2plY3RzIGluIHZhcmlvdXMgc2VjdG9ycy4iLCJyZWd1bGF0ZWQiOnRydWUsImJ1eWJhY2tHdWFyYW50ZWUiOmZhbHNlLCJwdWJsaWNTdGF0aXN0aWNzIjpmYWxzZSwic2lnbnVwQm9udXMiOmZhbHNlLCJzZWNvbmRhcnlNYXJrZXQiOmZhbHNlLCJhdXRvSW52ZXN0IjpmYWxzZSwid2hvQ2FuSW52ZXN0IjpudWxsLCJzbHVnIjoiYm9uYWZpZGVzaW52ZXN0In0seyJjb3VudHJ5IjpbIlVuaXRlZCBLaW5nZG9tIl0sImludmVzdG1lbnRUeXBlIjpbIkVxdWl0eSJdLCJpbmR1c3RyeSI6WyJSZWFsIGVzdGF0ZSJdLCJsYW5ndWFnZXMiOlsiRW5nbGlzaCJdLCJwYXltZW50T3B0aW9ucyI6WyJOL0EiXSwiaWQiOjU0NiwiY3JlYXRlZEF0IjoiMjAyMy0wOC0wOFQwOTozMjo1Ni4wMDBaIiwidXBkYXRlZEF0IjoiMjAyMy0wOC0wOFQwOTozMjo1Ni4wMDBaIiwibmFtZSI6IkJyaWNrc2F2ZSIsImxvZ28iOiIvcGxhdGZvcm1Mb2dvL0JyaWNrc2F2ZS5wbmciLCJ5ZWFyRm91bmRlZCI6IjIwMTUiLCJsaWNlbnNlTnVtYmVyIjoiMTAxNDA3MzciLCJyZXZpZXdzIjpudWxsLCJ3ZWJzaXRlIjoiaHR0cHM6Ly93d3cuYnJpY2tzYXZlLmNvbS8iLCJtaW5pbXVtSW52ZXN0bWVudCI6IjEsMDAwIEVVUiIsImFkdmVydGlzZWRSZXR1cm4iOiJVcCB0byAxMiUiLCJpbnZlc3RvcnMiOiJOL0EiLCJ0b3RhbEZ1bmRpbmdWb2x1bWUiOiJOL0EiLCJhdmVyYWdlTG9hbkR1cmF0aW9uIjoiTi9BIiwiZGVzY3JpcHRpb24iOiJBbnlvbmUgb3ZlciB0aGUgYWdlIG9mIDE4IHdpdGggYSBtaW5pbXVtIGludmVzdG1lbnQgb2YgMSwwMDAgRVVSIGNhbiBpbnZlc3QgaW4gQnJpY2tzYXZlLiBUaGUgcGxhdGZvcm0gYWxsb3dzIGluZGl2aWR1YWxzIHRvIGludmVzdCBpbiByZWFsIGVzdGF0ZSBwcm9wZXJ0aWVzIGdsb2JhbGx5LCBwcm92aWRpbmcgdGhlbSB3aXRoIHRoZSBvcHBvcnR1bml0eSB0byBnYWluIGhpZ2hlciByZXR1cm5zLiBCcmlja3NhdmUgd2FzIGZvdW5kZWQgaW4gMjAxNSBhbmQgaXMgYmFzZWQgaW4gdGhlIFVuaXRlZCBLaW5nZG9tLiBUaGUgcGxhdGZvcm0gb2ZmZXJzIGVxdWl0eS1iYXNlZCBpbnZlc3RtZW50cywgYWxsb3dpbmcgaW52ZXN0b3JzIHRvIGJlY29tZSBwYXJ0aWFsIG93bmVycyBpbiBpbnN0aXR1dGlvbmFsLWdyYWRlIHByb3BlcnRpZXMuIFxuXG5Ccmlja3NhdmUgYm9hc3RzIGEgdXNlci1mcmllbmRseSB3ZWJzaXRlIGF2YWlsYWJsZSBpbiBFbmdsaXNoLCBtYWtpbmcgaXQgYWNjZXNzaWJsZSB0byBhIHdpZGUgcmFuZ2Ugb2YgaW52ZXN0b3JzLiBUaGUgcGxhdGZvcm0gYWltcyB0byBtYWtlIHJlYWwgZXN0YXRlIGludmVzdG1lbnQgaGFzc2xlLWZyZWUgYW5kIGxvdy1yaXNrIGJ5IGNhcmVmdWxseSBzZWxlY3RpbmcgcHJvcGVydGllcy5cblxuSW52ZXN0b3JzIGNhbiBleHBlY3QgYW4gYWR2ZXJ0aXNlZCByZXR1cm4gb2YgdXAgdG8gMTIlIG9uIHRoZWlyIGludmVzdG1lbnRzLiBCcmlja3NhdmUgZW5zdXJlcyB0aGF0IGluZGl2aWR1YWxzIGhhdmUgZGlyZWN0IGFjY2VzcyB0byB0aGVzZSBoaWdoLXF1YWxpdHkgcmVhbCBlc3RhdGUgaW52ZXN0bWVudHMgdGhhdCB3ZXJlIHRyYWRpdGlvbmFsbHkgb25seSBhdmFpbGFibGUgdG8gaW5zdGl0dXRpb25hbCBpbnZlc3RvcnMuIFRoaXMgY3JlYXRlcyBhbiBvcHBvcnR1bml0eSBmb3IgaW52ZXN0b3JzIHRvIGRpdmVyc2lmeSB0aGVpciBwb3J0Zm9saW9zIGFuZCBwb3RlbnRpYWxseSBnZW5lcmF0ZSBzaWduaWZpY2FudCByZXR1cm5zLlxuXG5XaXRoIGl0cyBnbG9iYWwgcmVhbCBlc3RhdGUgZm9jdXMsIEJyaWNrc2F2ZSBhbGxvd3MgaW52ZXN0b3JzIHRvIGNob29zZSBmcm9tIGEgdmFyaWV0eSBvZiBwcm9wZXJ0aWVzIGluIGRpZmZlcmVudCBsb2NhdGlvbnMsIG1pdGlnYXRpbmcgdGhlIHJpc2sgYXNzb2NpYXRlZCB3aXRoIGludmVzdGluZyBzb2xlbHkgaW4gb25lIG1hcmtldC4gQnkgZW5hYmxpbmcgaW5kaXZpZHVhbHMgdG8gaW52ZXN0IGluIGluc3RpdHV0aW9uYWwtZ3JhZGUgcHJvcGVydGllcyB3aXRoIHJlbGF0aXZlbHkgc21hbGwgYW1vdW50cyBvZiBjYXBpdGFsLCBCcmlja3NhdmUgZGVtb2NyYXRpemVzIHJlYWwgZXN0YXRlIGludmVzdGluZyBhbmQgcHJvdmlkZXMgYSBwYXRod2F5IGZvciBpbmRpdmlkdWFscyB0byBncm93IHRoZWlyIHdlYWx0aC4iLCJyZWd1bGF0ZWQiOmZhbHNlLCJidXliYWNrR3VhcmFudGVlIjpmYWxzZSwicHVibGljU3RhdGlzdGljcyI6ZmFsc2UsInNpZ251cEJvbnVzIjpmYWxzZSwic2Vjb25kYXJ5TWFya2V0IjpmYWxzZSwiYXV0b0ludmVzdCI6ZmFsc2UsIndob0NhbkludmVzdCI6bnVsbCwic2x1ZyI6ImJyaWNrc2F2ZSJ9LHsiY291bnRyeSI6WyJOb3J3YXkiXSwiaW52ZXN0bWVudFR5cGUiOlsiRXF1aXR5Il0sImluZHVzdHJ5IjpbIlN0YXJ0dXBzIiwiU01FIl0sImxhbmd1YWdlcyI6WyJOb3J3ZWdpYW4iXSwicGF5bWVudE9wdGlvbnMiOlsiTi9BIl0sImlkIjo1NDUsImNyZWF0ZWRBdCI6IjIwMjMtMDgtMDhUMDk6MzI6NTYuMDAwWiIsInVwZGF0ZWRBdCI6IjIwMjMtMDgtMDhUMDk6MzI6NTYuMDAwWiIsIm5hbWUiOiJGb2xrZWludmVzdCIsImxvZ28iOiIvcGxhdGZvcm1Mb2dvL0ZvbGtlaW52ZXN0LnBuZyIsInllYXJGb3VuZGVkIjoiMjAxNSIsImxpY2Vuc2VOdW1iZXIiOiI5MTYgNTQ1IDA2MSIsInJldmlld3MiOm51bGwsIndlYnNpdGUiOiJodHRwczovL2ZvbGtlaW52ZXN0Lm5vLyIsIm1pbmltdW1JbnZlc3RtZW50IjoiNTAwIEVVUiIsImFkdmVydGlzZWRSZXR1cm4iOiJOL0EiLCJpbnZlc3RvcnMiOiJOL0EiLCJ0b3RhbEZ1bmRpbmdWb2x1bWUiOiJOL0EiLCJhdmVyYWdlTG9hbkR1cmF0aW9uIjoiTi9BIiwiZGVzY3JpcHRpb24iOiJGb2xrZWludmVzdCBpcyBhIGxlYWRpbmcgTm9yZGljIGVxdWl0eSBjcm93ZGZ1bmRpbmcgcGxhdGZvcm0gYmFzZWQgaW4gTm9yd2F5LiBGb3VuZGVkIGluIDIwMTUsIHRoZSBwbGF0Zm9ybSBhaW1zIHRvIGZhY2lsaXRhdGUgdGhlIHJhaXNpbmcgb2YgY2FwaXRhbCBmb3Igc2NhbGluZyBzbWFsbCBhbmQgbWVkaXVtLXNpemVkIGVudGVycHJpc2VzIChTTUVzKS4gV2l0aCBhIGZvY3VzIG9uIHN0YXJ0dXBzIGFuZCBTTUVzIGluIHZhcmlvdXMgaW5kdXN0cmllcywgRm9sa2VpbnZlc3QgcHJvdmlkZXMgYW4gb3Bwb3J0dW5pdHkgZm9yIGluZGl2aWR1YWxzIHRvIHBhcnRpY2lwYXRlIGluIHZhbHVlIGNyZWF0aW9uIGFzIGVudHJlcHJlbmV1cnMsIGludmVzdG9ycywgb3IgY2hlZXJsZWFkZXJzLlxuXG5UaGUgcGxhdGZvcm0gb3BlcmF0ZXMgaW4gTm9yd2VnaWFuLCBjYXRlcmluZyB0byB0aGUgbG9jYWwgbWFya2V0LiBJdCBvZmZlcnMgZXF1aXR5IGludmVzdG1lbnRzLCBhbGxvd2luZyBpbmRpdmlkdWFscyB0byBpbnZlc3QgaW4gYnVzaW5lc3NlcyB0aGV5IGJlbGlldmUgaW4uIFRoZSBtaW5pbXVtIGludmVzdG1lbnQgcmVxdWlyZWQgaXMgNTAwIEVVUiwgbWFraW5nIGl0IGFjY2Vzc2libGUgdG8gYSB3aWRlIHJhbmdlIG9mIGludmVzdG9ycy5cblxuRm9sa2VpbnZlc3QgcHJpb3JpdGl6ZXMgZW5hYmxpbmcgYWxsIHR5cGVzIG9mIGludmVzdG9ycyB0byBwYXJ0aWNpcGF0ZSwgd2hpbGUgYWxzbyBlcXVpcHBpbmcgc3RhcnR1cHMgYW5kIGdyb3d0aC1mb2N1c2VkIGJ1c2luZXNzZXMgd2l0aCB0aGUgbWVhbnMgdG8gcmFpc2UgY2FwaXRhbC4gSG93ZXZlciwgdGhlIHNwZWNpZmljIGRldGFpbHMgYWJvdXQgdGhlIGFkdmVydGlzZWQgcmV0dXJuIG9uIGludmVzdG1lbnQgYXJlIG5vdCBwcm92aWRlZCBpbiB0aGUgZ2l2ZW4gaW5mb3JtYXRpb24uXG5cbldpdGggaXRzIG1pc3Npb24gdG8gc3VwcG9ydCBTTUVzIGFuZCBlbmNvdXJhZ2UgcGFydGljaXBhdGlvbiBpbiB2YWx1ZSBjcmVhdGlvbiwgRm9sa2VpbnZlc3QgcHJvdmlkZXMgYSBwbGF0Zm9ybSBmb3IgaW5kaXZpZHVhbHMgdG8gY29udHJpYnV0ZSB0byB0aGUgZ3Jvd3RoIGFuZCBzdWNjZXNzIG9mIGJ1c2luZXNzZXMuIFRoZSB3ZWJzaXRlLCBhdmFpbGFibGUgYXQgaHR0cHM6Ly9mb2xrZWludmVzdC5uby8sIHNlcnZlcyBhcyBhIGh1YiBmb3IgaW5mb3JtYXRpb24gYW5kIGludmVzdG1lbnQgb3Bwb3J0dW5pdGllcy5cblxuT3ZlcmFsbCwgRm9sa2VpbnZlc3QgaXMgYSBjcm93ZGZ1bmRpbmcgcGxhdGZvcm0gaW4gTm9yd2F5IHRoYXQgYWltcyB0byBicmlkZ2UgdGhlIGdhcCBiZXR3ZWVuIGludmVzdG9ycyBhbmQgc2NhbGluZyBTTUVzLCBvZmZlcmluZyBhIHVuaXF1ZSBvcHBvcnR1bml0eSBmb3IgaW5kaXZpZHVhbHMgdG8gaW52ZXN0IGluIGJ1c2luZXNzZXMgYW5kIGNvbnRyaWJ1dGUgdG8gdGhlaXIgZ3Jvd3RoLiIsInJlZ3VsYXRlZCI6ZmFsc2UsImJ1eWJhY2tHdWFyYW50ZWUiOmZhbHNlLCJwdWJsaWNTdGF0aXN0aWNzIjpmYWxzZSwic2lnbnVwQm9udXMiOmZhbHNlLCJzZWNvbmRhcnlNYXJrZXQiOmZhbHNlLCJhdXRvSW52ZXN0IjpmYWxzZSwid2hvQ2FuSW52ZXN0IjoiV2UgZW5hYmxlIGFsbCB0eXBlcyBvZiBpbnZlc3RvcnMgdG8gaW52ZXN0IGluIGJ1c2luZXNzZXMgdGhleSBiZWxpZXZlIGluLCBhbG9uZ3NpZGUgZXF1aXBwaW5nIHN0YXJ0dXBzIGFuZCBncm93dGgtZm9jdXNlZCBidXNpbmVzc2VzIHRvIHJhaXNlIGNhcGl0YWwuIiwic2x1ZyI6ImZvbGtlaW52ZXN0In1dfQ==","status":200,"tags":["/platforms/page"],"url":"http://localhost:3001/api/select-platforms?&page=4&perPage=12&typeFilter="},"revalidate":31536000}