{"kind":"FETCH","data":{"headers":{"connection":"close","content-encoding":"gzip","content-type":"text/plain;charset=UTF-8","date":"Thu, 17 Aug 2023 13:14:12 GMT","transfer-encoding":"chunked","vary":"RSC, Next-Router-State-Tree, Next-Router-Prefetch, Accept-Encoding"},"body":"","status":200,"tags":["/platform/[investmentType]/page"],"url":"http://127.0.0.1:3000/api/get-type/investment/?1-year=1%20year&2-3-years=2-3%20years&page=1&perPage=12&typeFilter=yearFounded"},"revalidate":31536000}