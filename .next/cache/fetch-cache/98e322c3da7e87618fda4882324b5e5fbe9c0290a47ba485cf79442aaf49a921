{"kind":"FETCH","data":{"headers":{"connection":"close","content-encoding":"gzip","content-type":"text/plain;charset=UTF-8","date":"Sat, 19 Aug 2023 06:56:28 GMT","transfer-encoding":"chunked","vary":"RSC, Next-Router-State-Tree, Next-Router-Prefetch, Accept-Encoding"},"body":"eyJwbGF0Zm9ybXNEYXRhIjp7ImNvdW50IjoxMiwicm93cyI6W3siY291bnRyeSI6WyJDeXBydXMiXSwiaW52ZXN0bWVudFR5cGUiOlsiRXF1aXR5IiwiRGVidCJdLCJpbmR1c3RyeSI6WyJSZWFsIGVzdGF0ZSIsIlN0YXJ0dXBzIiwiU01FIiwiR3JlZW4gZW5lcmd5IiwiSGVhbHRoICYgU2NpZW5jZSIsIkxvZ2lzdGljcyIsIlNvY2lhbCBjYXVzZSIsIkVkdWNhdGlvbiIsIkZhcm1pbmciLCJTcG9ydCIsIk1hcml0aW1lIl0sImxhbmd1YWdlcyI6WyJFbmdsaXNoIiwiR3JlZWsiXSwicGF5bWVudE9wdGlvbnMiOlsiTi9BIl0sImlkIjo1MDcsImNyZWF0ZWRBdCI6IjIwMjMtMDgtMDhUMDk6MzI6NTYuMDAwWiIsInVwZGF0ZWRBdCI6IjIwMjMtMDgtMDhUMDk6MzI6NTYuMDAwWiIsIm5hbWUiOiJDcm93ZGJhc2UiLCJsb2dvIjoiL3BsYXRmb3JtTG9nby9Dcm93ZGJhc2UucG5nIiwieWVhckZvdW5kZWQiOiIyMDIwIiwibGljZW5zZU51bWJlciI6IjQxMC8yMiIsInJldmlld3MiOm51bGwsIndlYnNpdGUiOiJodHRwczovL2Nyb3dkYmFzZS5ldS9lbiIsIm1pbmltdW1JbnZlc3RtZW50IjoiMTAwIEVVUiIsImFkdmVydGlzZWRSZXR1cm4iOiJOL0EiLCJpbnZlc3RvcnMiOiJOL0EiLCJ0b3RhbEZ1bmRpbmdWb2x1bWUiOiJOL0EiLCJhdmVyYWdlTG9hbkR1cmF0aW9uIjoiTi9BIiwiZGVzY3JpcHRpb24iOiJDcm93ZGJhc2UgaXMgYSBjcm93ZGZ1bmRpbmcgcGxhdGZvcm0gYmFzZWQgaW4gQ3lwcnVzIHRoYXQgb2ZmZXJzIGludmVzdG1lbnQgb3Bwb3J0dW5pdGllcyBpbiB2YXJpb3VzIGluZHVzdHJpZXMgc3VjaCBhcyByZWFsIGVzdGF0ZSwgc3RhcnR1cHMsIFNNRXMsIGdyZWVuIGVuZXJneSwgaGVhbHRoICYgc2NpZW5jZSwgbG9naXN0aWNzLCBzb2NpYWwgY2F1c2VzLCBlZHVjYXRpb24sIGZhcm1pbmcsIHNwb3J0LCBhbmQgbWFyaXRpbWUuIEZvdW5kZWQgaW4gMjAyMCwgQ3Jvd2RiYXNlIGFpbXMgdG8gcHJvdmlkZSBidXNpbmVzc2VzIHdpdGggYW4gYWx0ZXJuYXRpdmUgc291cmNlIG9mIGNhcGl0YWwgYW5kIGFsbG93IGludmVzdG9ycyB0byBhY2Nlc3Mgb3Bwb3J0dW5pdGllcyB0aGF0IG1pZ2h0IG90aGVyd2lzZSBiZSB1bmF2YWlsYWJsZSB0byB0aGVtLlxuXG5UaGUgcGxhdGZvcm0gc3VwcG9ydHMgYm90aCBlcXVpdHkgYW5kIGRlYnQgY3Jvd2RmdW5kaW5nLCBnaXZpbmcgaW52ZXN0b3JzIHRoZSBmbGV4aWJpbGl0eSB0byBjaG9vc2UgdGhlIHR5cGUgb2YgaW52ZXN0bWVudCB0aGF0IHN1aXRzIHRoZWlyIHByZWZlcmVuY2VzLiBCeSBvZmZlcmluZyBhIGRpdmVyc2UgcmFuZ2Ugb2YgaW5kdXN0cmllcywgQ3Jvd2RiYXNlIGFpbXMgdG8gYXR0cmFjdCBhIHdpZGUgYmFzZSBvZiBpbnZlc3RvcnMgd2hvIGhhdmUgZGlmZmVyZW50IGludGVyZXN0cyBhbmQgaW52ZXN0bWVudCBnb2Fscy5cblxuQ3Jvd2RiYXNlIGlzIGF2YWlsYWJsZSBpbiB0d28gbGFuZ3VhZ2VzLCBFbmdsaXNoIGFuZCBHcmVlaywgY2F0ZXJpbmcgdG8gYSB3aWRlIHJhbmdlIG9mIHBvdGVudGlhbCBpbnZlc3RvcnMuIFRoZSBwbGF0Zm9ybSdzIHdlYnNpdGUsIGh0dHBzOi8vY3Jvd2RiYXNlLmV1L2VuLCBwcm92aWRlcyBkZXRhaWxlZCBpbmZvcm1hdGlvbiBvbiB0aGUgcHJvamVjdHMgYXZhaWxhYmxlIGZvciBpbnZlc3RtZW50LlxuXG5UbyBtYWtlIGludmVzdGluZyBhY2Nlc3NpYmxlIHRvIGEgbGFyZ2VyIGF1ZGllbmNlLCBDcm93ZGJhc2UgYWxsb3dzIEVFQSByZXNpZGVudHMgdG8gcGFydGljaXBhdGUsIG1lYW5pbmcgaW52ZXN0b3JzIGZyb20gdmFyaW91cyBFdXJvcGVhbiBjb3VudHJpZXMgY2FuIHRha2UgYWR2YW50YWdlIG9mIHRoZSBvcHBvcnR1bml0aWVzIG9mZmVyZWQgb24gdGhlIHBsYXRmb3JtLiBUaGUgbWluaW11bSBpbnZlc3RtZW50IHJlcXVpcmVkIGlzIHJlbGF0aXZlbHkgbG93LCBzdGFydGluZyBmcm9tIDEwMCBFVVIuXG5cbkFsdGhvdWdoIHRoZSBleGFjdCBhZHZlcnRpc2VkIHJldHVybiBpcyBub3Qgc3BlY2lmaWVkLCBDcm93ZGJhc2Ugb2ZmZXJzIGludmVzdG9ycyB0aGUgcG90ZW50aWFsIHRvIGVhcm4gcmV0dXJucyBvbiB0aGVpciBpbnZlc3RtZW50cywgcHJvdmlkaW5nIGFuIGluY2VudGl2aXppbmcgb3Bwb3J0dW5pdHkgZm9yIGludmVzdG9ycyB0byBkaXZlcnNpZnkgdGhlaXIgcG9ydGZvbGlvcyBhbmQgc3VwcG9ydCBwcm9taXNpbmcgcHJvamVjdHMuXG5cbk92ZXJhbGwsIENyb3dkYmFzZSBvZmZlcnMgYW4gaW5jbHVzaXZlIGFuZCBkaXZlcnNlIGludmVzdG1lbnQgY3Jvd2RmdW5kaW5nIHBsYXRmb3JtIHRoYXQgY29ubmVjdHMgYnVzaW5lc3NlcyBzZWVraW5nIGNhcGl0YWwgd2l0aCBhIHdpZGUgcmFuZ2Ugb2YgcG90ZW50aWFsIGludmVzdG9ycy4iLCJyZWd1bGF0ZWQiOmZhbHNlLCJidXliYWNrR3VhcmFudGVlIjpmYWxzZSwicHVibGljU3RhdGlzdGljcyI6ZmFsc2UsInNpZ251cEJvbnVzIjpmYWxzZSwic2Vjb25kYXJ5TWFya2V0IjpmYWxzZSwiYXV0b0ludmVzdCI6ZmFsc2UsIndob0NhbkludmVzdCI6IkFsbCBFRUEgcmVzaWRlbnRzLiIsInNsdWciOiJjcm93ZGJhc2UifSx7ImNvdW50cnkiOlsiRXN0b25pYSJdLCJpbnZlc3RtZW50VHlwZSI6WyJFcXVpdHkiLCJEZWJ0Il0sImluZHVzdHJ5IjpbIkFydCJdLCJsYW5ndWFnZXMiOlsiRW5nbGlzaCJdLCJwYXltZW50T3B0aW9ucyI6WyJOL0EiXSwiaWQiOjUwNCwiY3JlYXRlZEF0IjoiMjAyMy0wOC0wOFQwOTozMjo1Ni4wMDBaIiwidXBkYXRlZEF0IjoiMjAyMy0wOC0wOFQwOTozMjo1Ni4wMDBaIiwibmFtZSI6IkthbnZhcy5haSIsImxvZ28iOiIvcGxhdGZvcm1Mb2dvL0thbnZhcy5haS5wbmciLCJ5ZWFyRm91bmRlZCI6IjIwMjEiLCJsaWNlbnNlTnVtYmVyIjoiMTYwNjAyNjMiLCJyZXZpZXdzIjpudWxsLCJ3ZWJzaXRlIjoiaHR0cHM6Ly9rYW52YXMuYWkvaG9tZSIsIm1pbmltdW1JbnZlc3RtZW50IjoiMTAgRVVSIiwiYWR2ZXJ0aXNlZFJldHVybiI6IjEwJSIsImludmVzdG9ycyI6Ik4vQSIsInRvdGFsRnVuZGluZ1ZvbHVtZSI6Ik4vQSIsImF2ZXJhZ2VMb2FuRHVyYXRpb24iOiJOL0EiLCJkZXNjcmlwdGlvbiI6IkthbnZhcy5haSBpcyBhIGNyb3dkZnVuZGluZyBwbGF0Zm9ybSBiYXNlZCBpbiBFc3RvbmlhIHRoYXQgc3BlY2lhbGl6ZXMgaW4gdGhlIGFydCBpbmR1c3RyeS4gRm91bmRlZCBpbiAyMDIxLCB0aGUgcGxhdGZvcm0gb2ZmZXJzIGludmVzdG1lbnQgb3Bwb3J0dW5pdGllcyBpbiB0aGUgZm9ybSBvZiBlcXVpdHkgYW5kIGRlYnQgZm9yIGluZGl2aWR1YWxzIGFuZCBjb21wYW5pZXMgaW50ZXJlc3RlZCBpbiB0aGUgYXJ0IG1hcmtldC5cblxuVGhlIHBsYXRmb3JtIHNlcnZlcyBhcyBhIGRpZ2l0YWwgbWFya2V0cGxhY2UgZm9yIGFydGlzdHMsIGNvbGxlY3RvcnMsIGFuZCBnYWxsZXJpZXMgdG8gY29ubmVjdCwgdHJhZGUsIGFuZCBpbnZlc3QgaW4gYXJ0LiBJdCBvZmZlcnMgdGhlIGxhdGVzdCB0ZWNobm9sb2dpZXMgaW4gdGhlIHNlY29uZGFyeSBhcnQgbWFya2V0LCBpbmNsdWRpbmcgaXRzIHByb3ByaWV0YXJ5IGFydGluZGV4IGFsZ29yaXRobSwgd2hpY2ggaGVscHMgdXNlcnMgbWFrZSBpbmZvcm1lZCBpbnZlc3RtZW50IGRlY2lzaW9ucy5cblxuSW52ZXN0b3JzIGNhbiBwYXJ0aWNpcGF0ZSBpbiB0aGUgcGxhdGZvcm0gd2l0aCBhIG1pbmltdW0gaW52ZXN0bWVudCBvZiAxMCBFVVIsIG1ha2luZyBpdCBhY2Nlc3NpYmxlIHRvIGEgd2lkZSByYW5nZSBvZiBpbmRpdmlkdWFscy4gVGhlIGFkdmVydGlzZWQgcmV0dXJuIGZvciBpbnZlc3RtZW50cyBvbiBLYW52YXMuYWkgaXMgMC4xLCBhbHRob3VnaCBzcGVjaWZpYyBkZXRhaWxzIG9uIHRoZSByZXR1cm4gc3RydWN0dXJlIGFyZSBub3QgcHJvdmlkZWQuXG5cbkthbnZhcy5haSBvcGVyYXRlcyBwcmltYXJpbHkgaW4gRW5nbGlzaCwgbWFraW5nIGl0IGFjY2Vzc2libGUgdG8gYSBnbG9iYWwgYXVkaWVuY2UuIEl0cyB3ZWJzaXRlLCBsb2NhdGVkIGF0IGh0dHBzOi8va2FudmFzLmFpL2hvbWUsIHByb3ZpZGVzIGluZm9ybWF0aW9uIGFib3V0IHRoZSBwbGF0Zm9ybSBhbmQgaXRzIHNlcnZpY2VzLlxuXG5JbnZlc3RtZW50IG9uIEthbnZhcy5haSBpcyBvcGVuIHRvIGJvdGggaW5kaXZpZHVhbCBhbmQgY29ycG9yYXRlIGludmVzdG9ycy4gSW5kaXZpZHVhbHMgbXVzdCBiZSBhdCBsZWFzdCAxOCB5ZWFycyBvbGQgdG8gcGFydGljaXBhdGUsIHdoaWxlIGZvciBjb21wYW5pZXMsIHRoZSByZXByZXNlbnRhdGl2ZSByZWdpc3RlcmluZyBtdXN0IGhhdmUgdGhlIGxlZ2FsIGF1dGhvcml0eSB0byByZXByZXNlbnQgdGhlIGNvbXBhbnkuXG5cbk92ZXJhbGwsIEthbnZhcy5haSBvZmZlcnMgYSBkaWdpdGFsIHBsYXRmb3JtIGZvciBpbmRpdmlkdWFscyBhbmQgY29tcGFuaWVzIHRvIGludmVzdCBpbiB0aGUgYXJ0IG1hcmtldCwgbGV2ZXJhZ2luZyBhZHZhbmNlZCB0ZWNobm9sb2dpZXMgYW5kIHNlcnZpbmcgYXMgYSBodWIgZm9yIGFydCB0cmFkaW5nIGFuZCBuZXR3b3JraW5nLiIsInJlZ3VsYXRlZCI6ZmFsc2UsImJ1eWJhY2tHdWFyYW50ZWUiOmZhbHNlLCJwdWJsaWNTdGF0aXN0aWNzIjpmYWxzZSwic2lnbnVwQm9udXMiOmZhbHNlLCJzZWNvbmRhcnlNYXJrZXQiOnRydWUsImF1dG9JbnZlc3QiOmZhbHNlLCJ3aG9DYW5JbnZlc3QiOiJJbnZlc3RpbmcgaXMgb3BlbiB0byBib3RoIGluZGl2aWR1YWxzIGFuZCBjb21wYW5pZXMuIEluIG9yZGVyIHRvIGludmVzdCwgaW5kaXZpZHVhbHMgbXVzdCBiZSBhdCBsZWFzdCAxOCB5ZWFycyBvbGQuIEZvciBjb21wYW5pZXMsIHRoZSBpbmRpdmlkdWFsIHJlZ2lzdGVyaW5nIHRoZSBjb21wYW55IG11c3QgaGF2ZSB0aGUgbGVnYWwgYXV0aG9yaXR5IHRvIHJlcHJlc2VudCB0aGUgY29tcGFueS4iLCJzbHVnIjoia2FudmFzLmFpIn0seyJjb3VudHJ5IjpbIk5ldGhlcmxhbmRzIl0sImludmVzdG1lbnRUeXBlIjpbIkRlYnQiXSwiaW5kdXN0cnkiOlsiUmVhbCBlc3RhdGUiXSwibGFuZ3VhZ2VzIjpbIk5ldGhlcmxhbmRzIl0sInBheW1lbnRPcHRpb25zIjpbIk4vQSJdLCJpZCI6NTAzLCJjcmVhdGVkQXQiOiIyMDIzLTA4LTA4VDA5OjMyOjU2LjAwMFoiLCJ1cGRhdGVkQXQiOiIyMDIzLTA4LTA4VDA5OjMyOjU2LjAwMFoiLCJuYW1lIjoiUGVhcmwgQ2FwaXRhbCIsImxvZ28iOiIvcGxhdGZvcm1Mb2dvL1BlYXJsIENhcGl0YWwucG5nIiwieWVhckZvdW5kZWQiOiIyMDIxIiwibGljZW5zZU51bWJlciI6IjgxMDc5NjY0IiwicmV2aWV3cyI6bnVsbCwid2Vic2l0ZSI6Imh0dHBzOi8vd3d3LnBlYXJsLWNhcGl0YWwubmwvIiwibWluaW11bUludmVzdG1lbnQiOiIyNSwwMDAgRVVSIiwiYWR2ZXJ0aXNlZFJldHVybiI6IjYlIiwiaW52ZXN0b3JzIjoiTi9BIiwidG90YWxGdW5kaW5nVm9sdW1lIjoiTi9BIiwiYXZlcmFnZUxvYW5EdXJhdGlvbiI6Ik4vQSIsImRlc2NyaXB0aW9uIjoiUGVhcmwgQ2FwaXRhbCBpcyBhIGNyb3dkZnVuZGluZyBwbGF0Zm9ybSBiYXNlZCBpbiB0aGUgTmV0aGVybGFuZHMuIEZvdW5kZWQgaW4gMjAyMSwgaXQgcHJpbWFyaWx5IGZvY3VzZXMgb24gcmFpc2luZyBkZWJ0LWJhc2VkIGludmVzdG1lbnRzIGluIHRoZSByZWFsIGVzdGF0ZSBpbmR1c3RyeS4gVGhlIHBsYXRmb3JtIG9mZmVycyBvcHBvcnR1bml0aWVzIGZvciBpbnZlc3RvcnMgdG8gZWFybiBhIGhpZ2ggcmV0dXJuIG9uIHRoZWlyIGludmVzdG1lbnRzLlxuXG5XaXRoIGEgd2Vic2l0ZSBhdmFpbGFibGUgaW4gdGhlIER1dGNoIGxhbmd1YWdlLCBQZWFybCBDYXBpdGFsIGFpbXMgdG8gcHJvdmlkZSBpbnZlc3RtZW50IG9wdGlvbnMgdG8gYSB3aWRlIHJhbmdlIG9mIGluZGl2aWR1YWxzLiBUaGUgcGxhdGZvcm0gcmVxdWlyZXMgYSBtaW5pbXVtIGludmVzdG1lbnQgb2YgMjUsMDAwIEVVUiwgYWxsb3dpbmcgYW55b25lIG1lZXRpbmcgdGhpcyB0aHJlc2hvbGQgdG8gaW52ZXN0IGFuZCByZWNlaXZlIGludGVyZXN0IG9uIHRoZWlyIGludmVzdG1lbnQuXG5cblBlYXJsIENhcGl0YWwgYm9hc3RzIHllYXJzIG9mIGV4cGVyaWVuY2UgaW4gdGhlIGJ1c2luZXNzIGludmVzdG1lbnQgYW5kIGxvYW4gc2VjdG9ycywgd2hpY2ggcG9zaXRpb25zIHRoZW0gYXMgYSB0cnVzdHdvcnRoeSBjb21wYW55IGZvciBpbmRpdmlkdWFscyBzZWVraW5nIGludmVzdG1lbnQgb3Bwb3J0dW5pdGllcy4gVGhlaXIgZXhwZXJ0aXNlIGluIHRoZXNlIGFyZWFzIGltcGxpZXMgdGhhdCB0aGV5IGFyZSBrbm93bGVkZ2VhYmxlIGFib3V0IG1hbmFnaW5nIHRoZSByaXNrcyBhbmQgcmV3YXJkcyBhc3NvY2lhdGVkIHdpdGggbGVuZGluZyBhbmQgaW52ZXN0bWVudCBpbiB0aGUgcmVhbCBlc3RhdGUgaW5kdXN0cnkuXG5cblRvIGxlYXJuIG1vcmUgYWJvdXQgdGhlIGludmVzdG1lbnQgcG9zc2liaWxpdGllcyBvZmZlcmVkIGJ5IFBlYXJsIENhcGl0YWwsIGludGVyZXN0ZWQgaW5kaXZpZHVhbHMgY2FuIHZpc2l0IHRoZWlyIHdlYnNpdGUgYXQgaHR0cHM6Ly93d3cucGVhcmwtY2FwaXRhbC5ubC8uIFRoZSBhZHZlcnRpc2VkIHJldHVybiBpcyAwLjA2LCB3aGljaCBpbmRpY2F0ZXMgdGhlIHBvdGVudGlhbCByZXR1cm4gb24gaW52ZXN0bWVudCB0aGF0IGludmVzdG9ycyBjYW4gZXhwZWN0IGZyb20gdGhlaXIgY29udHJpYnV0aW9ucy5cblxuSW4gc3VtbWFyeSwgUGVhcmwgQ2FwaXRhbCBpcyBhIGNyb3dkZnVuZGluZyBwbGF0Zm9ybSBpbiB0aGUgTmV0aGVybGFuZHMgdGhhdCBzcGVjaWFsaXplcyBpbiBkZWJ0LWJhc2VkIGludmVzdG1lbnQgb3Bwb3J0dW5pdGllcyBpbiB0aGUgcmVhbCBlc3RhdGUgaW5kdXN0cnkuIEl0IG9mZmVycyBoaWdoIHJldHVybnMgb24gaW52ZXN0bWVudCBhbmQgd2VsY29tZXMgZXZlcnlvbmUgdG8gaW52ZXN0LCBwcm92aWRlZCB0aGV5IG1lZXQgdGhlIG1pbmltdW0gaW52ZXN0bWVudCByZXF1aXJlbWVudC4iLCJyZWd1bGF0ZWQiOmZhbHNlLCJidXliYWNrR3VhcmFudGVlIjpmYWxzZSwicHVibGljU3RhdGlzdGljcyI6ZmFsc2UsInNpZ251cEJvbnVzIjpmYWxzZSwic2Vjb25kYXJ5TWFya2V0Ijp0cnVlLCJhdXRvSW52ZXN0IjpmYWxzZSwid2hvQ2FuSW52ZXN0IjoiRXZlcnlvbmUgY2FuIGludmVzdCBhdCBQZWFybCBDYXBpdGFsLiBGcm9tIGFuIGludmVzdG1lbnQgb2YgYXQgbGVhc3QgRVVSIDI1LDAwMC4wMCwgdGhlIGludmVzdG9yIHJlY2VpdmVzIGludGVyZXN0LiIsInNsdWciOiJwZWFybGNhcGl0YWwifSx7ImNvdW50cnkiOlsiUG9sYW5kIl0sImludmVzdG1lbnRUeXBlIjpbIkRlYnQiXSwiaW5kdXN0cnkiOlsiUmVhbCBlc3RhdGUiXSwibGFuZ3VhZ2VzIjpbIlBvbGlzaCIsIkdlcm1hbiJdLCJwYXltZW50T3B0aW9ucyI6WyJOL0EiXSwiaWQiOjQ5OSwiY3JlYXRlZEF0IjoiMjAyMy0wOC0wOFQwOTozMjo1Ni4wMDBaIiwidXBkYXRlZEF0IjoiMjAyMy0wOC0wOFQwOTozMjo1Ni4wMDBaIiwibmFtZSI6IlJlbnR1amVteSIsImxvZ28iOiIvcGxhdGZvcm1Mb2dvL1JlbnR1amVteS5wbmciLCJ5ZWFyRm91bmRlZCI6IjIwMjIiLCJsaWNlbnNlTnVtYmVyIjoicGVuZGluZyIsInJldmlld3MiOm51bGwsIndlYnNpdGUiOiJodHRwOi8vcmVudHVqZW15LnBsL3phaW53ZXN0dWoiLCJtaW5pbXVtSW52ZXN0bWVudCI6IjEsMjUwIEVVUiIsImFkdmVydGlzZWRSZXR1cm4iOiIxMCUiLCJpbnZlc3RvcnMiOiJOL0EiLCJ0b3RhbEZ1bmRpbmdWb2x1bWUiOiJOL0EiLCJhdmVyYWdlTG9hbkR1cmF0aW9uIjoiTi9BIiwiZGVzY3JpcHRpb24iOiJSZW50dWplbXkucGwgaXMgYSBjcm93ZGZ1bmRpbmcgcGxhdGZvcm0gYmFzZWQgaW4gUG9sYW5kIHRoYXQgd2FzIGVzdGFibGlzaGVkIGluIDIwMjIuIEl0IG9wZXJhdGVzIGluIHRoZSByZWFsIGVzdGF0ZSBpbmR1c3RyeSBhbmQgb2ZmZXJzIGRlYnQtYmFzZWQgaW52ZXN0bWVudCBvcHBvcnR1bml0aWVzLiBUaGUgcGxhdGZvcm0gYWxsb3dzIGluZGl2aWR1YWxzIHRvIGludmVzdCBpbiBsb2FucyBzcGVjaWZpY2FsbHkgbWFkZSBmb3IgcmVhbCBlc3RhdGUgcHJvamVjdHMgd2l0aCB0aGUgYWltIG9mIGdlbmVyYXRpbmcgaW5jb21lIGZyb20gdGhlc2UgcHJvcGVydGllcy5cblxuUmVudHVqZW15LnBsIHByaW1hcmlseSBjYXRlcnMgdG8gRVUgY2l0aXplbnMgYW5kIHByb3ZpZGVzIGFuIGV4Y2VsbGVudCBvcHBvcnR1bml0eSBmb3IgdGhvc2UgaW50ZXJlc3RlZCBpbiBpbnZlc3RpbmcgaW4gdGhlIHJlYWwgZXN0YXRlIG1hcmtldC4gVGhlIHBsYXRmb3JtJ3MgbWluaW11bSBpbnZlc3RtZW50IGFtb3VudCBpcyAxLDI1MCBFVVIsIG1ha2luZyBpdCBhY2Nlc3NpYmxlIGZvciBhIHdpZGUgcmFuZ2Ugb2YgaW52ZXN0b3JzLlxuXG5UaGUgYWR2ZXJ0aXNlZCByZXR1cm4gb24gaW52ZXN0bWVudHMgdGhyb3VnaCBSZW50dWplbXkucGwgaXMgMC4xLCB3aGljaCBzdWdnZXN0cyB0aGF0IGludmVzdG9ycyBjYW4gZXhwZWN0IGEgY29tcGV0aXRpdmUgeWllbGQgZm9yIHRoZWlyIGNvbnRyaWJ1dGlvbnMuIFxuXG5UaGUgcGxhdGZvcm0gaXMgYXZhaWxhYmxlIGluIHR3byBsYW5ndWFnZXM6IFBvbGlzaCBhbmQgR2VybWFuLiBUaGlzIG11bHRpbGluZ3VhbCBhcHByb2FjaCBlbnN1cmVzIHRoYXQgdXNlcnMgZnJvbSBkaWZmZXJlbnQgY291bnRyaWVzLCBlc3BlY2lhbGx5IHRob3NlIHdpdGhpbiB0aGUgRXVyb3BlYW4gVW5pb24sIGNhbiBlYXNpbHkgbmF2aWdhdGUgdGhlIHdlYnNpdGUgYW5kIGVuZ2FnZSB3aXRoIHRoZSBpbnZlc3RtZW50IG9wcG9ydHVuaXRpZXMuXG5cbldpdGggYSB1c2VyLWZyaWVuZGx5IHdlYnNpdGUgbG9jYXRlZCBhdCBodHRwOi8vcmVudHVqZW15LnBsL3phaW53ZXN0dWosIFJlbnR1amVteS5wbCBwcm92aWRlcyBhIHN0cmVhbWxpbmVkIGFuZCBjb252ZW5pZW50IHBsYXRmb3JtIGZvciBpbmRpdmlkdWFscyBsb29raW5nIHRvIGludmVzdCBpbiByZWFsIGVzdGF0ZSBkZWJ0LiBJdCBhaW1zIHRvIHN1cHBvcnQgRVUgY2l0aXplbnMgaW4gZGl2ZXJzaWZ5aW5nIHRoZWlyIGludmVzdG1lbnQgcG9ydGZvbGlvcyBhbmQgYWNjZXNzaW5nIHRoZSBwb3RlbnRpYWxseSBsdWNyYXRpdmUgcmVhbCBlc3RhdGUgbWFya2V0LiBJbnZlc3Qgd2l0aCBSZW50dWplbXkucGwgdG8gZXhwbG9yZSB0aGUgcG9zc2liaWxpdGllcyBvZiBnZW5lcmF0aW5nIGluY29tZSBmcm9tIHJlYWwgZXN0YXRlIHByb2plY3RzIHdoaWxlIGNvbnRyaWJ1dGluZyB0byB0aGUgZ3Jvd3RoIG9mIHRoZSBQb2xpc2ggcHJvcGVydHkgbWFya2V0LiIsInJlZ3VsYXRlZCI6ZmFsc2UsImJ1eWJhY2tHdWFyYW50ZWUiOmZhbHNlLCJwdWJsaWNTdGF0aXN0aWNzIjpmYWxzZSwic2lnbnVwQm9udXMiOmZhbHNlLCJzZWNvbmRhcnlNYXJrZXQiOmZhbHNlLCJhdXRvSW52ZXN0IjpmYWxzZSwid2hvQ2FuSW52ZXN0IjoiRVUgY2l0aXplbnMiLCJzbHVnIjoicmVudHVqZW15In0seyJjb3VudHJ5IjpbIlN3aXR6ZXJsYW5kIl0sImludmVzdG1lbnRUeXBlIjpbIkVxdWl0eSIsIkRlYnQiLCJQMlAgbGVuZGluZyJdLCJpbmR1c3RyeSI6WyJTdGFydHVwcyIsIkhlYWx0aCAmIFNjaWVuY2UiXSwibGFuZ3VhZ2VzIjpbIkVuZ2xpc2giXSwicGF5bWVudE9wdGlvbnMiOlsiQ3JlZGl0IGNhcmQiLCJCYW5rIHRyYW5zZmVyIiwiRGlyZWN0IGRlYml0IiwiUGF5UGFsIiwiQ3J5cHRvY3VycmVuY3kiXSwiaWQiOjQ5NiwiY3JlYXRlZEF0IjoiMjAyMy0wOC0wOFQwOTozMjo1Ni4wMDBaIiwidXBkYXRlZEF0IjoiMjAyMy0wOC0wOFQwOTozMjo1Ni4wMDBaIiwibmFtZSI6IkZVTkRNWS5BSSIsImxvZ28iOiIvcGxhdGZvcm1Mb2dvL0ZVTkRNWS5BSS5wbmciLCJ5ZWFyRm91bmRlZCI6IjIwMjMiLCJsaWNlbnNlTnVtYmVyIjpudWxsLCJyZXZpZXdzIjpudWxsLCJ3ZWJzaXRlIjoiaHR0cHM6Ly9mdW5kbXkuYWkvIiwibWluaW11bUludmVzdG1lbnQiOiIxLDAwMCBFVVIiLCJhZHZlcnRpc2VkUmV0dXJuIjoiMSUiLCJpbnZlc3RvcnMiOiJOL0EiLCJ0b3RhbEZ1bmRpbmdWb2x1bWUiOiJOL0EiLCJhdmVyYWdlTG9hbkR1cmF0aW9uIjoiTi9BIiwiZGVzY3JpcHRpb24iOiJGVU5ETVkuQUkgaXMgYSBjcm93ZGZ1bmRpbmcgcGxhdGZvcm0gYmFzZWQgaW4gU3dpdHplcmxhbmQgdGhhdCBjYXRlcnMgc3BlY2lmaWNhbGx5IHRvIHRoZSBBSSBzZWN0b3IuIEZvdW5kZWQgaW4gMjAyMywgaXQgb2ZmZXJzIGEgdW5pcXVlIGJsZW5kIG9mIGNyb3dkZnVuZGluZyBhbmQgVkMvQW5nZWwgaW52ZXN0bWVudHMgdGFpbG9yZWQgdG8gdGhlIHNwZWNpZmljIG5lZWRzIG9mIHN0YXJ0dXBzIGluIHRoZSBIZWFsdGggJiBTY2llbmNlIGluZHVzdHJ5LlxuXG5UaGUgcGxhdGZvcm0gc3VwcG9ydHMgdmFyaW91cyB0eXBlcyBvZiBpbnZlc3RtZW50cywgaW5jbHVkaW5nIGVxdWl0eSwgZGVidCwgYW5kIFAyUCBsZW5kaW5nLiBUaGlzIGFsbG93cyBpbnZlc3RvcnMgdG8gY2hvb3NlIHRoZSBpbnZlc3RtZW50IG9wdGlvbiB0aGF0IHN1aXRzIHRoZWlyIHByZWZlcmVuY2VzIGFuZCByaXNrIGFwcGV0aXRlLiBXaXRoIGEgbWluaW11bSBpbnZlc3RtZW50IG9mIDEsMDAwIEVVUiwgRlVORE1ZLkFJIHByb3ZpZGVzIGFuIG9wcG9ydHVuaXR5IGZvciBib3RoIGluZGl2aWR1YWwgYW5kIGluc3RpdHV0aW9uYWwgaW52ZXN0b3JzIHRvIHBhcnRpY2lwYXRlIGluIHRoZSBBSSBlY29zeXN0ZW0uXG5cbkZVTkRNWS5BSSBmb2N1c2VzIG9uIGF0dHJhY3RpbmcgaW52ZXN0bWVudHMgZm9yIEFJLXJlbGF0ZWQgc3RhcnR1cHMsIHByb3ZpZGluZyB0aGVtIHdpdGggdGhlIG5lY2Vzc2FyeSBjYXBpdGFsIHRvIGZ1ZWwgdGhlaXIgZ3Jvd3RoIGFuZCBpbm5vdmF0aW9uLiBCeSBjb25jZW50cmF0aW5nIG9uIHRoaXMgbmljaGUgbWFya2V0LCB0aGUgcGxhdGZvcm0gb2ZmZXJzIGEgZm9jdXNlZCBhbHRlcm5hdGl2ZSB0byB0cmFkaXRpb25hbCBjcm93ZGZ1bmRpbmcgc2VydmljZXMgdGhhdCBtYXkgbGFjayB0aGUgc3BlY2lhbGl6ZWQgdW5kZXJzdGFuZGluZyBvZiB0aGUgQUkgc2VjdG9yLlxuXG5UaGUgcGxhdGZvcm0gb3BlcmF0ZXMgaW4gRW5nbGlzaCwgbWFraW5nIGl0IGFjY2Vzc2libGUgdG8gYSBnbG9iYWwgYXVkaWVuY2UuIFRocm91Z2ggaXRzIHdlYnNpdGUgKGh0dHBzOi8vZnVuZG15LmFpLyksIGludmVzdG9ycyBjYW4gZXhwbG9yZSBpbnZlc3RtZW50IG9wcG9ydHVuaXRpZXMgaW4gQUkgc3RhcnR1cHMgYW5kIGxlYXJuIG1vcmUgYWJvdXQgdGhlIHByb2plY3RzIGF2YWlsYWJsZS5cblxuRlVORE1ZLkFJIGFkdmVydGlzZXMgYSByZXR1cm4gcmF0ZSBvZiAwLjAxLCBwcm92aWRpbmcgaW52ZXN0b3JzIHdpdGggdGhlIHBvdGVudGlhbCBmb3IgZmluYW5jaWFsIGdhaW4uIEhvd2V2ZXIsIGRldGFpbGVkIGluZm9ybWF0aW9uIGFib3V0IHRoZSBzcGVjaWZpYyBwcm9qZWN0cyBhbmQgdGhlaXIgcG90ZW50aWFsIHJldHVybnMgY2FuIGJlIG9idGFpbmVkIHRocm91Z2ggdGhlIHBsYXRmb3JtLlxuXG5XaXRoIGl0cyBkZWRpY2F0aW9uIHRvIHRoZSBBSSBzZWN0b3IgYW5kIHRoZSBvcHRpb25zIGl0IG9mZmVycyB0byBpbnZlc3RvcnMsIEZVTkRNWS5BSSBvcGVucyB1cCBvcHBvcnR1bml0aWVzIGZvciBpbmRpdmlkdWFscyBhbmQgb3JnYW5pemF0aW9ucyB0byBzdXBwb3J0IGlubm92YXRpdmUgc3RhcnR1cHMgYW5kIGNvbnRyaWJ1dGUgdG8gdGhlIGFkdmFuY2VtZW50IG9mIEFJIHRlY2hub2xvZ2llcy4iLCJyZWd1bGF0ZWQiOnRydWUsImJ1eWJhY2tHdWFyYW50ZWUiOmZhbHNlLCJwdWJsaWNTdGF0aXN0aWNzIjpmYWxzZSwic2lnbnVwQm9udXMiOmZhbHNlLCJzZWNvbmRhcnlNYXJrZXQiOmZhbHNlLCJhdXRvSW52ZXN0IjpmYWxzZSwid2hvQ2FuSW52ZXN0IjpudWxsLCJzbHVnIjoiZnVuZG15LmFpIn0seyJjb3VudHJ5IjpbIkxpdGh1YW5pYSJdLCJpbnZlc3RtZW50VHlwZSI6WyJEZWJ0Il0sImluZHVzdHJ5IjpbIlJlYWwgZXN0YXRlIl0sImxhbmd1YWdlcyI6W10sInBheW1lbnRPcHRpb25zIjpbIk4vQSJdLCJpZCI6NDY4LCJjcmVhdGVkQXQiOiIyMDIzLTA4LTA4VDA5OjMyOjU2LjAwMFoiLCJ1cGRhdGVkQXQiOiIyMDIzLTA4LTA4VDA5OjMyOjU2LjAwMFoiLCJuYW1lIjoiTGV0c2ludmVzdCIsImxvZ28iOiIvcGxhdGZvcm1Mb2dvL0xldHNpbnZlc3QucG5nIiwieWVhckZvdW5kZWQiOiIyMDIwIiwibGljZW5zZU51bWJlciI6IkFsbCB0aGUgYWN0aXZpdGllcyBvZiB0aGUgcGxhdGZvcm0gb3BlcmF0b3IgTGV0c2ludmVzdCBhcmUgc3VwZXJ2aXNlZCBieSB0aGUgQmFuayBvZiBMaXRodWFuaWEuIiwicmV2aWV3cyI6bnVsbCwid2Vic2l0ZSI6Imh0dHBzOi8vbGV0c2ludmVzdC5ldS8/Y2xpY2tfaWQ9NDBjZmQ0OWMtN2VkNS00ZDA1LWFlNWMtNmQ1NWRmOTZkMTFmIiwibWluaW11bUludmVzdG1lbnQiOiIxMDAgRVVSIiwiYWR2ZXJ0aXNlZFJldHVybiI6IjklIiwiaW52ZXN0b3JzIjoiTi9BIiwidG90YWxGdW5kaW5nVm9sdW1lIjoiTi9BIiwiYXZlcmFnZUxvYW5EdXJhdGlvbiI6Ik4vQSIsImRlc2NyaXB0aW9uIjpudWxsLCJyZWd1bGF0ZWQiOmZhbHNlLCJidXliYWNrR3VhcmFudGVlIjpmYWxzZSwicHVibGljU3RhdGlzdGljcyI6ZmFsc2UsInNpZ251cEJvbnVzIjpmYWxzZSwic2Vjb25kYXJ5TWFya2V0IjpmYWxzZSwiYXV0b0ludmVzdCI6ZmFsc2UsIndob0NhbkludmVzdCI6IkxldHNpbnZlc3QgYWNjZXB0cyBpbnZlc3RtZW50IGZyb20gdGhlIEV1cm9wZWFuIEVjb25vbWljIEFyZWEgd2hpY2ggbWVhbnMgdGhhdCBpbmRpdmlkdWFsIGludmVzdG9ycyBtdXN0IGJlIHJlc2lkZW50cyBvZiB0aGUgRXVyb3BlYW4gRWNvbm9taWMgQXJlYSBjb3VudHJpZXMsIHdoaWxlIGNvbXBhbmllcyBtdXN0IGJlIHJlZ2lzdGVyZWQgaW4gb25lIG9mIHRoZSBFdXJvcGVhbiBFY29ub21pYyBBcmVhIGNvdW50cmllcy4iLCJzbHVnIjoibGV0c2ludmVzdCJ9LHsiY291bnRyeSI6WyJJdGFseSJdLCJpbnZlc3RtZW50VHlwZSI6WyJEZWJ0Il0sImluZHVzdHJ5IjpbIlJlYWwgZXN0YXRlIl0sImxhbmd1YWdlcyI6WyJJdGFsaWFuIl0sInBheW1lbnRPcHRpb25zIjpbIk4vQSJdLCJpZCI6NDY3LCJjcmVhdGVkQXQiOiIyMDIzLTA4LTA4VDA5OjMyOjU2LjAwMFoiLCJ1cGRhdGVkQXQiOiIyMDIzLTA4LTA4VDA5OjMyOjU2LjAwMFoiLCJuYW1lIjoiSXNpY3Jvd2QiLCJsb2dvIjoiL3BsYXRmb3JtTG9nby9Jc2ljcm93ZC5wbmciLCJ5ZWFyRm91bmRlZCI6IjIwMjAiLCJsaWNlbnNlTnVtYmVyIjoiTi9BIiwicmV2aWV3cyI6bnVsbCwid2Vic2l0ZSI6Imh0dHBzOi8vaXNpY3Jvd2QuaXQvP3RjbGlkPTEwMmYwOTdkODZiYzA0ZTQ3NjUzNmJmZjYwNzU3ZiU3QzEyNTUlN0MlN0MlN0MlN0MlN0MlN0MlN0MiLCJtaW5pbXVtSW52ZXN0bWVudCI6IjUwIEVVUiIsImFkdmVydGlzZWRSZXR1cm4iOiIxMSUiLCJpbnZlc3RvcnMiOiJOL0EiLCJ0b3RhbEZ1bmRpbmdWb2x1bWUiOiI2OTksMDAwIEVVUiIsImF2ZXJhZ2VMb2FuRHVyYXRpb24iOiJOL0EiLCJkZXNjcmlwdGlvbiI6IklzaWNyb3dkIGlzIGEgY3Jvd2RmdW5kaW5nIHBsYXRmb3JtIGJhc2VkIGluIEl0YWx5IHRoYXQgc3BlY2lhbGl6ZXMgaW4gZGVidCBpbnZlc3RtZW50IHdpdGhpbiB0aGUgcmVhbCBlc3RhdGUgaW5kdXN0cnkuIEZvdW5kZWQgaW4gMjAyMCwgSXNpY3Jvd2QgYWltcyB0byBleHBhbmQgaXRzIHNlcnZpY2VzIGluIHRoZSB0b3VyaXNtIHNlY3Rvci4gQXMgdGhlIGZpcnN0IGNyb3dkZnVuZGluZyBwbGF0Zm9ybSBpbiBzb3V0aGVybiBJdGFseSwgaXQgaGFzIHBvc2l0aW9uZWQgaXRzZWxmIGFzIGEgbGVhZGVyIGluIHRoZSByZWdpb24uXG5cblRoZSBwbGF0Zm9ybSBvcGVyYXRlcyBwcmltYXJpbHkgaW4gdGhlIEl0YWxpYW4gbGFuZ3VhZ2UsIGNhdGVyaW5nIHRvIHRoZSBsb2NhbCBtYXJrZXQuIEl0cyB3ZWJzaXRlLCBhdmFpbGFibGUgYXQgaHR0cHM6Ly9pc2ljcm93ZC5pdCwgcHJvdmlkZXMgZGV0YWlsZWQgaW5mb3JtYXRpb24gZm9yIHBvdGVudGlhbCBpbnZlc3RvcnMuIFRoZSBtaW5pbXVtIGludmVzdG1lbnQgcmVxdWlyZWQgaXMgNTAgRVVSLCBhbGxvd2luZyBpbmRpdmlkdWFscyB3aXRoIHZhcnlpbmcgYnVkZ2V0cyB0byBwYXJ0aWNpcGF0ZS5cblxuSXNpY3Jvd2Qgb2ZmZXJzIGFuIGFkdmVydGlzZWQgcmV0dXJuIHJhdGUgb2YgMC4xMSwgd2hpY2ggbWF5IGF0dHJhY3QgaW52ZXN0b3JzIHNlZWtpbmcgcmVsYXRpdmVseSBzdGFibGUgYW5kIHByZWRpY3RhYmxlIHJldHVybnMuIFRoaXMgbWFrZXMgaXQgYW4gYXR0cmFjdGl2ZSBvcHRpb24gZm9yIGJvdGggcHJpdmF0ZSBhbmQgaW5zdGl0dXRpb25hbCBpbnZlc3RvcnMgbG9va2luZyB0byBkaXZlcnNpZnkgdGhlaXIgcG9ydGZvbGlvcy5cblxuQnkgZm9jdXNpbmcgb24gZGVidCBpbnZlc3RtZW50IGluIHJlYWwgZXN0YXRlLCBJc2ljcm93ZCBjYXBpdGFsaXplcyBvbiB0aGUgcG90ZW50aWFsIHByb2ZpdGFiaWxpdHkgb2YgdGhpcyBib29taW5nIGluZHVzdHJ5LiBBZGRpdGlvbmFsbHksIHRoZWlyIGludGVudGlvbiB0byBleHBhbmQgaW50byB0aGUgdG91cmlzbSBmaWVsZCBkZW1vbnN0cmF0ZXMgdGhlaXIgY29tbWl0bWVudCB0byBhZGFwdGluZyB0byBtYXJrZXQgdHJlbmRzIGFuZCBjYXRlcmluZyB0byBldm9sdmluZyBpbnZlc3RvciBkZW1hbmRzLlxuXG5PdmVyYWxsLCBJc2ljcm93ZCBwcmVzZW50cyBhbiBpbnRyaWd1aW5nIGNyb3dkZnVuZGluZyBvcHBvcnR1bml0eSBmb3IgdGhvc2UgaW50ZXJlc3RlZCBpbiByZWFsIGVzdGF0ZSBkZWJ0IGludmVzdG1lbnQgaW4gSXRhbHkuIEl0cyBzdGF0dXMgYXMgdGhlIGZpcnN0IHBsYXRmb3JtIG9mIGl0cyBraW5kIGluIHNvdXRoZXJuIEl0YWx5IGFuZCBpdHMgZGVkaWNhdGlvbiB0byBleHBhbmRpbmcgaXRzIHNlcnZpY2VzIGluZGljYXRlIGEgcHJvbWlzaW5nIGZ1dHVyZSBmb3IgdGhlIGNvbXBhbnkuIiwicmVndWxhdGVkIjpmYWxzZSwiYnV5YmFja0d1YXJhbnRlZSI6ZmFsc2UsInB1YmxpY1N0YXRpc3RpY3MiOmZhbHNlLCJzaWdudXBCb251cyI6ZmFsc2UsInNlY29uZGFyeU1hcmtldCI6ZmFsc2UsImF1dG9JbnZlc3QiOmZhbHNlLCJ3aG9DYW5JbnZlc3QiOiJQcml2YXRlIGFuZCBpbnN0aXR1dGlvbmFsIGludmVzdG9ycyBhcmUgd2VsY29tZS4iLCJzbHVnIjoiaXNpY3Jvd2QifSx7ImNvdW50cnkiOlsiR2VybWFueSJdLCJpbnZlc3RtZW50VHlwZSI6WyJEZWJ0Il0sImluZHVzdHJ5IjpbIlJlYWwgZXN0YXRlIl0sImxhbmd1YWdlcyI6WyJHZXJtYW4iXSwicGF5bWVudE9wdGlvbnMiOlsiTi9BIl0sImlkIjo0OSwiY3JlYXRlZEF0IjoiMjAyMy0wOC0wOFQwOTozMjo1NC4wMDBaIiwidXBkYXRlZEF0IjoiMjAyMy0wOC0wOFQwOTozMjo1NC4wMDBaIiwibmFtZSI6IlludG8gQ3Jvd2QiLCJsb2dvIjoiL3BsYXRmb3JtTG9nby9ZbnRvIENyb3dkLnBuZyIsInllYXJGb3VuZGVkIjoiMjAyMCIsImxpY2Vuc2VOdW1iZXIiOiJIUkIyMjUzNDNCIiwicmV2aWV3cyI6bnVsbCwid2Vic2l0ZSI6Imh0dHBzOi8veW50by1jcm93ZC5jb20vIiwibWluaW11bUludmVzdG1lbnQiOiIxMDAgRVVSIiwiYWR2ZXJ0aXNlZFJldHVybiI6IjctOCUiLCJpbnZlc3RvcnMiOiJOL0EiLCJ0b3RhbEZ1bmRpbmdWb2x1bWUiOiJOL0EiLCJhdmVyYWdlTG9hbkR1cmF0aW9uIjoiTi9BIiwiZGVzY3JpcHRpb24iOiJZTlRPIENyb3dkIGlzIGEgY3Jvd2RmdW5kaW5nIHBsYXRmb3JtIGJhc2VkIGluIEdlcm1hbnkuIEZvdW5kZWQgaW4gMjAyMCwgaXQgc3BlY2lhbGl6ZXMgaW4gZGVidC1iYXNlZCBpbnZlc3RtZW50cyBpbiB0aGUgcmVhbCBlc3RhdGUgaW5kdXN0cnkuIFRoZSBwbGF0Zm9ybSBvZmZlcnMgaW52ZXN0bWVudCBvcHBvcnR1bml0aWVzIHdpdGggYSBtaW5pbXVtIGludmVzdG1lbnQgb2YgMTAwIEVVUiBhbmQgcHJvbWlzZXMgYW4gYWR2ZXJ0aXNlZCByZXR1cm4gb2YgNy04JS5cblxuVGhlIFlOVE8gQ3Jvd2Qgd2Vic2l0ZSBpcyBwcmltYXJpbHkgaW4gR2VybWFuLCBpbmRpY2F0aW5nIGl0cyB0YXJnZXQgYXVkaWVuY2UgaXMgcHJlZG9taW5hbnRseSBHZXJtYW4tc3BlYWtpbmcgaW52ZXN0b3JzLiBJdCBwcm92aWRlcyBhIG1vZGVybiBhbmQgbHVjcmF0aXZlIGFwcHJvYWNoIHRvIHJlYWwgZXN0YXRlIGludmVzdG1lbnQsIG1ha2luZyBpdCBhY2Nlc3NpYmxlIHRvIGEgd2lkZXIgcmFuZ2Ugb2YgaW52ZXN0b3JzIHdpdGggbG93ZXIgaW52ZXN0bWVudCB0aHJlc2hvbGRzLiBcblxuSW4gb3JkZXIgdG8gZW5zdXJlIHRoZSBxdWFsaXR5IG9mIGludmVzdG1lbnQgcHJvamVjdHMsIFlOVE8gc3ViamVjdHMgdGhlbSB0byBhIHJpZ29yb3VzIHJldmlldyBwcm9jZXNzLiBPbmx5IHNlbGVjdGVkIHByb2plY3RzIHRoYXQgbWVldCB0aGUgcGxhdGZvcm0ncyBoaWdoIHN0YW5kYXJkcyBhcmUgZmVhdHVyZWQgb24gdGhlIHdlYnNpdGUuIFRoaXMgcHJvdmlkZXMgaW52ZXN0b3JzIHdpdGggYSBsZXZlbCBvZiByZWFzc3VyYW5jZSBhbmQgY29uZmlkZW5jZSBpbiB0aGUgcHJvamVjdHMgdGhleSBjaG9vc2UgdG8gaW52ZXN0IGluLlxuXG5PdmVyYWxsLCBZTlRPIENyb3dkIHByZXNlbnRzIGl0c2VsZiBhcyBhIHVzZXItZnJpZW5kbHkgYW5kIHRydXN0d29ydGh5IGNyb3dkZnVuZGluZyBwbGF0Zm9ybSB0aGF0IGFsbG93cyBpbmRpdmlkdWFscyB0byBpbnZlc3QgaW4gcmVhbCBlc3RhdGUgd2l0aCByZWxhdGl2ZWx5IHNtYWxsIGFtb3VudHMgb2YgbW9uZXkuIFdpdGggYXR0cmFjdGl2ZSBpbnRlcmVzdCByYXRlcyBhbmQgc2hvcnQgaW52ZXN0bWVudCB0ZXJtcywgaXQgYWltcyB0byBiZSBhbiBhcHBlYWxpbmcgb3B0aW9uIGZvciBpbnZlc3RvcnMgbG9va2luZyB0byBkaXZlcnNpZnkgdGhlaXIgcG9ydGZvbGlvIGFuZCBwb3RlbnRpYWxseSBlYXJuIGEgc29saWQgcmV0dXJuIG9uIHRoZWlyIGludmVzdG1lbnRzLiIsInJlZ3VsYXRlZCI6ZmFsc2UsImJ1eWJhY2tHdWFyYW50ZWUiOmZhbHNlLCJwdWJsaWNTdGF0aXN0aWNzIjpmYWxzZSwic2lnbnVwQm9udXMiOmZhbHNlLCJzZWNvbmRhcnlNYXJrZXQiOmZhbHNlLCJhdXRvSW52ZXN0IjpmYWxzZSwid2hvQ2FuSW52ZXN0IjpudWxsLCJzbHVnIjoieW50b2Nyb3dkIn0seyJjb3VudHJ5IjpbIkdlcm1hbnkiXSwiaW52ZXN0bWVudFR5cGUiOlsiRGVidCJdLCJpbmR1c3RyeSI6WyJSZWFsIGVzdGF0ZSIsIkdyZWVuIGVuZXJneSJdLCJsYW5ndWFnZXMiOlsiR2VybWFuIl0sInBheW1lbnRPcHRpb25zIjpbIk4vQSJdLCJpZCI6NDgsImNyZWF0ZWRBdCI6IjIwMjMtMDgtMDhUMDk6MzI6NTQuMDAwWiIsInVwZGF0ZWRBdCI6IjIwMjMtMDgtMDhUMDk6MzI6NTQuMDAwWiIsIm5hbWUiOiJNZXJjdXJjYXAiLCJsb2dvIjoiL3BsYXRmb3JtTG9nby9NZXJjdXJjYXAucG5nIiwieWVhckZvdW5kZWQiOiIyMDIwIiwibGljZW5zZU51bWJlciI6IkhSQiAxMTYxMzQiLCJyZXZpZXdzIjpudWxsLCJ3ZWJzaXRlIjoiaHR0cHM6Ly9tZXJjdXJjYXAuZGUvIiwibWluaW11bUludmVzdG1lbnQiOiIxMDAgRVVSIiwiYWR2ZXJ0aXNlZFJldHVybiI6IjQuNTAlIiwiaW52ZXN0b3JzIjoiTi9BIiwidG90YWxGdW5kaW5nVm9sdW1lIjoiTi9BIiwiYXZlcmFnZUxvYW5EdXJhdGlvbiI6Ik4vQSIsImRlc2NyaXB0aW9uIjoiQW55b25lIGNhbiBpbnZlc3Qgb24gdGhlIE1lcmN1cmNhcCBjcm93ZGZ1bmRpbmcgcGxhdGZvcm0gYXMgbG9uZyBhcyB0aGV5IG1lZXQgdGhlIG1pbmltdW0gaW52ZXN0bWVudCByZXF1aXJlbWVudCBvZiAxMDAgRVVSLiBUaGUgcGxhdGZvcm0gb3BlcmF0ZXMgaW4gR2VybWFueSBhbmQgaXMgYXZhaWxhYmxlIGZvciBpbnZlc3RvcnMgd2hvIGFyZSBpbnRlcmVzdGVkIGluIGRlYnQtYmFzZWQgaW52ZXN0bWVudHMgaW4gdGhlIHJlYWwgZXN0YXRlIGFuZCBncmVlbiBlbmVyZ3kgaW5kdXN0cmllcy4gXG5cbk1lcmN1cmNhcCB3YXMgZm91bmRlZCBpbiAyMDIwIGFuZCBwcmltYXJpbHkgdGFyZ2V0cyBHZXJtYW4tc3BlYWtpbmcgaW5kaXZpZHVhbHMgYXMgaXRzIHdlYnNpdGUgaXMgYXZhaWxhYmxlIG9ubHkgaW4gR2VybWFuLiBUaGUgcGxhdGZvcm0gY29ubmVjdHMgaW52ZXN0b3JzIHdpdGggY29tcGFuaWVzIHNlZWtpbmcgZnVuZGluZywgcHJvdmlkaW5nIGFuIGFsdGVybmF0aXZlIHRvIHRyYWRpdGlvbmFsIGludmVzdG1lbnQgbWV0aG9kcyBhbmQgYmFuayBmaW5hbmNpbmcuIFxuXG5JbnZlc3RvcnMgY2FuIGV4cGVjdCBhIGFkdmVydGlzZWQgcmV0dXJuIG9mIDQuNTAlIG9uIHRoZWlyIGludmVzdG1lbnRzIHRocm91Z2ggTWVyY3VyY2FwLiBUaGlzIGFsbG93cyB0aGVtIHRvIGVhcm4gYSBjb25zaXN0ZW50IGFuZCBhdHRyYWN0aXZlIHJldHVybiBvbiB0aGVpciBpbnZlc3RtZW50IHdoaWxlIHN1cHBvcnRpbmcgcHJvamVjdHMgd2l0aGluIHRoZSByZWFsIGVzdGF0ZSBhbmQgZ3JlZW4gZW5lcmd5IHNlY3RvcnMuIFxuXG5XaXRoIGEgZm9jdXMgb24gZGVidC1iYXNlZCBpbnZlc3RtZW50cywgTWVyY3VyY2FwIGFzc2lzdHMgaW4gcmFpc2luZyBmdW5kcyBmb3IgdmFyaW91cyBwcm9qZWN0cyB0aGF0IGFpbSB0byBkZXZlbG9wIHN1c3RhaW5hYmxlIGluZnJhc3RydWN0dXJlIGFuZCB0ZWNobm9sb2dpZXMgd2l0aGluIHRoZSByZWFsIGVzdGF0ZSBhbmQgZ3JlZW4gZW5lcmd5IHNlY3RvcnMgaW4gR2VybWFueS4gQnkgcHJvdmlkaW5nIGFuIGFjY2Vzc2libGUgcGxhdGZvcm0sIE1lcmN1cmNhcCBlbmFibGVzIGluZGl2aWR1YWxzIHRvIGRpcmVjdGx5IGNvbnRyaWJ1dGUgdG8gdGhlc2UgaW5kdXN0cmllcyBhbmQgc3VwcG9ydCBwcm9qZWN0cyB0aGF0IGFsaWduIHdpdGggdGhlaXIgdmFsdWVzLiBPdmVyYWxsLCBNZXJjdXJjYXAgb2ZmZXJzIGEgY29udmVuaWVudCBhbmQgaW5ub3ZhdGl2ZSBjaGFubmVsIGZvciBib3RoIGludmVzdG9ycyBhbmQgY29tcGFuaWVzIGxvb2tpbmcgdG8gYmVuZWZpdCBmcm9tIGNyb3dkaW52ZXN0aW5nIGFuZCBhbHRlcm5hdGl2ZSBmaW5hbmNpbmcgb3B0aW9ucy4iLCJyZWd1bGF0ZWQiOmZhbHNlLCJidXliYWNrR3VhcmFudGVlIjpmYWxzZSwicHVibGljU3RhdGlzdGljcyI6ZmFsc2UsInNpZ251cEJvbnVzIjpmYWxzZSwic2Vjb25kYXJ5TWFya2V0IjpmYWxzZSwiYXV0b0ludmVzdCI6ZmFsc2UsIndob0NhbkludmVzdCI6bnVsbCwic2x1ZyI6Im1lcmN1cmNhcCJ9LHsiY291bnRyeSI6WyJGcmFuY2UiXSwiaW52ZXN0bWVudFR5cGUiOlsiRXF1aXR5IiwiRGVidCIsIk1pbmktYm9uZHMiXSwiaW5kdXN0cnkiOlsiU01FIiwiU29jaWFsIGNhdXNlIl0sImxhbmd1YWdlcyI6WyJGcmVuY2giXSwicGF5bWVudE9wdGlvbnMiOlsiTi9BIl0sImlkIjoyMywiY3JlYXRlZEF0IjoiMjAyMy0wOC0wOFQwOTozMjo1NC4wMDBaIiwidXBkYXRlZEF0IjoiMjAyMy0wOC0wOFQwOTozMjo1NC4wMDBaIiwibmFtZSI6IlZpbGx5eiIsImxvZ28iOiIvcGxhdGZvcm1Mb2dvL1ZpbGx5ei5wbmciLCJ5ZWFyRm91bmRlZCI6IjIwMjAiLCJsaWNlbnNlTnVtYmVyIjoiRlAtMjAyMjEiLCJyZXZpZXdzIjpudWxsLCJ3ZWJzaXRlIjoiaHR0cHM6Ly92aWxseXouZnIvIiwibWluaW11bUludmVzdG1lbnQiOiIxIEVVUiIsImFkdmVydGlzZWRSZXR1cm4iOiJGcm9tIDElIiwiaW52ZXN0b3JzIjoiTi9BIiwidG90YWxGdW5kaW5nVm9sdW1lIjoiTi9BIiwiYXZlcmFnZUxvYW5EdXJhdGlvbiI6Ik4vQSIsImRlc2NyaXB0aW9uIjoiVmlsbHl6IGlzIGEgY3Jvd2RmdW5kaW5nIHBsYXRmb3JtIGJhc2VkIGluIEZyYW5jZSB0aGF0IHdhcyBmb3VuZGVkIGluIDIwMjAuIFRoZSBwbGF0Zm9ybSBvZmZlcnMgdmFyaW91cyBpbnZlc3RtZW50IHR5cGVzLCBpbmNsdWRpbmcgZXF1aXR5LCBkZWJ0LCBhbmQgbWluaS1ib25kcywgcHJvdmlkaW5nIGludmVzdG9ycyB3aXRoIGRpZmZlcmVudCBvcHRpb25zIHRvIHN1cHBvcnQgcHJvamVjdHMgb2YgdGhlaXIgY2hvaWNlLiBWaWxseXogZm9jdXNlcyBvbiBzdXBwb3J0aW5nIHByb2plY3RzIGluIHRoZSBTTUUgYW5kIHNvY2lhbCBjYXVzZSBpbmR1c3RyaWVzLCBhaW1pbmcgdG8gY29udHJpYnV0ZSB0byB0aGUgZGV2ZWxvcG1lbnQgb2YgbG9jYWwgY29tbXVuaXRpZXMgYW5kIGltcG9ydGFudCBwdWJsaWMgc2VydmljZXMuXG5cblRoZSBwbGF0Zm9ybSBpcyBkZXNpZ25lZCB0byBhbGxvdyBjaXRpemVucyB0byBpbnZlc3QgaW4gcHJvamVjdHMgb2YgZ2VuZXJhbCBpbnRlcmVzdCwgaW5jbHVkaW5nIHRob3NlIHJlbGF0ZWQgdG8gY29tbXVuaXRpZXMsIGhlYWx0aCBlc3RhYmxpc2htZW50cywgbG9jYWwgcHVibGljIGNvbXBhbmllcywgYW5kIGNvbXBhbmllcyB3aXRoIHB1YmxpYyBzaGFyZWhvbGRpbmcuIEJ5IGludmVzdGluZyBpbiB0aGVzZSBwcm9qZWN0cywgaW5kaXZpZHVhbHMgY2FuIGNvbnRyaWJ1dGUgdG8gdGhlIGFkdmFuY2VtZW50IG9mIGZ1dHVyZS1vcmllbnRlZCBpbml0aWF0aXZlcyB0aGF0IGFyZSBpbXBvcnRhbnQgdG8gdGhlbS5cblxuVmlsbHl6J3Mgd2Vic2l0ZSwgYXZhaWxhYmxlIGF0IGh0dHBzOi8vdmlsbHl6LmZyLywgcHJvdmlkZXMgYWNjZXNzIHRvIGFsbCBuZWNlc3NhcnkgaW5mb3JtYXRpb24gYW5kIHJlc291cmNlcyBmb3IgcG90ZW50aWFsIGludmVzdG9ycy4gVGhlIHBsYXRmb3JtIGhhcyBhIGxvdyBtaW5pbXVtIGludmVzdG1lbnQgcmVxdWlyZW1lbnQgb2YgMSBFVVIsIG1ha2luZyBpdCBhY2Nlc3NpYmxlIHRvIGEgd2lkZSByYW5nZSBvZiBpbmRpdmlkdWFscy4gQWR2ZXJ0aXNlZCByZXR1cm5zIG9uIGludmVzdG1lbnRzIHN0YXJ0IGZyb20gMSUsIG9mZmVyaW5nIHBvdGVudGlhbCBmaW5hbmNpYWwgYmVuZWZpdHMgdG8gaW52ZXN0b3JzLlxuXG5UbyBiZSBlbGlnaWJsZSB0byBpbnZlc3Qgb24gVmlsbHl6LCBpbmRpdmlkdWFscyBtdXN0IGJlIG5hdHVyYWwgcGVyc29ucyBvdmVyIHRoZSBhZ2Ugb2YgMTgsIGRvbWljaWxlZCBpbiBGcmFuY2UgZm9yIHRheCBwdXJwb3NlcywgYW5kIG11c3QgYmUgcmVnaXN0ZXJlZCBvbiB0aGUgVmlsbHl6IHNpdGUuIFRoaXMgZW5zdXJlcyB0aGF0IG9ubHkgdmFsaWQgYW5kIGxlZ2l0aW1hdGUgaW52ZXN0b3JzIHBhcnRpY2lwYXRlIGluIHN1cHBvcnRpbmcgcHJvamVjdHMgb24gdGhlIHBsYXRmb3JtLlxuXG5PdmVyYWxsLCBWaWxseXogcHJvdmlkZXMgYSB1c2VyLWZyaWVuZGx5IGNyb3dkZnVuZGluZyBwbGF0Zm9ybSB0aGF0IGVtcG93ZXJzIGluZGl2aWR1YWxzIHRvIGludmVzdCBpbiBwcm9qZWN0cyB0aGF0IGFsaWduIHdpdGggdGhlaXIgdmFsdWVzIGFuZCBnb2FscywgY29udHJpYnV0aW5nIHRvIHRoZSBiZXR0ZXJtZW50IG9mIGxvY2FsIGNvbW11bml0aWVzIGFuZCBhZHZhbmNpbmcgaW1wb3J0YW50IHNvY2lhbCBjYXVzZXMgaW4gRnJhbmNlLiIsInJlZ3VsYXRlZCI6ZmFsc2UsImJ1eWJhY2tHdWFyYW50ZWUiOmZhbHNlLCJwdWJsaWNTdGF0aXN0aWNzIjpmYWxzZSwic2lnbnVwQm9udXMiOmZhbHNlLCJzZWNvbmRhcnlNYXJrZXQiOmZhbHNlLCJhdXRvSW52ZXN0IjpmYWxzZSwid2hvQ2FuSW52ZXN0IjoiQWxsIG5hdHVyYWwgcGVyc29ucyBvdmVyIDE4IGRvbWljaWxlZCBpbiBGcmFuY2UgZm9yIHRheCBwdXJwb3NlcyBhbmQgdmFsaWRseSByZWdpc3RlcmVkIG9uIHRoZSBWaWxseXogc2l0ZSBjYW4gaW52ZXN0LiIsInNsdWciOiJ2aWxseXoifSx7ImNvdW50cnkiOlsiUG9sYW5kIl0sImludmVzdG1lbnRUeXBlIjpbIkRlYnQiXSwiaW5kdXN0cnkiOlsiUmVhbCBlc3RhdGUiXSwibGFuZ3VhZ2VzIjpbIkVuZ2xpc2giLCJQb2xpc2giXSwicGF5bWVudE9wdGlvbnMiOlsiTi9BIl0sImlkIjoxNiwiY3JlYXRlZEF0IjoiMjAyMy0wOC0wOFQwOTozMjo1NC4wMDBaIiwidXBkYXRlZEF0IjoiMjAyMy0wOC0wOFQwOTozMjo1NC4wMDBaIiwibmFtZSI6IkNyb3dkZXIucHJvIiwibG9nbyI6Ii9wbGF0Zm9ybUxvZ28vQ3Jvd2Rlci5wcm8ucG5nIiwieWVhckZvdW5kZWQiOiIyMDIwIiwibGljZW5zZU51bWJlciI6IjE2NTY4IiwicmV2aWV3cyI6bnVsbCwid2Vic2l0ZSI6Imh0dHBzOi8vY3Jvd2Rlci5wcm8vZW4vIiwibWluaW11bUludmVzdG1lbnQiOiLigqwxIiwiYWR2ZXJ0aXNlZFJldHVybiI6Ik4vQSIsImludmVzdG9ycyI6Ik4vQSIsInRvdGFsRnVuZGluZ1ZvbHVtZSI6Ik4vQSIsImF2ZXJhZ2VMb2FuRHVyYXRpb24iOiJOL0EiLCJkZXNjcmlwdGlvbiI6IkNyb3dkZXIucHJvIGlzIGEgY3Jvd2RmdW5kaW5nIHBsYXRmb3JtIGJhc2VkIGluIFBvbGFuZCB0aGF0IHNwZWNpYWxpemVzIGluIGRlYnQtYmFzZWQgcmVhbCBlc3RhdGUgaW52ZXN0bWVudHMuIEZvdW5kZWQgaW4gMjAyMCwgdGhlIHBsYXRmb3JtIGFpbXMgdG8gYXNzaXN0IGludmVzdG9ycyBpbiBpbmRpcmVjdGx5IGludmVzdGluZyBpbiB0aGUgcmVhbCBlc3RhdGUgbWFya2V0IGFuZCBtYXhpbWl6aW5nIHRoZWlyIHNhdmluZ3MuIFdpdGggYSBmb2N1cyBvbiBwcm92aWRpbmcgb3Bwb3J0dW5pdGllcyBmb3IgYm90aCBwZXJzb25hbCBhbmQgY29ycG9yYXRlIGludmVzdG9ycywgQ3Jvd2Rlci5wcm8gb2ZmZXJzIGEgdXNlci1mcmllbmRseSBpbnRlcmZhY2UgaW4gYm90aCBFbmdsaXNoIGFuZCBQb2xpc2guXG5cblRoZSBwbGF0Zm9ybSdzIG1pc3Npb24gaXMgY2VudGVyZWQgYXJvdW5kIGhlbHBpbmcgaW5kaXZpZHVhbHMgYW5kIGJ1c2luZXNzZXMgbWFrZSBtb3JlIHByb2ZpdCBmcm9tIHRoZWlyIHNhdmluZ3MgYnkgZmFjaWxpdGF0aW5nIHRoZWlyIGVudHJ5IGludG8gdGhlIHJlYWwgZXN0YXRlIG1hcmtldC4gQnkgb2ZmZXJpbmcgZGVidC1iYXNlZCBpbnZlc3RtZW50IG9wdGlvbnMsIENyb3dkZXIucHJvIGFsbG93cyBpbnZlc3RvcnMgdG8gY29udHJpYnV0ZSBzbWFsbGVyIGFtb3VudHMsIHdpdGggYSBtaW5pbXVtIGludmVzdG1lbnQgb2YganVzdCAxIHVuaXQuXG5cbkFsdGhvdWdoIHNwZWNpZmljIGRldGFpbHMgcmVnYXJkaW5nIHRoZSBhZHZlcnRpc2VkIHJldHVybiBhcmUgbm90IHByb3ZpZGVkLCB0aGUgcGxhdGZvcm0gYWltcyB0byBjcmVhdGUgaW52ZXN0bWVudCBvcHBvcnR1bml0aWVzIHRoYXQgYXJlIGF0dHJhY3RpdmUgYW5kIHByb2ZpdGFibGUgZm9yIHVzZXJzLiBUaGUgd2Vic2l0ZSBzZXJ2ZXMgYXMgYSBodWIgZm9yIGludmVzdG9ycywgcHJvdmlkaW5nIGFjY2VzcyB0byBhIHJhbmdlIG9mIHJlYWwgZXN0YXRlIHByb2plY3RzIGZvciBpbnZlc3RtZW50IGNvbnNpZGVyYXRpb24uXG5cbkNyb3dkZXIucHJvIGVtcGhhc2l6ZXMgaXRzIGxlZ2l0aW1hY3kgYnkgaGlnaGxpZ2h0aW5nIGl0cyBvd24gbG9jYWwgcHJlc2VuY2Ugd2l0aGluIFBvbGFuZCBhbmQgaXRzIGFkaGVyZW5jZSB0byBsb2NhbCByZWd1bGF0aW9ucywgc3VjaCBhcyB0YXggb2JsaWdhdGlvbnMuIEFzIGEgcmVzdWx0LCB0aGUgcGxhdGZvcm0gcG9zaXRpb25zIGl0c2VsZiBhcyBhIHRydXN0d29ydGh5IG9wdGlvbiBmb3IgaW52ZXN0b3JzIGxvb2tpbmcgdG8gZW50ZXIgdGhlIHJlYWwgZXN0YXRlIG1hcmtldC5cblxuT3ZlcmFsbCwgQ3Jvd2Rlci5wcm8gZW5hYmxlcyBpbmRpdmlkdWFscyBhbmQgYnVzaW5lc3NlcyB0byBwYXJ0aWNpcGF0ZSBpbiBkZWJ0LWJhc2VkIHJlYWwgZXN0YXRlIGludmVzdG1lbnRzIGFuZCBwb3RlbnRpYWxseSBpbmNyZWFzZSB0aGVpciBzYXZpbmdzIHRocm91Z2ggaW5kaXJlY3Qgb3duZXJzaGlwIGluIHRoZSBtYXJrZXQuIiwicmVndWxhdGVkIjpmYWxzZSwiYnV5YmFja0d1YXJhbnRlZSI6ZmFsc2UsInB1YmxpY1N0YXRpc3RpY3MiOmZhbHNlLCJzaWdudXBCb251cyI6ZmFsc2UsInNlY29uZGFyeU1hcmtldCI6ZmFsc2UsImF1dG9JbnZlc3QiOmZhbHNlLCJ3aG9DYW5JbnZlc3QiOiJQZXJzb25hbCwgQ29ycG9yYXRlIiwic2x1ZyI6ImNyb3dkZXIucHJvIn0seyJjb3VudHJ5IjpbIkZyYW5jZSJdLCJpbnZlc3RtZW50VHlwZSI6WyJEZWJ0Il0sImluZHVzdHJ5IjpbIlJlYWwgZXN0YXRlIl0sImxhbmd1YWdlcyI6WyJGcmVuY2giXSwicGF5bWVudE9wdGlvbnMiOlsiTi9BIl0sImlkIjo4LCJjcmVhdGVkQXQiOiIyMDIzLTA4LTA4VDA5OjMyOjU0LjAwMFoiLCJ1cGRhdGVkQXQiOiIyMDIzLTA4LTA4VDA5OjMyOjU0LjAwMFoiLCJuYW1lIjoiQ3Jvd2R5QmVlIiwibG9nbyI6Ii9wbGF0Zm9ybUxvZ28vQ3Jvd2R5QmVlLnBuZyIsInllYXJGb3VuZGVkIjoiMjAyMSIsImxpY2Vuc2VOdW1iZXIiOiI5MDEgNTEwIDMyMSIsInJldmlld3MiOm51bGwsIndlYnNpdGUiOiJodHRwczovL2Nyb3dkeWJlZS5mci8iLCJtaW5pbXVtSW52ZXN0bWVudCI6IjEwMCBFVVIiLCJhZHZlcnRpc2VkUmV0dXJuIjoiNy0xNCUiLCJpbnZlc3RvcnMiOiJOL0EiLCJ0b3RhbEZ1bmRpbmdWb2x1bWUiOiJOL0EiLCJhdmVyYWdlTG9hbkR1cmF0aW9uIjoiTi9BIiwiZGVzY3JpcHRpb24iOiJDcm93ZHlCZWUgaXMgYSBjcm93ZGZ1bmRpbmcgcGxhdGZvcm0gYmFzZWQgaW4gRnJhbmNlIHRoYXQgc3BlY2lhbGl6ZXMgaW4gZGVidCBpbnZlc3RtZW50cyBpbiB0aGUgcmVhbCBlc3RhdGUgaW5kdXN0cnkuIEl0IHdhcyBmb3VuZGVkIGluIDIwMjEgYW5kIG9wZXJhdGVzIHByaW1hcmlseSBpbiB0aGUgRnJlbmNoIG1hcmtldC4gVGhlIHBsYXRmb3JtIGlzIGluIEZyZW5jaCBsYW5ndWFnZSwgY2F0ZXJpbmcgdG8gbG9jYWwgaW52ZXN0b3JzLlxuXG5XaXRoIGEgbWluaW11bSBpbnZlc3RtZW50IG9mIDEwMCBFVVIsIENyb3dkeUJlZSBvZmZlcnMgaW5kaXZpZHVhbHMgYW5kIGJ1c2luZXNzZXMgdGhlIG9wcG9ydHVuaXR5IHRvIGludmVzdCBpbiBzdXN0YWluYWJsZSBwcm9qZWN0cyBwcmVzZW50ZWQgYnkgcHJvcGVydHkgZGVhbGVycyBhbmQgZGV2ZWxvcGVycy4gVGhlIHBsYXRmb3JtIGFpbXMgdG8gY29ubmVjdCBpbnZlc3RvcnMgd2l0aCByZWFsIGVzdGF0ZSBvcHBvcnR1bml0aWVzIHRoYXQgYWxpZ24gd2l0aCB0aGVpciBpbnZlc3RtZW50IHByZWZlcmVuY2VzIGFuZCByaXNrIGFwcGV0aXRlLlxuXG5CeSBjb21wbGV0aW5nIHRoZSBLbm93IFlvdXIgQ3VzdG9tZXJzIChLWUMpIGZvcm0gZHVyaW5nIHRoZSByZWdpc3RyYXRpb24gcHJvY2VzcywgcG90ZW50aWFsIGludmVzdG9ycyBwcm92aWRlIGltcG9ydGFudCBpbmZvcm1hdGlvbiB0aGF0IGhlbHBzIENyb3dkeUJlZSBtYXRjaCB0aGVtIHdpdGggc3VpdGFibGUgcHJvamVjdHMgc3VpdGVkIHRvIHRoZWlyIGludmVzdG1lbnQgaG9yaXpvbiwgc3VzdGFpbmFiaWxpdHkgY3JpdGVyaWEsIGFuZCBkZXNpcmVkIHJldHVybi10by1yaXNrIHJhdGlvLlxuXG5Dcm93ZHlCZWUncyBhZHZlcnRpc2VkIHJldHVybiBvbiBpbnZlc3RtZW50IHZhcmllcyBmcm9tIDclIHRvIDE0JSwgb2ZmZXJpbmcgcG90ZW50aWFsIGF0dHJhY3RpdmUgeWllbGRzIHRvIGludmVzdG9ycy4gSG93ZXZlciwgaXQgaXMgaW1wb3J0YW50IHRvIG5vdGUgdGhhdCBpbnZlc3RtZW50cyBpbiByZWFsIGVzdGF0ZSBjYXJyeSBpbmhlcmVudCByaXNrcywgYW5kIGludmVzdG9ycyBzaG91bGQgY2FyZWZ1bGx5IGNvbnNpZGVyIHRoZWlyIG9wdGlvbnMgYmVmb3JlIG1ha2luZyBhbnkgZmluYW5jaWFsIGNvbW1pdG1lbnQuXG5cbk92ZXJhbGwsIENyb3dkeUJlZSBwcm92aWRlcyBhbiBhY2Nlc3NpYmxlIHBsYXRmb3JtIGZvciBpbmRpdmlkdWFscyBhbmQgbGVnYWwgZW50aXRpZXMgdG8gcGFydGljaXBhdGUgaW4gdGhlIHJlYWwgZXN0YXRlIG1hcmtldCB0aHJvdWdoIGRlYnQgaW52ZXN0bWVudHMuIEludmVzdG9ycyBjYW4gZGl2ZXJzaWZ5IHRoZWlyIHBvcnRmb2xpb3MgYW5kIHN1cHBvcnQgc3VzdGFpbmFibGUgcHJvamVjdHMgd2hpbGUgcG90ZW50aWFsbHkgZWFybmluZyBhdHRyYWN0aXZlIHJldHVybnMuIEludGVyZXN0ZWQgaW5kaXZpZHVhbHMgY2FuIGZpbmQgbW9yZSBpbmZvcm1hdGlvbiBhbmQgZXhwbG9yZSBpbnZlc3RtZW50IG9wcG9ydHVuaXRpZXMgYnkgdmlzaXRpbmcgdGhlIHBsYXRmb3JtJ3Mgd2Vic2l0ZSBhdCBodHRwczovL2Nyb3dkeWJlZS5mci8uIiwicmVndWxhdGVkIjp0cnVlLCJidXliYWNrR3VhcmFudGVlIjpmYWxzZSwicHVibGljU3RhdGlzdGljcyI6ZmFsc2UsInNpZ251cEJvbnVzIjpmYWxzZSwic2Vjb25kYXJ5TWFya2V0IjpmYWxzZSwiYXV0b0ludmVzdCI6ZmFsc2UsIndob0NhbkludmVzdCI6IkluIHRoZW9yeSwgYW55IG5hdHVyYWwgb3IgbGVnYWwgcGVyc29uIGNhbiBpbnZlc3Qgb24gdGhlIHBsYXRmb3JtIGlmIHRoZXkgZGVtb25zdHJhdGUgdGhlaXIgYWJpbGl0eSB0byB1bmRlcnN0YW5kIHRoZSBpbnZlc3RtZW50IHNlcnZpY2Ugb2ZmZXJlZCBvbiB0aGUgcGxhdGZvcm0uVGhlIHN0ZXAgcHJpb3IgdG8gcmVnaXN0cmF0aW9uIGFzIGFuIGludmVzdG9yIGlzIHRvIGNvbXBsZXRlIHRoZSBLbm93IFlvdXIgQ3VzdG9tZXJzIGZvcm0gKGNhbGxlZCDigJxLWUPigJ0gZm9yIEtub3cgWW91ciBDdXN0b21lcnMgKS4gV2UgdGh1cyBoYXZlIHVzZWZ1bCBpbmZvcm1hdGlvbiB0byBpbmRpY2F0ZSB0byB5b3UgdGhlIHByb2plY3RzIGFkYXB0ZWQgdG8geW91ciBpbnZlc3RvciBwcm9maWxlIGluIHRlcm1zIG9mIGludmVzdG1lbnQgaG9yaXpvbiwgc3VzdGFpbmFiaWxpdHksIHJldHVybi9yaXNrLiIsInNsdWciOiJjcm93ZHliZWUifV19LCJzZXJ2ZXJTdGF0ZSI6eyJmaWx0ZXJzRmllbGRzIjpbeyJvcHRpb25zIjpbeyJ0aXRsZSI6IkVxdWl0eSIsImNoZWNrZWQiOmZhbHNlLCJzbHVnIjoiZXF1aXR5In0seyJ0aXRsZSI6IkRlYnQiLCJjaGVja2VkIjp0cnVlLCJzbHVnIjoiZGVidCJ9LHsidGl0bGUiOiJQMlAgbGVuZGluZyIsImNoZWNrZWQiOmZhbHNlLCJzbHVnIjoicDJwLWxlbmRpbmcifSx7InRpdGxlIjoiUmV3YXJkIiwiY2hlY2tlZCI6ZmFsc2UsInNsdWciOiJyZXdhcmQifSx7InRpdGxlIjoiRG9uYXRpb24iLCJjaGVja2VkIjpmYWxzZSwic2x1ZyI6ImRvbmF0aW9uIn0seyJ0aXRsZSI6IkJ1eS10by1sZXQiLCJjaGVja2VkIjpmYWxzZSwic2x1ZyI6ImJ1eS10by1sZXQifSx7InRpdGxlIjoiTWluaS1ib25kcyIsImNoZWNrZWQiOmZhbHNlLCJzbHVnIjoibWluaS1ib25kcyJ9XSwicGxhY2Vob2xkZXIiOiJTZWxlY3QgaW52ZXN0bWVudCB0eXBlIiwidHlwZSI6ImludmVzdG1lbnRUeXBlIn0seyJvcHRpb25zIjpbeyJ0aXRsZSI6IlJlYWwgZXN0YXRlIiwiY2hlY2tlZCI6dHJ1ZSwic2x1ZyI6InJlYWwtZXN0YXRlIn0seyJ0aXRsZSI6IlN0YXJ0dXBzIiwiY2hlY2tlZCI6ZmFsc2UsInNsdWciOiJzdGFydHVwcyJ9LHsidGl0bGUiOiJTTUUiLCJjaGVja2VkIjpmYWxzZSwic2x1ZyI6InNtZSJ9LHsidGl0bGUiOiJTdXN0YWluYWJpbGl0eSIsImNoZWNrZWQiOmZhbHNlLCJzbHVnIjoic3VzdGFpbmFiaWxpdHkifSx7InRpdGxlIjoiTGl0aWdhdGlvbiIsImNoZWNrZWQiOmZhbHNlLCJzbHVnIjoibGl0aWdhdGlvbiJ9LHsidGl0bGUiOiJHcmVlbiBlbmVyZ3kiLCJjaGVja2VkIjpmYWxzZSwic2x1ZyI6ImdyZWVuLWVuZXJneSJ9LHsidGl0bGUiOiJIZWFsdGggJiBTY2llbmNlIiwiY2hlY2tlZCI6ZmFsc2UsInNsdWciOiJoZWFsdGgtc2NpZW5jZSJ9LHsidGl0bGUiOiJMb2dpc3RpY3MiLCJjaGVja2VkIjpmYWxzZSwic2x1ZyI6ImxvZ2lzdGljcyJ9LHsidGl0bGUiOiJQZXJzb25hbCBsb2FucyIsImNoZWNrZWQiOmZhbHNlLCJzbHVnIjoicGVyc29uYWwtbG9hbnMifSx7InRpdGxlIjoiQXJ0IiwiY2hlY2tlZCI6ZmFsc2UsInNsdWciOiJhcnQifSx7InRpdGxlIjoiTW9ydGdhZ2VzIiwiY2hlY2tlZCI6ZmFsc2UsInNsdWciOiJtb3J0Z2FnZXMifSx7InRpdGxlIjoiU29jaWFsIGNhdXNlIiwiY2hlY2tlZCI6ZmFsc2UsInNsdWciOiJzb2NpYWwtY2F1c2UifSx7InRpdGxlIjoiRWR1Y2F0aW9uIiwiY2hlY2tlZCI6ZmFsc2UsInNsdWciOiJlZHVjYXRpb24ifSx7InRpdGxlIjoiRmFybWluZyIsImNoZWNrZWQiOmZhbHNlLCJzbHVnIjoiZmFybWluZyJ9LHsidGl0bGUiOiJTcG9ydCIsImNoZWNrZWQiOmZhbHNlLCJzbHVnIjoic3BvcnQifSx7InRpdGxlIjoiTWFyaXRpbWUiLCJjaGVja2VkIjpmYWxzZSwic2x1ZyI6Im1hcml0aW1lIn1dLCJwbGFjZWhvbGRlciI6IlNlbGVjdCBpbmR1c3RyeSIsInR5cGUiOiJpbmR1c3RyeSJ9LHsib3B0aW9ucyI6W3sidGl0bGUiOiJBbmRvcnJhIiwiY2hlY2tlZCI6ZmFsc2UsInNsdWciOiJhbmRvcnJhIn0seyJ0aXRsZSI6IkFsYmFuaWEiLCJjaGVja2VkIjpmYWxzZSwic2x1ZyI6ImFsYmFuaWEifSx7InRpdGxlIjoiQXVzdHJpYSIsImNoZWNrZWQiOmZhbHNlLCJzbHVnIjoiYXVzdHJpYSJ9LHsidGl0bGUiOiJCZWxnaXVtIiwiY2hlY2tlZCI6ZmFsc2UsInNsdWciOiJiZWxnaXVtIn0seyJ0aXRsZSI6IkJ1bGdhcmlhIiwiY2hlY2tlZCI6ZmFsc2UsInNsdWciOiJidWxnYXJpYSJ9LHsidGl0bGUiOiJDcm9hdGlhIiwiY2hlY2tlZCI6ZmFsc2UsInNsdWciOiJjcm9hdGlhIn0seyJ0aXRsZSI6IkN5cHJ1cyIsImNoZWNrZWQiOmZhbHNlLCJzbHVnIjoiY3lwcnVzIn0seyJ0aXRsZSI6IkN6ZWNoIFJlcHVibGljIiwiY2hlY2tlZCI6ZmFsc2UsInNsdWciOiJjemVjaC1yZXB1YmxpYyJ9LHsidGl0bGUiOiJEZW5tYXJrIiwiY2hlY2tlZCI6ZmFsc2UsInNsdWciOiJkZW5tYXJrIn0seyJ0aXRsZSI6IkVzdG9uaWEiLCJjaGVja2VkIjpmYWxzZSwic2x1ZyI6ImVzdG9uaWEifSx7InRpdGxlIjoiRmlubGFuZCIsImNoZWNrZWQiOmZhbHNlLCJzbHVnIjoiZmlubGFuZCJ9LHsidGl0bGUiOiJGcmFuY2UiLCJjaGVja2VkIjpmYWxzZSwic2x1ZyI6ImZyYW5jZSJ9LHsidGl0bGUiOiJHZXJtYW55IiwiY2hlY2tlZCI6ZmFsc2UsInNsdWciOiJnZXJtYW55In0seyJ0aXRsZSI6IkdyZWVjZSIsImNoZWNrZWQiOmZhbHNlLCJzbHVnIjoiZ3JlZWNlIn0seyJ0aXRsZSI6Ikh1bmdhcnkiLCJjaGVja2VkIjpmYWxzZSwic2x1ZyI6Imh1bmdhcnkifSx7InRpdGxlIjoiSWNlbGFuZCIsImNoZWNrZWQiOmZhbHNlLCJzbHVnIjoiaWNlbGFuZCJ9LHsidGl0bGUiOiJJcmVsYW5kIiwiY2hlY2tlZCI6ZmFsc2UsInNsdWciOiJpcmVsYW5kIn0seyJ0aXRsZSI6IklzcmFlbCIsImNoZWNrZWQiOmZhbHNlLCJzbHVnIjoiaXNyYWVsIn0seyJ0aXRsZSI6Ikl0YWx5IiwiY2hlY2tlZCI6ZmFsc2UsInNsdWciOiJpdGFseSJ9LHsidGl0bGUiOiJMYXR2aWEiLCJjaGVja2VkIjpmYWxzZSwic2x1ZyI6ImxhdHZpYSJ9LHsidGl0bGUiOiJMaWVjaHRlbnN0ZWluIiwiY2hlY2tlZCI6ZmFsc2UsInNsdWciOiJsaWVjaHRlbnN0ZWluIn0seyJ0aXRsZSI6IkxpdGh1YW5pYSIsImNoZWNrZWQiOmZhbHNlLCJzbHVnIjoibGl0aHVhbmlhIn0seyJ0aXRsZSI6Ikx1eGVtYm91cmciLCJjaGVja2VkIjpmYWxzZSwic2x1ZyI6Imx1eGVtYm91cmcifSx7InRpdGxlIjoiTWFjZWRvbmlhIiwiY2hlY2tlZCI6ZmFsc2UsInNsdWciOiJtYWNlZG9uaWEifSx7InRpdGxlIjoiTWFsdGEiLCJjaGVja2VkIjpmYWxzZSwic2x1ZyI6Im1hbHRhIn0seyJ0aXRsZSI6Ik1vbGRvdmEiLCJjaGVja2VkIjpmYWxzZSwic2x1ZyI6Im1vbGRvdmEifSx7InRpdGxlIjoiTW9uYWNvIiwiY2hlY2tlZCI6ZmFsc2UsInNsdWciOiJtb25hY28ifSx7InRpdGxlIjoiTmV0aGVybGFuZHMiLCJjaGVja2VkIjpmYWxzZSwic2x1ZyI6Im5ldGhlcmxhbmRzIn0seyJ0aXRsZSI6Ik5vcndheSIsImNoZWNrZWQiOmZhbHNlLCJzbHVnIjoibm9yd2F5In0seyJ0aXRsZSI6IlBvbGFuZCIsImNoZWNrZWQiOmZhbHNlLCJzbHVnIjoicG9sYW5kIn0seyJ0aXRsZSI6IlBvcnR1Z2FsIiwiY2hlY2tlZCI6ZmFsc2UsInNsdWciOiJwb3J0dWdhbCJ9LHsidGl0bGUiOiJSb21hbmlhIiwiY2hlY2tlZCI6ZmFsc2UsInNsdWciOiJyb21hbmlhIn0seyJ0aXRsZSI6IlR1cmtleSIsImNoZWNrZWQiOmZhbHNlLCJzbHVnIjoidHVya2V5In0seyJ0aXRsZSI6IlNlcmJpYSIsImNoZWNrZWQiOmZhbHNlLCJzbHVnIjoic2VyYmlhIn0seyJ0aXRsZSI6IlNsb3Zha2lhIiwiY2hlY2tlZCI6ZmFsc2UsInNsdWciOiJzbG92YWtpYSJ9LHsidGl0bGUiOiJTbG92ZW5pYSIsImNoZWNrZWQiOmZhbHNlLCJzbHVnIjoic2xvdmVuaWEifSx7InRpdGxlIjoiU3BhaW4iLCJjaGVja2VkIjpmYWxzZSwic2x1ZyI6InNwYWluIn0seyJ0aXRsZSI6IlN3ZWRlbiIsImNoZWNrZWQiOmZhbHNlLCJzbHVnIjoic3dlZGVuIn0seyJ0aXRsZSI6IlN3aXR6ZXJsYW5kIiwiY2hlY2tlZCI6ZmFsc2UsInNsdWciOiJzd2l0emVybGFuZCJ9LHsidGl0bGUiOiJVbml0ZWQgS2luZ2RvbSIsImNoZWNrZWQiOmZhbHNlLCJzbHVnIjoidW5pdGVkLWtpbmdkb20ifSx7InRpdGxlIjoiVWtyYWluZSIsImNoZWNrZWQiOmZhbHNlLCJzbHVnIjoidWtyYWluZSJ9XSwicGxhY2Vob2xkZXIiOiJTZWxlY3QgY291bnRyeSBvZiBvcGVyYXRpb24iLCJ0eXBlIjoiY291bnRyeSJ9LHsib3B0aW9ucyI6W3sidGl0bGUiOiIxIHllYXIiLCJjaGVja2VkIjp0cnVlLCJzbHVnIjoiMS15ZWFyIn0seyJ0aXRsZSI6IjItMyB5ZWFycyIsImNoZWNrZWQiOnRydWUsInNsdWciOiIyLTMteWVhcnMifSx7InRpdGxlIjoiNC01IHllYXJzIiwiY2hlY2tlZCI6ZmFsc2UsInNsdWciOiI0LTUteWVhcnMifSx7InRpdGxlIjoibW9yZSB0aGFuIDUiLCJjaGVja2VkIjpmYWxzZSwic2x1ZyI6Im1vcmUtdGhhbi01In1dLCJwbGFjZWhvbGRlciI6IlllYXJzIG9uIG1hcmtldCIsInR5cGUiOiJ5ZWFyRm91bmRlZCJ9LHsib3B0aW9ucyI6W3sidGl0bGUiOiJZZXMiLCJjaGVja2VkIjpmYWxzZSwic2x1ZyI6InllcyJ9XSwicGxhY2Vob2xkZXIiOiJFQ1NQIGxpY2Vuc2UiLCJ0eXBlIjoibGljZW5zZU51bWJlciJ9XSwiaW52ZXN0bWVudFR5cGUiOnsiZmluYWwiOlsiRGVidCJdLCJtaWRkbGUiOlsiRGVidCJdfSwiaW5kdXN0cnkiOnsiZmluYWwiOlsiUmVhbCBlc3RhdGUiXSwibWlkZGxlIjpbIlJlYWwgZXN0YXRlIl19LCJjb3VudHJ5Ijp7ImZpbmFsIjpbXSwibWlkZGxlIjpbXX0sInllYXJGb3VuZGVkIjp7ImZpbmFsIjpbIjEgeWVhciIsIjItMyB5ZWFycyJdLCJtaWRkbGUiOlsiMSB5ZWFyIiwiMi0zIHllYXJzIl19LCJsaWNlbnNlTnVtYmVyIjp7ImZpbmFsIjpbXSwibWlkZGxlIjpbXX19fQ==","status":200,"tags":["/platform/[investmentType]/[industry]/page"],"url":"http://localhost:3000/api/get-type/investment/?debt=Debt&and&1-year=1%20year&2-3-years=2-3%20years&page=1&perPage=12&typeFilter=investmentType-yearFounded"},"revalidate":31536000}